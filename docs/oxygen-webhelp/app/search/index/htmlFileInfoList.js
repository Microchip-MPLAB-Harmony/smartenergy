define(function () {
return ["GUID-000D4A61-94C6-4D5C-BCA3-4D0D98D90389.html@@@1.1.3.4.10 DRV_METROLOGY_GetState Function@@@DRV_METROLOGY_STATE DRV_METROLOGY_GetState ( void ); Get the status of the metrology library application running on the second processor. Metrology function state: 0 = HALT: Metrology module is...","GUID-00C1F23A-49A2-48A7-B812-4CAD4C73DD23.html@@@1.2.3.4.6 SRV_PSERIAL_ParseTxMessage Function@@@void SRV_PSERIAL_ParseTxMessage ( DRV_PLC_PHY_TRANSMISSION_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts a PLC frame to be transmitted from SRV_PSERIAL_CMD_PHY_SEND_MSG Serial frame. Takes a SendMsg...","GUID-01855CB4-57E8-4BE3-A093-14CBFFAABD51.html@@@1.1.1.4.6 DRV_PLC_PHY_PIBSet Function@@@void DRV_PLC_PHY_PIBSet ( const DRV_HANDLE handle, DRV_PLC_PHY_PIB_OBJ *pibObj ); Allows a client to set information to PLC transceiver on PHY information base (PIB). This routine sets PHY data...","GUID-018CC3A0-CE2F-4BE6-AC40-66721317171E.html@@@1.2.4.4.5 SRV_PVDDMON_Restart Function@@@void SRV_PVDDMON_Restart ( SRV_PVDDMON_CMP_MODE cmpMode ); Restart the PVDD Monitor service. This routine restarts the PVDD Monitor service, and allows clients to modify the comparison mode in...","GUID-033E46F6-14A5-4DD2-9BFC-BDA2AE973092.html@@@1.2.2.4.8 SRV_PSNIFFER_ConvertToneMask Function@@@void SRV_PSNIFFER_ConvertToneMask ( uint8_t* pToneMaskDst, uint8_t* pToneMaskSrc ); Converts a Tone Mask configuration coming from an external tool to the right format to be configured on PLC PHY...","GUID-0582DE0E-C854-4C96-BA08-C165BF90A15F.html@@@1.1.2.4.15 DRV_G3_MACRT_ExternalInterruptHandler Function@@@void DRV_G3_MACRT_ExternalInterruptHandler ( const PIO_PIN pin, const uintptr_t context ); Allows application to register callback for PLC Interrupt pin. This function allows a client to register a...","GUID-065E9B11-C994-458B-81A0-245A6DDCA060.html@@@1.1.3.4.5 DRV_METROLOGY_Start Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Start ( void ); Starts the metrology driver. This routine shoud be called until the metrology library application running in the second processor is ready to be...","GUID-08A6DB8F-C8BE-470F-A8C9-FA1021C398C0.html@@@1.2.1.4.2 Library Interface (PRIME)@@@If the PLC Driver uses PRIME PHY, the PLC PHY Coupling service library provides the following interfaces: Functions Name Description SRV_PCOUP_Get_Default_Channel Get the default PRIME channel...","GUID-097E35C9-D7F6-4C64-8BBD-16AA588ACA82.html@@@1.3.1.1 Block Diagram@@@The Demo Meter Application running in the core 0 is composed of several tasks running simultaneously that manage both metrology information and external events. The relationship between tasks and...","GUID-0A58D291-CDCA-4C22-BAE0-D55E4517D530.html@@@1.2.6.4.7 SRV_USI_Send_Message Function@@@void SRV_USI_Send_Message ( const SRV_USI_HANDLE handle, SRV_USI_PROTOCOL_ID protocol, uint8_t *data, size_t length ) Sends a message through serial interface (USI). This function is used to send a...","GUID-0C07CB6E-5CF9-4C7E-AC48-965198152AAF.html@@@1.2.6.4.8 SRV_USI_PROTOCOL_ID Enum@@@typedef enum { /* PRIME Manager generic */ SRV_USI_PROT_ID_MNGP_PRIME = 0x00 , /* PRIME Manager: GETQRY */ SRV_USI_PROT_ID_MNGP_PRIME_GETQRY = 0x00 , /* PRIME Manager: GETRSP */...","GUID-0C282E5D-31BB-452A-B8CB-BEF5DDA61428.html@@@1.2.6.1 How the Library Works@@@USI service is a wrapper that provides the interface between the Smart Energy stacks and the serial communications channel (UART or USB CDC). For USI message transmission, SRV_USI_Send_Message...","GUID-0C474247-A02D-4DAA-B7CA-976F25A16403.html@@@1.1.2.4.4 DRV_G3_MACRT_TxRequest Function@@@void DRV_G3_MACRT_TxRequest ( const DRV_HANDLE handle, uint8_t *pData, uint16_t length ); Allows a client to transmit MAC RT data through Power Line (PLC). This routine sends a new data message...","GUID-0C6270F0-FEC3-47D2-8CC7-06CCC0833746.html@@@1.3.1.4 APP_METROLOGY Module@@@The APP_METROLOGY module is in charge of obtaining the data from the Metrology library running in the core 1 of the microcontroller. The module provides a series of functions to read and write the...","GUID-0D323609-4067-4759-A4E0-F8CE70D88B7F.html@@@1.1.3.4.2 DRV_METROLOGY_Reinitialize Function@@@SYS_MODULE_OBJ DRV_METROLOGY_Reinitialize ( SYS_MODULE_INIT * init ); Re-initializes the metrology driver according to the init parameter. This routine re-initializes the metrology driver resetting...","GUID-0D3D6A14-02C7-4AD3-B221-BC057153A38B.html@@@1.1.1.4.25.9 DRV_PLC_PHY_SIGNAL_CAPTURE_INFO Enum@@@typedef struct { uint8_t uc_num_frags; uint8_t uc_status; } DRV_PLC_PHY_SIGNAL_CAPTURE_INFO; Structure defining information about PRIME Noise Capture This structure contains the information the status...","GUID-0E9A7DEF-904D-451D-A356-FACF9360BA4F.html@@@1.1.3.4.41 DRV_METROLOGY_STATE Enum@@@typedef enum { DRV_METROLOGY_STATE_HALT = STATUS_STATUS_HALT, DRV_METROLOGY_STATE_RESET = STATUS_STATUS_RESET, DRV_METROLOGY_STATE_INIT_DSP = STATUS_STATUS_INIT_DSP, DRV_METROLOGY_STATE_DSP_READY =...","GUID-1279B3B1-7AC6-4986-8E88-539CBCEF5F52.html@@@1.2.2.3 Configuring The Library@@@PLC PHY Sniffer Service is configured via MCC. Below is the Snapshot of the MCC configuration window for PLC PHY Sniffer Service and brief description. Figure .\u2000 PLC PHY Sniffer Service configuration...","GUID-12833367-18A3-4273-875A-63BBDDAEB68F.html@@@1.1.1.4.24 G3 Data types and constants@@@G3 Data types and constants...","GUID-14C662AB-69E2-4C87-9869-99B3A87461C8.html@@@1.1.3.4.16 DRV_METROLOGY_SetControl Function@@@void DRV_METROLOGY_SetControl (DRV_METROLOGY_CONTROL * pControl); Establishes the content of all control registers at once. Overwrite the value of the every control register in the shared memory at...","GUID-15B110AF-D87C-4DFC-A9B4-B32D12B324A0.html@@@1.1.3.4.1 DRV_METROLOGY_Initialize Function@@@SYS_MODULE_OBJ DRV_METROLOGY_Initialize ( SYS_MODULE_INIT * init, uint32_t resetValue ); Initializes the metrology driver according to the init parameter and the cause of the reset of the main...","GUID-16D2166F-F65C-431C-951A-2C4B18120281.html@@@1.2.2.4.1 SRV_PSNIFFER_GetCommand Function@@@SRV_PSNIFFER_COMMAND SRV_PSNIFFER_GetCommand ( uint8_t* pData ); Extracts Command field from Sniffer frame. Takes Sniffer frame as parameter and extracts the Command field from the expected position...","GUID-173A4FCA-4C46-47BE-BCDA-0159C4CF2505.html@@@1.1.1.1 How the Library Works@@@The PLC PHY driver library is a single-client, single-instance based driver interface. Abstraction Model The PLC PHY library communicates with a PLC transceiver using an SPI port, Direct Memory Access...","GUID-1750537D-FAC6-4DE9-A207-7F92FCF38D72.html@@@1.1.2.4.31 MAC_RT_RX_PARAMETERS_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* High Priority */ bool highPriority; /* PDU Link Quality */ uint8_t pduLinkQuality; /* Phase Differential */ uint8_t phaseDifferential; /*...","GUID-18109125-3906-41A5-8221-A41436ADE4A4.html@@@1.1.3.4.35 DRV_METROLOGY_CALIBRATION Struct@@@typedef struct { DRV_METROLOGY_CALIBRATION_REFS references; uint32_t featureCtrl0Backup; double freq; uint32_t numIntegrationPeriods; uint64_t dspAccIa; uint64_t dspAccIb; uint64_t dspAccIc; uint64_t...","GUID-1A5C5506-BEF0-4666-9A96-8C3D7C51211A.html@@@1.2.3.1 How the Library Works@@@PLC Serial library allow accessing to PLC PHY Driver API through a Serial interface. Library manages commands coming from a Serial interface through the USI library, these commands include access to...","GUID-1B2EA98D-2D73-4430-B618-98A85A520318.html@@@1.2.1.4.1.6 SRV_PLC_PCOUP_DATA Struct@@@typedef struct { /* Target RMS values in HIGH mode for dynamic Tx gain */ uint32_t rmsHigh[SRV_PCOUP_MAX_NUM_TX_LEVELS]; /* Target RMS values in VLOW mode for dynamic Tx gain */ uint32_t...","GUID-1B8BAD12-85A8-4E0E-87A8-CE8E4D5867C9.html@@@1.2.3.4.3 SRV_PSERIAL_SerialGetPIB Function@@@size_t SRV_PSERIAL_SerialGetPIB ( uint8_t* pDataDst, DRV_PLC_PHY_PIB_OBJ* pDataSrc ); Serializes a response to a SRV_PSERIAL_CMD_PHY_GET_CFG command. Takes a DRV_PLC_PHY_PIB_OBJ object as parameter...","GUID-1C3755D7-2C24-4854-B5B1-9F335BA0389D.html@@@1.2.2.4.6 SRV_PSNIFFER_SetTxPayloadSymbols Function@@@void SRV_PSNIFFER_SetTxPayloadSymbols ( uint16_t payloadSym ); Sets the number of transmitted symbols on Sniffer library for further use. Number of transmitted symbols is set on Sniffer library so...","GUID-1C383DE6-835B-43D8-812B-E35155090B0F.html@@@1.1.3.4.34 DRV_METROLOGY_CALIBRATION_REFS Struct@@@typedef struct { double aimVA; double aimIA; double angleA; double aimVB; double aimIB; double angleB; double aimVC; double aimIC; double angleC; DRV_METROLOGY_PHASE_ID lineId; }...","GUID-1CC5DBE3-7849-4F27-B8F6-C13BB5E48EB1.html@@@1.2.4.3 Configuring The Library@@@PVDD Monitor Service Specific User Configurations PVDD Monitor Service library should be configured via MCC. Below is the Snapshot of the MCC configuration window for PVDD Monitor Service and brief...","GUID-1D099440-709D-4D2E-AE2C-163F5D2415CE.html@@@1.1.2.4.18 DRV_G3_MACRT_SleepIndCallbackRegister Function@@@void DRV_G3_MACRT_SleepIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_SLEEP_IND_CALLBACK callback ); Allows a client to set an sleep mode disable event handling function for the...","GUID-1D2064DA-2F59-46DC-8B62-9D61B1B299DD.html@@@1.2.2.4.3 SRV_PSNIFFER_SerialCfmMessage Function@@@size_t SRV_PSNIFFER_SerialCfmMessage ( uint8_t* pDataDst, DRV_PLC_PHY_TRANSMISSION_CFM_OBJ* pCfmObj ); Serializes a transmitted PLC frame along with its parameters. This function takes a previously...","GUID-1EB20D0D-FAB8-46CF-B99E-66BDD7CB6A0F.html@@@1.1.3.4.39 DRV_METROLOGY_AFE_DATA Struct@@@typedef struct { uint32_t energy; DRV_METROLOGY_AFE_EVENTS afeEvents; uint32_t RMS[RMS_TYPE_NUM]; } DRV_METROLOGY_AFE_DATA; Identifies the data calculated from the metrology AFE measurements. Field...","GUID-2023FB1C-E7E7-4813-9BA3-480FEB57627B.html@@@1.1.3 Metrology Driver@@@This driver defines the interface of Microchip smart meter PIC32CXMTSH/C metrology firmware. It describes the metrology control registers, metrology status registers and the quantities which shall be...","GUID-2073D6BA-CDEC-4E93-9C98-8C6C78D11FF6.html@@@1.1.2.4.22 DRV_G3_MACRT_TX_CFM_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_TX_CFM_CALLBACK )( MAC_RT_TX_CFM_OBJ *cfmObj ); Pointer to a MAC RT Driver Transmission Confirm Event handler function. This data type defines the required function...","GUID-2155582A-0939-41A5-91DE-53D1FC6F1003.html@@@1.2.6.4.14 SRV_USI_INIT Struct@@@typedef struct { const void * deviceInitData; const SRV_USI_DEV_DESC* consDevDesc; uint32_t deviceIndex; void * pWrBuffer; size_t wrBufferSize; } SRV_USI_INIT; Contains the data required to initialize...","GUID-2188B5B7-760D-4261-AEB9-DDCD9B01A109.html@@@1.3 Demo Applications@@@2 demo applications have been developed to guide customers in creating or adding functionality to their own applications. Smart Energy Demo Meter Application: an example of metering application using...","GUID-21C6829A-CB89-4FE2-A0B6-7467DEAB58C5.html@@@1.1.3.1 How the Metrology driver library works@@@This driver has been designed to be only used with PIC32CXMTSH or PIC32CXMTC devices, which are parts of the MISTRAL (PIC32CXMT) device family of the Smart Energy group. Depending on which device is...","GUID-220B3861-36A8-4139-8554-F40D11E3C262.html@@@1.2.4.1 How the Library Works@@@To assure the integrity of the amplification stage embedded in the PL460 device, the PVDD Monitor service implements a window comparator in which the power supply of PLC driver amplifier and...","GUID-2356AE43-5731-46E5-8556-A282237A8145.html@@@1.1.3.3 Metrology driver Configurations@@@Metrology Specific User Configurations Metrology Driver library should be configured via MCC. Below is the Snapshot of the MCC configuration window for Metrology driver and brief description. Figure...","GUID-23C053D8-E569-439C-B230-D50BA21A43CF.html@@@1.1.3.4.30 DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK)(uint8_t harmonicNum); Harmonic Analysis Callback Function Handle. Harmonic Analysis Callback Function Handle. Param Description harmonicNum...","GUID-261B02C6-E685-4C12-8EB7-5E717F054F60.html@@@1.1.1 PLC PHY Driver@@@This driver provides a non-blocking interface with the external on-chip PLC transceiver. The library uses the SPI peripheral library (PLIB) and the Direct Memory Access controller to interface with...","GUID-292AE054-43EB-4942-A030-F4D2A2F55F87.html@@@1.1.2.4.10 DRV_G3_MACRT_RxParamsIndCallbackRegister Function@@@void DRV_G3_MACRT_RxParamsIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK callback ); Allows a client to set a reception parameters event handling function for...","GUID-29D4D959-1677-4A62-8B08-BE81ECEAB8E6.html@@@1.2.1.4 Library Interface@@@The PLC PHY Coupling service library interface depends on the PLC protocol used by the PLC Driver (G3-PLC or PRIME)...","GUID-2C3CD0E2-6C3D-459E-BFED-C275DBCEF3E1.html@@@1.1.3.4.14 DRV_METROLOGY_GetAccData Function@@@DRV_METROLOGY_ACCUMULATORS * DRV_METROLOGY_GetAccData ( void ); Get the pointer to the accumulator registers of the metrology library application running on the second processor. Accumulator registers...","GUID-2D4B1FB0-E202-4D55-BD07-801884E97291.html@@@1.1.3.4.23 APP_METROLOGY_StartCalibration Function@@@void APP_METROLOGY_StartCalibration ( void ); Starts internal calibration process. This routine is used to automatically calibrate the board. It requires accurate and stable voltage and current...","GUID-313FB4A6-7FAE-4AF5-AA07-CBD513967D27.html@@@1.1.1.4.25.8 DRV_PLC_PHY_SIGNAL_CAPTURE_STATE Enum@@@typedef enum { SIGNAL_CAPTURE_IDLE, SIGNAL_CAPTURE_RUNNING, SIGNAL_CAPTURE_READY, } DRV_PLC_PHY_SIGNAL_CAPTURE_STATE; PRIME Noise Capture States This Enum contains every available states in PRIME...","GUID-329198A1-BC49-4122-B71D-BEF5575E0C6E.html@@@1.2.2.2 Using The Library@@@The PLC PHY Sniffer library is an add-on that can be used along with the PLC PHY Driver or the G3 PLC MAC RT Driver . The PHY or MAC RT driver is the one in charge of PLC communications, while the...","GUID-35725EB2-BDEE-4B6A-B204-9B892470097A.html@@@1.1.1.4.25.1 DRV_PLC_PHY_ID Enum@@@typedef enum { PLC_ID_HOST_DESCRIPTION_ID = 0x0100 , PLC_ID_HOST_MODEL_ID = 0x010A , PLC_ID_HOST_PHY_ID = 0x010C , PLC_ID_HOST_PRODUCT_ID = 0x0110 , PLC_ID_HOST_VERSION_ID = 0x0112...","GUID-3778B1C9-F454-4097-93C1-EB63083FD1AD.html@@@1.2.1.4.2.4 SRV_PLC_PCOUP_CHANNEL_DATA Struct@@@typedef struct { /* Target RMS values in HIGH mode for dynamic Tx gain */ uint32_t rmsHigh[ 8 ]; /* Target RMS values in VLOW mode for dynamic Tx gain */ uint32_t rmsVLow[ 8 ]; /* Threshold RMS values...","GUID-388C8E2A-F0FE-40EC-8115-8680F569945E.html@@@1.1.3.4.42 DRV_METROLOGY_INIT Struct@@@typedef struct { uint32_t regBaseAddress; uint32_t binStartAddress; uint32_t binEndAddress; } DRV_METROLOGY_INIT; Defines the data required to initialize the Metrology driver. Field description...","GUID-39692EBF-C9ED-41F6-A1BB-52B76247E293.html@@@1.1.2.4.5 DRV_G3_MACRT_PIBGet Function@@@MAC_RT_STATUS DRV_G3_MACRT_PIBGet ( const DRV_HANDLE handle, MAC_RT_PIB_OBJ *pibObj ); Allows a client to get information from PLC transceiver about MAC RT and PHY information base (PIB). This routine...","GUID-3BCCA565-F529-442A-BE9B-324CCA7F2702.html@@@1.1.1.4.24.11 DRV_PLC_PHY_PIB_OBJ Struct@@@typedef struct { /* Pointer to PIB data */ uint8_t *pData; /* PLC Information base identification */ DRV_PLC_PHY_ID id; /* Length in bytes of the data information */ uint16_t length; }...","GUID-3DBF4BBC-895F-4E64-901F-C76DB2918FDD.html@@@1.2 Service Libraries@@@The Smart Energy Services are software components designed to be used in conjuction with Smart Energy Drivers in order to add specific functionalities. In the Smart Energy applications there are...","GUID-3DCCAE10-97B3-4C66-89AA-0A031CE6814F.html@@@1.1.2.2 Using The Library@@@The G3 PLC MACRT library builds on top of an SPI peripheral library (PLIB) to communicate with a PLC transceiver in which G3-PLC lower MAC and PHY layers run.However, the underlying use of an SPI port...","GUID-3F0A0B53-ED4C-474E-8255-0416500DEB0B.html@@@1.1.2.4.34.1 G3 MAC RT IBs@@@Description: Maximum value of back-off exponent. It should always be greater than macMinBE. Access: Read-write. Value Range: 1 byte . Default Value: 8. Description: Beacon frame sequence number...","GUID-3FE78AB9-5672-4748-BEEE-ADD364C8774A.html@@@1.1.1.4.1 DRV_PLC_PHY_Initialize Function@@@SYS_MODULE_OBJ DRV_PLC_PHY_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); Initializes the PLC PHY instance for the specified driver index. This routine initializes...","GUID-406ADE0C-D859-4B2B-9B58-E75C9A66D04B.html@@@1.1.2.4.29 DRV_G3_MACRT_SLEEP_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_SLEEP_IND_CALLBACK )( void ); Pointer to notification when Sleep Mode is disabled and MAC RT driver is available to be used again. This data type defines the required...","GUID-41D05A4C-2080-40F6-A2A2-D30E77AC5A64.html@@@1.1.2.4.28 DRV_G3_MACRT_EXCEPTION_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_EXCEPTION_CALLBACK )( DRV_G3_MACRT_EXCEPTION exception ); Pointer to a G3 MAC RT Driver Exceptions Event handler function. This data type defines the required function...","GUID-42DAEFE9-160F-4E01-961A-6BA11105CD6F.html@@@1.1.3.4.19 DRV_METROLOGY_GetRMSSign Function@@@DRV_METROLOGY_RMS_SIGN DRV_METROLOGY_GetRMSSign (DRV_METROLOGY_RMS_TYPE type); Gets the sign of the last RMS value of the selected measurement type. For further information about RMS types, refer to...","GUID-43E7E120-2618-422D-AC8B-23E78FF268AE.html@@@1.1.3.4.32 DRV_METROLOGY_GAIN_TYPE Enum@@@typedef enum { GAIN_ 1 = 0 , GAIN_ 2 = 1 , GAIN_ 4 = 2 , GAIN_ 8 = 3 , GAIN_NUM_TYPE } DRV_METROLOGY_GAIN_TYPE; Gain selected for use in the ADC front-end. On Current measurement channels gain for...","GUID-443BB1EE-2B22-45AB-AD80-E0011189606F.html@@@1.1.1.4.24.7 DRV_PLC_PHY_MAX_PSDU_LEN_PARAMS Struct@@@typedef struct { /* Modulation type */ DRV_PLC_PHY_MOD_TYPE modType; /* Modulation scheme */ DRV_PLC_PHY_MOD_SCHEME modScheme; /* Flag to indicate whether 2 Reed-Solomon blocks have to be used (only...","GUID-4664A371-1B3C-475D-81FD-8989A2A2E768.html@@@1.3.2.1 Configuring Dual Core Demo Main Application@@@Dual Core Demo Main Application Configurations Dual Core Demo Main Application should be configured via MCC. Below is the Snapshot of the MCC configuration window for Dual Core Demo Main Application...","GUID-47718A7D-D9A0-4D2D-BFB3-2F98E35874CA.html@@@1.1.3.4.6 DRV_METROLOGY_Tasks Function@@@void DRV_METROLOGY_Tasks (SYS_MODULE_OBJ object); Routine that performs the tasks necessary to maintain a state machine in the metrology driver. Routine that performs the tasks necessary to maintain a...","GUID-47A5CBE3-CDC3-4BF1-99E9-C204EA3698E6.html@@@1.3.2.3 Linking Dual Core Demo Applications@@@Once the Main and Secondary projects have been created, developed and debugged, it is time to link them in preparation for image merging with the Secondary project. Set Up the Primary Project to work...","GUID-48BB87BF-AAC0-4DE0-A21F-6F00E5B1FF24.html@@@1.2.6.4.12 SRV_USI_CALLBACK Typedef@@@typedef void ( * SRV_USI_CALLBACK ) ( uint8_t *pData, size_t length ); Pointer to an USI service callback function. This data type defines a pointer to an USI service callback function, thus defining...","GUID-4E896D85-86B1-4721-880B-214CEE3819BE.html@@@1.2.5 PLC CRC Service@@@Some Smart Energy components, such as PLC stacks and the USI Service for seralization, use CRCs to protect frame integrity on communication media (PLC or Serial). This library offers CRC...","GUID-4ED8B3F6-0288-41C8-BA4B-F0A0FEE81E7A.html@@@1.1.3.4.17 DRV_METROLOGY_GetEnergyValue Function@@@uint32_t DRV_METROLOGY_GetEnergyValue (bool restartEnergy); Gets the active energy value. Gets the active energy value. Param Description restartEnergy Flag to indicate if the energy value should be...","GUID-50946BC4-586A-4660-A918-D3CED116127A.html@@@1.1.1.4.18 DRV_PLC_PLIB_INTERFACE Struct@@@typedef struct { /* PLC SPI PLIB Transfer Setup */ DRV_PLC_SPI_PLIB_TRANSFER_SETUP spiPlibTransferSetup; /* SPI transmit DMA channel. */ SYS_DMA_CHANNEL dmaChannelTx; /* Only visible if used SPI...","GUID-50946BC4-586A-4660-A918-D3CED116127A_2.html@@@1.1.2.4.38 DRV_PLC_PLIB_INTERFACE Struct@@@typedef struct { /* PLC SPI PLIB Transfer Setup */ DRV_PLC_SPI_PLIB_TRANSFER_SETUP spiPlibTransferSetup; /* SPI transmit DMA channel. */ SYS_DMA_CHANNEL dmaChannelTx; /* Only visible if used SPI...","GUID-5153A36D-0155-4CA6-9FBC-B4E4522A1AF3.html@@@1.3.1.5 APP_ENERGY Module@@@The APP_ENERGY module is in charge of saving the data coming from the metrology to a file system in the external flash memory. The main function of the module is APP_ENERGY_Task which runs a...","GUID-517695B0-A450-411B-8033-B8B837C26FD3.html@@@1.1.2.4.14 DRV_G3_MACRT_ExceptionCallbackRegister Function@@@void DRV_G3_MACRT_ExceptionCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_EXCEPTION_CALLBACK callback ); Allows a client to set an exception event handling function for the driver to...","GUID-51BE7E9A-45DF-4673-9AE2-7D7163536E44.html@@@1.1.1.4.5 DRV_PLC_PHY_PIBGet Function@@@void DRV_PLC_PHY_PIBGet ( const DRV_HANDLE handle, DRV_PLC_PHY_PIB_OBJ *pibObj ); Allows a client to get information from PLC transceiver about PHY information base (PIB). This routine gets PHY data...","GUID-55498A05-5BFD-4A23-8F82-57F0C6736476.html@@@1.1.2.4.21 DRV_G3_MACRT_EXCEPTION Enum@@@typedef enum { /* SPI has detected an unexpected status, reset is recommended */ DRV_G3_MACRT_EXCEPTION_UNEXPECTED_KEY, /* SPI critical error */ DRV_G3_MACRT_EXCEPTION_CRITICAL_ERROR, /* Device has...","GUID-559A006E-859E-45E8-BB5A-70CE63853872.html@@@1.1.1.4.17 DRV_PLC_HAL_INTERFACE Struct@@@typedef struct { /* PLC PLIB Interface */ DRV_PLC_PLIB_INTERFACE *plcPlib; /* PLC HAL init */ DRV_PLC_HAL_INIT init; /* PLC HAL setup */ DRV_PLC_HAL_SETUP setup; /* PLC HAL reset device */...","GUID-559A006E-859E-45E8-BB5A-70CE63853872_2.html@@@1.1.2.4.37 DRV_PLC_HAL_INTERFACE Struct@@@typedef struct { /* PLC PLIB Interface */ DRV_PLC_PLIB_INTERFACE *plcPlib; /* PLC HAL init */ DRV_PLC_HAL_INIT init; /* PLC HAL setup */ DRV_PLC_HAL_SETUP setup; /* PLC HAL reset device */...","GUID-56CEDA9B-50C8-4747-8849-4C5E3FA88FF7.html@@@1.1.1.4.25.13 DRV_PLC_PHY_PIB_OBJ Struct@@@typedef struct { /* Pointer to PIB data */ uint8_t *pData; /* PLC Information base identification */ DRV_PLC_PHY_ID id; /* Length in bytes of the data information */ uint16_t length; }...","GUID-59DADBE8-E54E-42C0-B62A-5652DAFB766E.html@@@1.1.2.4.12 DRV_G3_MACRT_CommStatusCallbackRegister Function@@@void DRV_G3_MACRT_CommStatusCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK callback ); Allows a client to set a Comm Status indication event handling function...","GUID-5DA261DF-FDDC-4A4D-9FB9-4001FF3036DD.html@@@1.1.1.4.24.2 DRV_PLC_PHY_MOD_TYPE Enum@@@typedef enum { MOD_TYPE_BPSK = 0 , MOD_TYPE_QPSK = 1 , MOD_TYPE_ 8 PSK = 2 , MOD_TYPE_BPSK_ROBO = 4 , }DRV_PLC_PHY_MOD_TYPE; G3 Modulation types. This Enum contains every types of modulation supported...","GUID-5DCB155E-01FF-4C75-9BB8-64521923327F.html@@@1.1.1.4.14 DRV_PLC_PHY_Sleep Function@@@void DRV_PLC_PHY_Sleep ( const DRV_HANDLE handle, bool enable ); PLC Sleep mode management. This function disables PLC interrupts before going to sleep, and will leave them disabled upon return.If...","GUID-5DD54744-A308-4CFC-9EC7-2A74AE260057.html@@@1.1.3.4.18 DRV_METROLOGY_GetRMSValue Function@@@uint32_t DRV_METROLOGY_GetRMSValue (DRV_METROLOGY_RMS_TYPE type); Gets the last RMS value of the selected measurement type. For further information about RMS types, refer to DRV_METROLOGY_RMS_TYPE...","GUID-60271DE1-2B32-4ED7-8DB8-613930EFDA20.html@@@1.2.4.4 Library Interface@@@PLC PVDD Monitor service provides the following interfaces: Functions Name Description SRV_PVDDMON_Initialize Initializes the PVDD Monitor service SRV_PVDDMON_Start Start the PVDD Monitor service...","GUID-610A01D5-B3B5-43BF-968F-EB6B6BE00373.html@@@1.1.1.4.25.6 DRV_PLC_PHY_BUFFER_ID Enum@@@typedef enum { TX_BUFFER_ 0 = 0 , TX_BUFFER_ 1 = 1 , } DRV_PLC_PHY_BUFFER_ID; PRIME Internal Buffer identification It can be used up to 2 different internal buffer to store information to transmit...","GUID-621D854B-54BF-4473-91C6-B37A25840333.html@@@1.2.6.4.1 SRV_USI_Initialize Function@@@SYS_MODULE_OBJ SRV_USI_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init) Initializes the specified USI service instance. This routine initializes the specified USI service...","GUID-62BC0CAA-AB55-4B7B-851F-0B4888266296.html@@@1.2.1.2.2 Using The Library (PRIME)@@@For PRIME, SRV_PCOUP_Set_Channel_Config has to be called once the PLC Driver is ready (binary loaded to PLC Device) and before any transmission is requested. Additionally, SRV_PCOUP_Set_Channel_Config...","GUID-6333F1EC-0849-49B3-AA6E-9422B26CCFBD.html@@@1.1.2.4.27 DRV_G3_MACRT_PHY_SNIFFER_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_PHY_SNIFFER_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT PHY Sniffer Reception Event handler function. This data type defines the required...","GUID-6662B9A5-918C-40DB-8E2E-167EB1CCEEC3.html@@@1.2.3.4.5 SRV_PSERIAL_SerialSetPIB Function@@@size_t SRV_PSERIAL_SerialSetPIB ( uint8_t* pDataDst, DRV_PLC_PHY_PIB_OBJ* pDataSrc ); Serializes a response to a SRV_PSERIAL_CMD_PHY_SET_CFG command. Takes a DRV_PLC_PHY_PIB_OBJ object as parameter...","GUID-6947C4CA-0A47-43CA-9928-DDC533406CBE.html@@@1.1.3.4.26 DRV_METROLOGY_START_MODE Enum@@@typedef enum { /* Operation completed with success. */ DRV_METROLOGY_START_SOFT, /* Invalid handle or operation failed. */ DRV_METROLOGY_START_HARD } DRV_METROLOGY_START_MODE; Describes how is the...","GUID-6A734799-58CF-486D-AEAF-6498317A903F.html@@@1.2.1.4.1.1 SRV_PCOUP_Get_Config Function@@@SRV_PLC_PCOUP_DATA * SRV_PCOUP_Get_Config(SRV_PLC_PCOUP_BRANCH branch); Get the PLC PHY Coupling parameters for the specified transmission branch. This function allows to get the PLC PHY Coupling...","GUID-6AC86335-EDE5-40ED-8D96-800FFF8D9748.html@@@1.2.1.2 Using The Library@@@The PLC PHY Coupling Service allows a PLC Driver&apos;s client to configure the PHY PIBs related to: PLC Transceiver used (PL360/PL460) Transmission hardware coupling design Transmission digital gain and...","GUID-6ACB9986-8D9A-42C0-B408-82F14C261ADA.html@@@1.1.2.4.17 DRV_G3_MACRT_Tasks Function@@@void DRV_G3_MACRT_Tasks ( SYS_MODULE_OBJ object ); Maintains the driver&apos;s state machine. This function is used to maintain the driver&apos;s internal state machine. DRV_G3_MACRT_Initialize must have been...","GUID-6ED1119A-7A55-4C17-9E56-5835926DD77B.html@@@1.2.1.4.1.3 SRV_PCOUP_Get_Default_Branch Function@@@SRV_PLC_PCOUP_BRANCH SRV_PCOUP_Get_Default_Branch ( void ); Get the default branch of the PLC transmission coupling. This function allows to get the tranmission branch used by default, which is...","GUID-725B3EE4-66DB-443D-BFAF-6BAE2C541655.html@@@1.1.1.4.19 DRV_PLC_PHY_TX_CFM_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_TX_CFM_CALLBACK )( DRV_PLC_PHY_TRANSMISSION_CFM_OBJ *cfmObj, uintptr_t context ); Pointer to a PLC Driver Transmission Confirm Event handler function. A client must...","GUID-7464B9B1-E30E-4C83-BFF4-C8FBC8AE2B97.html@@@1.2.6.4.2 SRV_USI_Open Function@@@SRV_USI_HANDLE SRV_USI_Open ( const SYS_MODULE_INDEX index ) Opens the specified USI service instance and returns a handle to it. This routine opens the specified USI service instance and provides a...","GUID-760CFE1C-CBE5-4B83-9F96-A1276BC1D5F6.html@@@1.1.3.4 Library Interface@@@Metrology driver library provides the following interfaces: Functions Name Description DRV_METROLOGY_Initialize Initializes the metrology Driver for MISTRAL dual-core devices...","GUID-7696B688-2CF7-4EC3-BAA2-FE442F8A9CA3.html@@@1.1.2.4.8 DRV_G3_MACRT_TxCfmCallbackRegister Function@@@void DRV_G3_MACRT_TxCfmCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_TX_CFM_CALLBACK callback ); Allows a client to set a data confirm event handling function for the driver to call...","GUID-76D58185-B456-47A8-BE17-D5824D22CF3F.html@@@1.2.3.3 Configuring The Library@@@PLC PHY Serial Service is configured via MCC. Below is the Snapshot of the MCC configuration window for PLC PHY Serial Service and brief description. Figure .\u2000 PLC PHY Serial Service configuration...","GUID-77BA9E16-C16A-44AB-9E1F-D3AB7430198A.html@@@1.1.2.4.34 MAC_RT_PIB Enum@@@typedef enum { MAC_RT_PIB_MAX_BE = 0x00000047 , MAC_RT_PIB_BSN = 0x00000049 , MAC_RT_PIB_DSN = 0x0000004C , MAC_RT_PIB_MAX_CSMA_BACKOFFS = 0x0000004E , MAC_RT_PIB_MIN_BE = 0x0000004F...","GUID-791DBB8A-FE97-43D1-AD04-41B7AE192649.html@@@1.1.2.4.13 DRV_G3_MACRT_PhySnifferCallbackRegister Function@@@void DRV_G3_MACRT_PhySnifferCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_PHY_SNIFFER_CALLBACK callback, uint8_t* pDataBuffer ); Allows enable G3 MAC RT PHY Sniffer capabilities and...","GUID-7A6D3728-F774-40C8-A34F-893A562AB3FA.html@@@1.1.3.4.11 DRV_METROLOGY_GetControl Function@@@DRV_METROLOGY_CONTROL * DRV_METROLOGY_GetControl ( void ); Get the pointer to the control registers of the metrology library application running on the second processor. Control registers are acting...","GUID-7BD82710-5BEA-4FEA-BF26-D2B0693F9B54.html@@@1.1.1.4.24.4 DRV_PLC_PHY_DEL_TYPE Enum@@@typedef enum { DT_SOF_NO_RESP = 0 , DT_SOF_RESP = 1 , DT_ACK = 2 , DT_NACK = 3 , }DRV_PLC_PHY_DEL_TYPE; G3 Delimiter types. This Enum contains every delimiter types supported by G3 spec...","GUID-7C8F8FE0-76A1-4138-81CD-E2A7D3533A92.html@@@1.2.5.4.4 PCRC_CRC_TYPE Enum@@@typedef enum { PCRC_CRC8 = 0 , /* 8-bit CRC */ PCRC_CRC16 = 1 , /* 16-bit CRC */ PCRC_CRC32 = 2 , /* 32-bit CRC */ PCRC_NOCRC = 3 /* No CRC */ }PCRC_CRC_TYPE; The list of all CRC types supported (8...","GUID-7CBC706E-193F-491A-88C3-356E7E7FDD5C.html@@@1.2.1.1 How the Library Works@@@The PLC Physical Layer (PHY) implements some transmission capabilities with the following purposes: Comply with regulatory requirements Meet power injection and signal quality requirements Compensate...","GUID-800E7E2E-B682-4D22-8CFA-9820472A966B.html@@@1.1.1.4.15 DRV_PLC_PHY_EnableTX Function@@@void DRV_PLC_PHY_EnableTX ( const DRV_HANDLE handle, bool enable ); Enables/Disables PLC transmission. This function allows a client to enable or disable the PLC transmission.If there is any...","GUID-80ABA2A7-287D-4A30-B31E-561FA3322D9A.html@@@1.2.1 PLC PHY Coupling Service@@@The PLC PHY Coupling service can be used in conjuction with a PLC Driver (PHY or G3 MAC RT) to facilitate the configuration of the PLC Transmission Coupling PHY parameters (PIBs). If the...","GUID-81092C4F-2D4E-475B-B44E-39B30242F764.html@@@1.2.3.4.7 SRV_PSERIAL_SerialRxMessage Function@@@size_t SRV_PSERIAL_SerialRxMessage ( uint8_t* pDataDst, DRV_PLC_PHY_RECEPTION_OBJ* pDataSrc ); Serializes a received PLC frame and its related information. Takes a DRV_PLC_PHY_RECEPTION_OBJ object as...","GUID-81475CB9-3097-4C2B-BA9F-D58AF46781CC.html@@@1.2.2.1 How the Library Works@@@PLC Sniffer mission is to provide information about every frame present in the PLC medium. This information includes the frame itself and some parameters related to PLC communications. Sniffer library...","GUID-81A73CB2-02C0-41CF-9C28-0AECE56FFF26.html@@@1 MPLAB\u00AE Harmony Smart Energy Library@@@The Smart Energy Library provides access to Narrow Band Power Line Communications (PLC). It supports widely used narrow-band PLC standards such as ITU G.9903 ( G3-PLC\u00AE ) and ITU G.9904 ( PRIME )...","GUID-83EBAE84-CC25-4C58-9377-5B2D633E951D.html@@@1.1.2.4.33 MAC_RT_PIB_OBJ Struct@@@typedef struct { MAC_RT_PIB pib; uint16_t index; uint8_t length; uint8_t pData[MAC_RT_PIB_MAX_VALUE_LENGTH]; } MAC_RT_PIB_OBJ; Contains fields used in Information Base access. This structure contains...","GUID-84FD9F74-C47E-483C-BC6D-6C0F486D7D7D.html@@@1.2.6.4 Library Interface@@@USI service library provides the following interfaces: Functions Name Description SRV_USI_Initialize Initializes the specified USI service instance SRV_USI_Open Opens the specified USI service...","GUID-85AB674B-2F1D-4636-87B5-36ACBE66A8BE.html@@@1.3.1 Demo Meter Application@@@The Demo Meter Application is an example of metering application using the Microchip metrology library with the PIC32CXMTx-DB demonstration kits. The PIC32CXMTx The Demo Meter application runs in the...","GUID-86C39B7F-4C57-4AE6-98CE-A878EAF6E667.html@@@1.1.2.4.25 DRV_G3_MACRT_MAC_SNIFFER_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_MAC_SNIFFER_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT Sniffer Reception Event handler function. This data type defines the required...","GUID-87E6C7E7-6BA7-4E96-BA40-DD5CF7349793.html@@@1.1.3.4.40 DRV_METROLOGY_CONFIGURATION Struct@@@typedef struct { uint32_t mc; double freq; double tr; double rl; uint32_t ku; DRV_METROLOGY_SENSOR_TYPE st; DRV_METROLOGY_GAIN_TYPE gain; } DRV_METROLOGY_CONFIGURATION; Identifies values needed to set...","GUID-8B025891-809C-47BF-B1DF-95AFBFCD6D6C.html@@@1.2.3.4.8 SRV_PSERIAL_SerialCfmMessage Function@@@size_t SRV_PSERIAL_SerialCfmMessage ( uint8_t* pDataDst, DRV_PLC_PHY_TRANSMISSION_CFM_OBJ* pDataSrc ); Serializes the result of a PLC transmitted frame. Takes a DRV_PLC_PHY_TRANSMISSION_CFM_OBJ object...","GUID-8B41FF7D-0488-4893-9701-BDF32DB8BBDA.html@@@1.2.5.4.2 SRV_PCRC_SetSNAValue Function@@@void SRV_PCRC_SetSNAValue ( uint8_t* sna ); Sets SNA (Sub-Network Address) value to be used as initial value on further CRC calculations (used by PRIME stack). This routine sets the value that will be...","GUID-8B486B65-413F-4727-A2DE-721EA859AA8D.html@@@1.2.5.1 How the Library Works@@@This library does not need to be neither initialized nor maintained periodically. It simply receives a request to calculate a CRC with a set of parameters, and returns back the computed CRC. It can be...","GUID-8C5F5F6E-5B77-4AC5-9274-D0E6AE292759.html@@@1.1.3.4.25 DRV_METROLOGY_RESULT Enum@@@typedef enum { /* Operation completed with success. */ DRV_METROLOGY_SUCCESS, /* Invalid handle or operation failed. */ DRV_METROLOGY_ERROR } DRV_METROLOGY_RESULT; Result of a Metrology driver...","GUID-8CB24C47-AD8B-40C0-BF24-1D43127B48D2.html@@@1.2.4.4.6 SRV_PVDDMON_CallbackRegister Function@@@void SRV_PVDDMON_CallbackRegister ( SRV_PVDDMON_CALLBACK callback, uintptr_t context ); Allows a client to identify a PVDD Monitor event handling function to call back when the PVDD level is in/out...","GUID-8D6705DB-D96A-4786-9724-F6B586F876B7.html@@@1.1.2.4.1 DRV_G3_MACRT_Initialize Function@@@SYS_MODULE_OBJ DRV_G3_MACRT_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); Initializes the MAC RT instance for the specified driver index. This routine initializes...","GUID-8E175C09-6CD6-4846-A1D3-C49B7CB583E6.html@@@1.1.1.4.7 DRV_PLC_PHY_TxCfmCallbackRegister Function@@@void DRV_PLC_PHY_TxCfmCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_TX_CFM_CALLBACK callback, const uintptr_t context ); Allows a client to set a data confirm event handling function...","GUID-8EFAC845-3358-4B69-A3C6-8207013B9727.html@@@1.2.4.2 Using The Library@@@The PLC PVDD Monitor service must be used from within the PLC application to monitor whether PLC transmissions are allowed. PLC PVDD Monitor service requires a callback to be set in order to notify...","GUID-8F2BCC2D-088B-4489-893D-ADFFCB710E47.html@@@1.2.2.4.4 SRV_PSNIFFER_SetTxMessage Function@@@void SRV_PSNIFFER_SetTxMessage ( DRV_PLC_PHY_TRANSMISSION_OBJ* pTxObj ); Gives a transmitted PLC object to Sniffer library so it is stored for later serialization. The given transmitted PLC object...","GUID-8F94C089-C2AF-4EEF-8599-616DBF8F18E8.html@@@1.2.3.4.4 SRV_PSERIAL_ParseSetPIB Function@@@void SRV_PSERIAL_ParseSetPIB ( DRV_PLC_PHY_PIB_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts PIB field from SRV_PSERIAL_CMD_PHY_SET_CFG Serial frame. Takes a SetPIB Serial frame as parameter, extracts...","GUID-8FCCE1DA-FD25-42C5-9C36-243E1E14CDFF.html@@@1.2.2.4.5 SRV_PSNIFFER_SetRxPayloadSymbols Function@@@void SRV_PSNIFFER_SetRxPayloadSymbols ( uint16_t payloadSym ); Sets the number of received symbols on Sniffer library for further use. Number of received symbols is set on Sniffer library so that info...","GUID-93466C84-5C2E-4AA6-A8AB-812D804F9074.html@@@1.1.2.1 How the Library Works@@@The G3 PLC MAC RT firmware communicates with a PLC transceiver using an SPI port.The PLC transceiver performs PHY and MAC RT (Real Time) duties of the communication protocol, thus allowing a high...","GUID-93531DF8-21C2-4F4D-9540-60E4867FAF8F.html@@@1.1.2.4.19 DRV_G3_MACRT_Sleep Function@@@void DRV_G3_MACRT_Sleep ( const DRV_HANDLE handle, bool enable ); PLC Sleep mode management. This function disables PLC interrupts before going to sleep, and will leave them disabled upon return.If...","GUID-94D8AC75-963A-4D7A-965C-FF88F06BB635.html@@@1.2.3.4 Library Interface@@@PLC PHY Sniffer library provides the following interfaces: Functions Name Description SRV_PSERIAL_GetCommand Extracts Command field from Serial frame SRV_PSERIAL_ParseGetPIB Extracts PIB field from...","GUID-95B97160-5425-444C-A258-8746A620D3F9.html@@@1.2.5.4.1 SRV_PCRC_GetValue Function@@@uint32_t SRV_PCRC_GetValue ( uint8_t *pData, size_t length, PCRC_HEADER_TYPE hdrType, PCRC_CRC_TYPE crcType, uint32_t initValue ); Obtains the CRC for a data stream. This routine gets the CRC value...","GUID-95D6239D-4487-418B-ADEC-587C659BFEE0.html@@@1.2.6.4.13 SRV_USI_DEV_DESC Struct@@@typedef struct { SRV_USI_INIT_FPTR init; SRV_USI_OPEN_FPTR open; SRV_USI_REGISTER_READ_CALLBACK_FPTR setReadCallback; SRV_USI_WRITE_FPTR write; SRV_USI_TASK_FPTR task; SRV_USI_CLOSE close...","GUID-96988540-2CDE-43E3-B49A-FED2B49DEA37.html@@@1.1.2.4.16 DRV_G3_MACRT_Status Function@@@SYS_STATUS DRV_G3_MACRT_Status ( const SYS_MODULE_INDEX index ); Gets the current status of the PLC driver module. This routine provides the current status of the PLC driver module...","GUID-97410992-A415-4397-9F09-F55277DD3BF4.html@@@1.1.2.4.36 DRV_G3_MACRT_INIT Struct@@@typedef struct { /* Identifies the HAL API set to be used by the driver to access * peripherals. */ DRV_PLC_HAL_INTERFACE *plcHal; /* PLC Profile */ uint8_t plcProfile; /* Start Address where PLC...","GUID-97853572-2DF9-4BDC-8CC2-427931EE96D9.html@@@1.1 Driver Libraries@@@PLC stands for Power Line Communications, a communication technology that enables sending data over existing AC or DC power cables. The Smart Energy PLC Drivers are software components designed to act...","GUID-98F10C10-D69B-45C3-A273-F3488B67B1A3.html@@@1.1.1.4 Library Interface@@@PLC PHY driver library provides the following interfaces: Functions Name Description DRV_PLC_PHY_Initialize Initializes the PLC PHY instance for the specified driver index DRV_PLC_PHY_Open Opens the...","GUID-9C3076C9-0171-469B-B059-048A45B45047.html@@@1.2.6.4.10 SRV_USI_HANDLE Typedef@@@typedef uintptr_t SRV_USI_HANDLE; Handle to an opened instance of the USI service. This handle identifies an opened instance of the USI service. It is returned from SRV_USI_Open and it has to be...","GUID-9CCE1919-6FB5-41BE-90E8-9A12F57D6D61.html@@@1.2.3 PLC PHY Serial Service@@@This service allows controlling a PLC transceiver at PHY level through a Serial interface using USI Service. This serialization includes transmission and reception of PLC frames, as well as getting...","GUID-9D9C46CF-4296-4502-B64F-9115B5A9C08B.html@@@1.1.1.4.21 DRV_PLC_PHY_SLEEP_IND_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_SLEEP_IND_CALLBACK )( void ); Pointer to notification when Sleep Mode is disabled and PLC PHY driver is available to be used again. This data type defines the required...","GUID-9EEBDBBA-1276-4981-AE2B-21E49DF553F3.html@@@1.3.1.6 APP_EVENTS Module@@@The APP_EVENTS module implements an event record software module that stores the happening event and its occurrence time. The following events are supported: Voltage sag event Power direction reverse...","GUID-9F6DC912-C55A-4BCD-90FA-BC4CCACA9138.html@@@1.1.1.4.24.5 DRV_PLC_PHY_TX_RESULT Enum@@@typedef enum { /* Transmission result: already in process */ DRV_PLC_PHY_TX_RESULT_PROCESS = 0 , /* Transmission result: end successfully */ DRV_PLC_PHY_TX_RESULT_SUCCESS = 1 , /* Transmission result...","GUID-9F92936D-DEC9-4403-BC8D-8CAF14F19639.html@@@1.2.5.3 Configuring The Library@@@The CRC Library has no configuration options. It just satisfies the requirement of other libraries, such as USI service, as seen on the figure below. Figure .\u2000 CRC Service satisfies USI requirement...","GUID-9FA1FFFF-E886-463A-8C9E-E2EA03789F2D.html@@@1.3.2 Dual Core Demo Application@@@A dual core device (e.g., PIC32CX2051MTSH128) has a Main core and Secondary core that can operate independently and can be developed separately during application development. Both processor (Main and...","GUID-9FC71CD9-27EF-4136-8708-58075AE0B905.html@@@1.2.3.2 Using The Library@@@The PLC PHY Serial library is an add-on that can be used along with the PLC PHY Driver . The PHY driver is the one in charge of PLC communications, while the Serial library is used to serialize the...","GUID-9FF36725-3200-489F-8E5A-08E6DA599D4E.html@@@1.2.3.4.2 SRV_PSERIAL_ParseGetPIB Function@@@void SRV_PSERIAL_ParseGetPIB ( DRV_PLC_PHY_PIB_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts PIB field from SRV_PSERIAL_CMD_PHY_GET_CFG Serial frame. Takes a GetPIB Serial frame as parameter, extracts...","GUID-A276143A-DF95-4D51-ADE9-7B7B0157694A.html@@@1.2.3.4.1 SRV_PSERIAL_GetCommand Function@@@SRV_PSERIAL_COMMAND SRV_PSERIAL_GetCommand ( uint8_t* pData ); Extracts Command field from Sniffer frame. Takes Serial frame as parameter and extracts the Command field from the expected position in...","GUID-A2A1EDAC-3C1D-4A42-AC6F-E7CD237D90E4.html@@@1.2.3.4.9 SRV_PSERIAL_COMMAND Enum@@@typedef enum { /* Get data configuration request */ SRV_PSERIAL_CMD_PHY_GET_CFG = 0 , /* Get data configuration response */ SRV_PSERIAL_CMD_PHY_GET_CFG_RSP, /* Set data configuration request */...","GUID-A33FE9DF-132B-4BE0-8D69-E474D59DAF49.html@@@1.1.3.4.4 DRV_METROLOGY_Close Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Close ( void ); Closes the metrology driver. This routine closes the metrology driver making it unusable. None. If successful, returns DRV_METROLOGY_SUCCESS...","GUID-A3663EE4-FB02-4CF3-BD0E-2BE3FED24123.html@@@1.2.6.3 Configuring The Library@@@USI Service is configured via MCC. The following snapshots show the MCC configuration window for USI Service and brief description. Figure .\u2000 USI Service common configuration options for all instances...","GUID-A48A9C4F-4251-4807-A3CB-FE22524FF8B1.html@@@1.1.1.4.9 DRV_PLC_PHY_ExceptionCallbackRegister Function@@@void DRV_PLC_PHY_ExceptionCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_EXCEPTION_CALLBACK callback, const uintptr_t context ); Allows a client to set an exception event handling...","GUID-A528297A-C3D6-48ED-AEC2-C8221CBD4A12.html@@@1.1.2.4.23 DRV_G3_MACRT_DATA_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_DATA_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT Driver Reception Event handler function. This data type defines the required function...","GUID-A5A33003-F6F9-43F2-9625-337590CBC7E1.html@@@1.1.3.4.22 DRV_METROLOGY_GetCalibrationReferences Function@@@DRV_METROLOGY_CALIBRATION_REFS * DRV_METROLOGY_GetCalibrationReferences ( void ); Get the pointer to the calibration references used in the internal calibration process of the metrology library. These...","GUID-A74E4416-E7F9-4A02-8A29-FC1F2A00BF93.html@@@1.2.1.4.2.3 SRV_PCOUP_Set_Channel_Config Function@@@bool SRV_PCOUP_Set_Channel_Config (DRV_HANDLE handle, DRV_PLC_PHY_CHANNEL channel); Set the PLC PHY Coupling parameters for the specified PRIME channel. This function allows to set the PLC PHY...","GUID-A7685FE8-B336-4379-A26B-C821EBD7CD85.html@@@1.1.2 G3 MAC RT Driver@@@This driver provides a non-blocking interface with the external on-chip PLC transceiver. The library uses the SPI peripheral library (PLIB) and the Direct Memory Access controller to interface with...","GUID-A92CAB0B-51F2-4706-938C-5E993E3CD6BD.html@@@1.1.3.4.36 DRV_METROLOGY_AFE_EVENTS Struct@@@typedef struct { uint32_t paDir : 1 ; uint32_t pbDir : 1 ; uint32_t pcDir : 1 ; uint32_t ptDir : 1 ; uint32_t qaDir : 1 ; uint32_t qbDir : 1 ; uint32_t qcDir : 1 ; uint32_t qtDir : 1 ; uint32_t sagA...","GUID-A95FDE79-4A31-43E5-B7E2-A923B08DBEFA.html@@@1.2.4 PLC PVDD Monitor Service@@@This service aims to protect the amplification stage for the main transmission branch integrated in PL460 device...","GUID-A9D08F5B-A721-44F2-9668-448E48C8192C.html@@@1.2.5.4 Library Interface@@@PLC CRC library provides the following interfaces: Functions Name Description SRV_PCRC_GetValue Obtains the CRC for a data stream SRV_PCRC_SetSNAValue Sets SNA value to be used as initial value on...","GUID-ABD93EB0-3099-42B8-9559-30F072F02739.html@@@1.2.6.4.11 SRV_USI_HANDLE_INVALID Macro@@@#define SRV_USI_HANDLE_INVALID (((SRV_USI_HANDLE) - 1 )) Definition of invalid USI handle. This definition is used to indicate that an USI handle ( SRV_USI_HANDLE Typedef ) is invalid. SRV_USI_Open...","GUID-AC680876-B0BE-403F-B362-21FD96EB06B3.html@@@1.1.3.4.13 DRV_METROLOGY_GetStatus Function@@@DRV_METROLOGY_STATUS * DRV_METROLOGY_GetStatus ( void ); Get the pointer to the status registers of the metrology library application running on the second processor. The Metrology library generates...","GUID-AEB8DFE3-0BED-4D89-98D8-78F367814AA1.html@@@1.2.6.4.4 SRV_USI_Status Function@@@SRV_USI_STATUS SRV_USI_Status ( SRV_USI_HANDLE handle ) Returns the current status of the USI service. This routine provides the current status of the USI service instance. SRV_USI_Open must have been...","GUID-AF19D487-59D9-4D2F-AA35-E1583DDFB82D.html@@@1.1.1.4.24.6 DRV_PLC_PHY_TONE_MAP_RSP Struct@@@typedef struct { /* Modulation type */ DRV_PLC_PHY_MOD_TYPE modType; /* Modulation scheme */ DRV_PLC_PHY_MOD_SCHEME modScheme; /* Tone Map */ uint8_t toneMap[TONE_MAP_SIZE_MAX]; }...","GUID-AF884BA6-67E5-4927-8D31-B1F196BE22BD.html@@@1.1.1.4.25 PRIME Data types and constants@@@PRIME Data types and constants...","GUID-B0D43890-3087-41AD-B694-E10EB97EB0D8.html@@@1.1.3.4.27 DRV_METROLOGY_RMS_SIGN Enum@@@typedef enum { /* Positive Value */ RMS_SIGN_POSITIVE = 0 , /* Negative Value */ RMS_SIGN_NEGATIVE = 1 , } DRV_METROLOGY_RMS_SIGN; Describes the sign of some metrology measurements. This quality only...","GUID-B12673FB-2A40-402F-A99F-3B767C712E77.html@@@1.2.6.2 Using The Library@@@USI is a service that allows to send/receive messages to/from an external tool. It is used in conjuction with another Smart Energy libraries to serialize different protocol layers. Following example...","GUID-B2ABF750-2622-4A16-BD06-60AF4EA9E6EA.html@@@1.1.3.4.21 DRV_METROLOGY_GetEventsData Function@@@void DRV_METROLOGY_GetEventsData (DRV_METROLOGY_AFE_EVENTS * events); Gets the last metrology AFE events data. For further information about the event data, refer to DRV_METROLOGY_AFE_EVENTS...","GUID-B30E0A99-F577-4040-B9DB-4BF69AC7D3E8.html@@@1.1.3.4.28 DRV_METROLOGY_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_CALLBACK)( void ); Metrology new Integration Callback Function Handle. Metrology new Integration Callback Function Handle. None. None. None...","GUID-B3A181FF-1B0E-4CF1-8EBB-0D9000DB82EF.html@@@1.2.6.4.3 SRV_USI_Close Function@@@void SRV_USI_Close ( const SRV_USI_HANDLE handle ) Closes an opened-instance of the USI service. This routine closes an opened-instance of the USI service, invalidating the handle. A new handle must...","GUID-B4522710-73A2-4AC6-8FAA-A46B8AFEF0D3.html@@@1.1.3.4.3 DRV_METROLOGY_Open Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Open ( DRV_METROLOGY_START_MODE mode, DRV_METROLOGY_CONTROL * pConfiguration ); Opens the metrology driver according to the mode parameter. This routine enables the...","GUID-B74CFBEC-2049-4087-B361-12EAE0A6D2D5.html@@@1.2.1.4.1.4 SRV_PCOUP_Get_Phy_Band Function@@@uint8_t SRV_PCOUP_Get_Phy_Band (SRV_PLC_PCOUP_BRANCH branch); Get the G3-PLC PHY band associated to the specified transmission branch. This function allows to get the G3-PLC PHY band associated to the...","GUID-B7C7F0AD-BC60-40E7-AFBA-2B1E32343684.html@@@1.1.1.4.10 DRV_PLC_PHY_SleepDisableCallbackRegister Function@@@void DRV_PLC_PHY_SleepDisableCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_SLEEP_IND_CALLBACK callback, const uintptr_t context ); Allows a client to set an sleep mode disable event...","GUID-B89FD8FD-29D0-4A95-A949-4F22179558D0.html@@@1.1.1.4.24.3 DRV_PLC_PHY_MOD_TYPE Enum@@@typedef enum { MOD_SCHEME_DIFFERENTIAL = 0 , MOD_SCHEME_COHERENT = 1 , }DRV_PLC_PHY_MOD_TYPE; G3 Modulation schemes. This Enum contains every modulation schemes supported by G3 spec...","GUID-BAD839D0-DC99-40E6-B406-813928767344.html@@@1.2.1.3 Configuring The Library@@@PLC PHY Coupling Service can be configured via MCC. Alternatevely, the generated source/header files can be modified for custom configuration. The following snapshots show the MCC configuration window...","GUID-BB7FA537-41CA-460C-8463-9C9FB4C8F8BA.html@@@1.3.2.2 Configuring Dual Core Demo Secondary Application@@@Dual Core Demo Secondary Application Configurations Dual Core Demo Secondary Application should be configured via MCC. Below is the Snapshot of the MCC configuration window for Dual Core Demo...","GUID-BCB28663-4E3B-4C51-8F7D-A9495FB0A16A.html@@@1.2.2.4.7 SRV_PSNIFFER_SetPLCChannel Function@@@void SRV_PSNIFFER_SetPLCChannel ( uint8_t channel ); Sets PLC channel to be used on PLC Sniffer. This function allows setting the right PLC channel to listed to. If misconfigured, no PLC frames will...","GUID-BE95F15B-2EE5-4955-A737-8EACFC145E48.html@@@1.1.1.4.25.7 DRV_PLC_PHY_TX_RESULT Enum@@@typedef enum { /* Transmission result: already in process */ DRV_PLC_PHY_TX_RESULT_PROCESS = 0 , /* Transmission result: end successfully */ DRV_PLC_PHY_TX_RESULT_SUCCESS = 1 , /* Transmission result...","GUID-BF84994F-1D02-4912-91AB-DCB62487A732.html@@@1.2.2 PLC PHY Sniffer Service@@@This service serializes transmitted and received PLC PHY frames (along with informative frame parameters) in a buffer to later send them through a Serial Interface using USI Service. On the other...","GUID-C0265DE4-9BE3-4A22-A9C0-9E76AE1D1E61.html@@@1.1.3.4.15 DRV_METROLOGY_GetHarData Function@@@DRV_METROLOGY_HARMONICS * DRV_METROLOGY_GetHarData ( void ); Get the pointer to the harmonic analysis registers of the metrology library application running on the second processor. Harmonic analysis...","GUID-C0B40EB5-8C77-4961-8932-C0C247B4FA29.html@@@1.2.6.4.5 SRV_USI_CallbackRegister Function@@@void SRV_USI_CallbackRegister ( const SRV_USI_HANDLE handle, SRV_USI_PROTOCOL_ID protocol, SRV_USI_CALLBACK callback) Registers a function to be called back when a new message is received and it...","GUID-C28059AE-E01B-4F83-9DDC-6E6397DD36F8.html@@@1.1.2.4.30 MAC_RT_TX_CFM_OBJ Struct@@@typedef struct { /* MAC RT Status */ MAC_RT_STATUS status; /* Flag to indicate Timestamp should be updated */ bool updateTimestamp; } MAC_RT_TX_CFM_OBJ; Contains a transmission result and timestamp...","GUID-C2D20394-132A-400D-9BA7-214987F254B5.html@@@1.1.2.4.26 DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK )( uint8_t *pData ); Pointer to a G3 MAC RT Communication Status Event handler function. This data type defines the required function signature...","GUID-C33C587B-747B-4FAB-9976-F27A7875D841.html@@@1.1.1.4.25.3 DRV_PLC_PHY_FRAME_TYPE Enum@@@typedef enum { FRAME_TYPE_A = 0 , FRAME_TYPE_B = 2 , FRAME_TYPE_BC = 3 , } DRV_PLC_PHY_FRAME_TYPE; PRIME Types of PHY frame This Enum contains every types of frame supported by PRIME spec...","GUID-C351E8B0-8A8B-4006-89E0-3DE133B33D5E.html@@@1.1.1.4.24.8 DRV_PLC_PHY_TRANSMISSION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to data buffer to transmit */ uint8_t *pTransmitData; /* Instant when transmission has to start referred to 1us PHY counter */...","GUID-C38AD3F4-CA6C-48DE-A6A1-28C18B778318.html@@@1.1.2.4.6 DRV_G3_MACRT_PIBSet Function@@@MAC_RT_STATUS DRV_G3_MACRT_PIBSet ( const DRV_HANDLE handle, MAC_RT_PIB_OBJ *pibObj ); Allows a client to set information to PLC transceiver on MAC RT and PHY information base (PIB). This routine sets...","GUID-C3DB8211-AA41-4F11-B5CE-F5B29D559357.html@@@1.3.1.3 APP_DATALOG Module@@@The APP_DATALOG module is in charge of saving the data coming from the metrology to a file system in the external flash memory. The main function of the module is APP_DATALOG_Task which runs a...","GUID-C68E12F8-5625-420D-B82B-D586E15D9F3A.html@@@1.1.3.4.31 DRV_METROLOGY_SENSOR_TYPE Enum@@@typedef enum { /* Current Transformer */ SENSOR_CT = 0 , /* Shunt resistor */ SENSOR_SHUNT = 1 , /* Rogowski Coil */ SENSOR_ROGOWSKI = 2 , SENSOR_NUM_TYPE } DRV_METROLOGY_SENSOR_TYPE; Describes the...","GUID-C6935B6F-3F19-4CEE-AE52-998913858742.html@@@1.1.1.2 Using The Library@@@The PLC PHY library builds on top of an SPI peripheral library (PLIB) to communicate with a PLC transceiver in which G3-PLC lower MAC and PHY layers run.However, the underlying use of an SPI port is...","GUID-C7DD098A-D23F-4DFD-BE53-74C297670599.html@@@1.1.1.4.25.1.1 DRV_PLC_PHY_IDs@@@Description: Name of MCU, in string format, where PL360 Host Controller is running. Access: Read-only. Value Range: 10 bytes. Default Value: &quot;SAME70&quot; or &quot;PIC32CX&quot;. Description: Model identification...","GUID-C878A278-A038-469F-AA4E-717F236F2131.html@@@1.1.2.4.20 DRV_G3_MACRT_EnableTX Function@@@void DRV_G3_MACRT_EnableTX ( const DRV_HANDLE handle, bool enable ); Enables/Disables PLC transmission. This function allows a client to enable or disable the PLC tranmission.If there is any...","GUID-C9D39EA4-E773-4EB2-BB18-A881CF467777.html@@@1.1.3.4.8 DRV_METROLOGY_CalibrationCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_CalibrationCallbackRegister ( DRV_METROLOGY_CALIBRATION_CALLBACK callback ); Registers a function with the metrology driver to be called back when the calibration...","GUID-CA6DD1FB-AAB0-49BC-ABCB-EC6E66CA731C.html@@@1.2.4.4.3 SRV_PVDDMON_Initialize Function@@@void SRV_PVDDMON_Initialize ( void ); Initializes the PVDD Monitor service. This routine initializes the PVDD Monitor service, making it ready for clients to start and use it. None. None. /* Init PVDD...","GUID-CAC25733-1D0F-44AE-84B4-82D140523B79.html@@@1.1.1.4.11 DRV_PLC_PHY_ExternalInterruptHandler Function@@@void DRV_PLC_PHY_ExternalInterruptHandler ( const PIO_PIN pin, const uintptr_t context ); Allows application to register callback for PLC Interrupt pin. This function allows a client to register a...","GUID-CC2FC1BB-40F6-41C6-9676-40E1BA7DB412.html@@@1.1.1.4.3 DRV_PLC_PHY_Close Function@@@void DRV_PLC_PHY_Close ( const DRV_HANDLE handle ); Closes an opened instance of the PLC PHY driver. This routine closes an opened instance of the PLC PHY driver, invalidating the handle.A new handle...","GUID-CC7037AE-6A1F-4EAF-894A-9588EEF3BEAD.html@@@1.1.1.4.2 DRV_PLC_PHY_Open Function@@@SYS_MODULE_OBJ DRV_PLC_PHY_Open ( const SYS_MODULE_INDEX index, const DRV_PLC_BOOT_DATA_CALLBACK callback ); Opens the specified PLC PHY driver instance and returns a handle to it. This routine opens...","GUID-CD78B395-BA9B-4279-B2D4-BD3C9E156205.html@@@1.2.5.4.3 PCRC_HEADER_TYPE Enum@@@typedef enum { PCRC_HT_GENERIC = 0 , /* PRIME Generic Packet type */ PCRC_HT_PROMOTION = 1 , /* PRIME Promotion Packet type */ PCRC_HT_BEACON = 2 , /* PRIME Beacon Packet type */ PCRC_HT_USI = 3 /*...","GUID-CE36C238-4FFB-4E75-BF61-A16DEFE6C538.html@@@1.1.1.4.25.4 DRV_PLC_PHY_HEADER Enum@@@typedef enum { HDR_GENERIC = 0 , HDR_PROMOTION = 1 , HDR_BEACON = 2 , } DRV_PLC_PHY_HEADER; PRIME Header Types This Enum contains every header types supported by PRIME spec...","GUID-CE77D416-518D-43EB-89C8-21D8BD828297.html@@@1.1.3.4.29 DRV_METROLOGY_CALIBRATION_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_CALIBRATION_CALLBACK)(bool result); Calibration Callback Function Handle. Calibration Callback Function Handle. Param Description result Flag o indicate if at least one...","GUID-CFC0A3D7-6B3D-4D47-A061-7314346BFFCF.html@@@1.1.2.4.2 DRV_G3_MACRT_Open Function@@@SYS_MODULE_OBJ DRV_G3_MACRT_Open ( const SYS_MODULE_INDEX index, const DRV_PLC_BOOT_DATA_CALLBACK callback ); Opens the specified MAC RT driver instance and returns a handle to it. This routine opens...","GUID-D07D7626-C64B-4A08-A120-8F182086A3FF.html@@@1.1.2.4 Library Interface@@@G3 MAC Real Time driver library provides the following interfaces: Functions Name Description DRV_G3_MACRT_Initialize Initializes the MAC RT instance for the specified driver index DRV_G3_MACRT_Open...","GUID-D08B8E46-56BF-4AE9-996E-B096DE7CCBA5.html@@@1.1.1.4.13 DRV_PLC_PHY_Tasks Function@@@void DRV_PLC_PHY_Tasks ( SYS_MODULE_OBJ object ); Maintains the driver&apos;s state machine. This function is used to maintain the driver&apos;s internal state machine. DRV_PLC_PHY_Initialize must have been...","GUID-D0C15B1D-39F9-4EE2-8C8E-E0D13695B096.html@@@1.1.1.4.25.11 DRV_PLC_PHY_TRANSMISSION_CFM_OBJ Struct@@@typedef struct { /* Instant when frame transmission started referred to 1us PHY counter */ uint32_t time; /* RMS value emitted */ uint32_t rmsCalc; /* PRIME Frame type */ DRV_PLC_PHY_FRAME_TYPE...","GUID-D271D58D-4E8B-4AF0-B031-70E9C8E0D23F.html@@@1.1.1.4.24.1.1 DRV_PLC_PHY_IDs@@@Description: Name of MCU, in string format, where PL360 Host Controller is running. Access: Read-only. Value Range: 10 bytes. Default Value: &quot;SAME70&quot; or &quot;PIC32CX&quot;. Description: Model identification...","GUID-D33A9EC1-6EB5-4EB8-820A-BF8B6AFAC54D.html@@@1.1.1.4.8 DRV_PLC_PHY_DataIndCallbackRegister Function@@@void DRV_PLC_PHY_DataIndCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_DATA_IND_CALLBACK callback, const uintptr_t context ); Allows a client to set a data indication event handling...","GUID-D4A95F17-FA6E-47C8-9FE4-ED986264B809.html@@@1.2.2.4.9 SRV_PSNIFFER_COMMAND Enum@@@typedef enum { /* Set PLC Channel */ SRV_PSNIFFER_CMD_SET_CHANNEL = 2 , /* Enable robust modes of PRIME */ SRV_PSNIFFER_CMD_ENABLE_PRIME_PLUS_ROBUST, /* Inject message in PLC */...","GUID-D4D6B9B8-E622-43E0-8A4F-58303A16AB3C.html@@@1.1.3.4.20 DRV_METROLOGY_SetConfiguration Function@@@void DRV_METROLOGY_SetConfiguration (DRV_METROLOGY_CONFIGURATION * config); Set metrology configuration. This routine is used to configure the metrology library according to the hardware in the input...","GUID-D6A8F4B2-ABF8-4BB2-B38F-28A4A20CA152.html@@@1.1.1.4.25.10 DRV_PLC_PHY_TRANSMISSION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to data buffer to transmit */ uint8_t *pTransmitData; /* Instant when transmission has to start referred to 1us PHY counter */...","GUID-D74B0E99-F889-4785-907E-AD92A06C9D2A.html@@@1.1.1.4.25.5 DRV_PLC_PHY_CHANNEL Enum@@@typedef enum { /* Single Channels */ CHN1 = 1 , CHN2 = 2 , CHN3 = 3 , CHN4 = 4 , CHN5 = 5 , CHN6 = 6 , CHN7 = 7 , CHN8 = 8 , /* Double Channels */ CHN1_CHN2 = 9 , CHN2_CHN3 = 10 , CHN3_CHN4 = 11...","GUID-D7A3C017-0DC8-473F-93D5-E5FF0507B1BA.html@@@1.1.1.4.20 DRV_PLC_PHY_DATA_IND_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_DATA_IND_CALLBACK )( DRV_PLC_PHY_RECEPTION_OBJ *indObj, uintptr_t context ); Pointer to a PLC Driver Reception Event handler function. This data type defines the required...","GUID-D8B8B187-7B26-4827-9D56-D5876A55BAD2.html@@@1.2.4.4.2 SRV_PVDDMON_CALLBACK Typedef@@@typedef void (*SRV_PVDDMON_CALLBACK)( SRV_PVDDMON_CMP_MODE cmpMode, uintptr_t context ); Pointer to a PVDD Monitor Event handler function. This data type defines the required function signature for...","GUID-D8DBD579-20F6-4CBF-BA28-FCB386F1E9B8.html@@@1.1.2.4.11 DRV_G3_MACRT_MacSnifferCallbackRegister Function@@@void DRV_G3_MACRT_MacSnifferCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_MAC_SNIFFER_CALLBACK callback, uint8_t* pDataBuffer ); Allows enabling G3 MAC RT Sniffer capabilities and set...","GUID-DC136775-2C6D-44AC-810C-0CD7057E42EF.html@@@1.2.2.4 Library Interface@@@PLC PHY Sniffer library provides the following interfaces: Functions Name Description SRV_PSNIFFER_GetCommand Extracts Command field from Sniffer frame SRV_PSNIFFER_SerialRxMessage Serializes a...","GUID-DCC4ACEB-0D26-4F64-A3E7-C6967F02FF75.html@@@1.1.3.4.9 DRV_METROLOGY_HarmonicAnalysisCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_HarmonicAnalysisCallbackRegister ( DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK callback ); Registers a function with the metrology driver to be called back when the...","GUID-DCDFA2E5-435B-474F-9824-D4D6B42D70DF.html@@@1.1.2.4.35 MAC_RT_PHY_PIB Enum@@@typedef enum { PHY_PIB_PRODID = 0 , PHY_PIB_MODEL, PHY_PIB_VERSION_STR, PHY_PIB_VERSION_NUM, PHY_PIB_TONE_MASK, PHY_PIB_TONE_MAP_RSP_DATA, PHY_PIB_TX_TOTAL, PHY_PIB_TX_TOTAL_BYTES...","GUID-DFA024DD-029D-43F9-A6C2-6D65EFA83011.html@@@1.1.3.4.38 DRV_METROLOGY_RMS_TYPE Enum@@@typedef enum { RMS_UA = 0 , RMS_UB, RMS_UC, RMS_IA, RMS_IB, RMS_IC, RMS_INI, RMS_INM, RMS_INMI, RMS_PT, RMS_PA, RMS_PB, RMS_PC, RMS_QT, RMS_QA, RMS_QB, RMS_QC, RMS_ST, RMS_SA, RMS_SB, RMS_SC...","GUID-DFD74282-E687-4256-A70B-A787486FF4B5.html@@@1.1.1.4.23 DRV_PLC_PHY_EXCEPTION Enum@@@typedef enum { /* SPI has detected an unexpected status, reset is recommended */ DRV_PLC_PHY_EXCEPTION_UNEXPECTED_KEY, /* SPI critical error */ DRV_PLC_PHY_EXCEPTION_CRITICAL_ERROR, /* Device has been...","GUID-E0E5E6A7-18F0-4315-B9C1-E4D3011230A8.html@@@1.2.6.4.6 SRV_USI_Tasks Function@@@void SRV_USI_Tasks ( const SYS_MODULE_INDEX index ) Maintains the USI&apos;s state machine. This function is used to maintain the USI&apos;s internal state machine and generate callback functions...","GUID-E1673D08-316E-42AF-A8D8-9B2D3E9DABCE.html@@@1.1.1.4.12 DRV_PLC_PHY_Status Function@@@SYS_STATUS DRV_PLC_PHY_Status ( const SYS_MODULE_INDEX index ); Gets the current status of the PLC driver module. This routine provides the current status of the PLC driver module...","GUID-E1E29C95-7504-4508-8208-101D4234420E.html@@@1.2.5.2 Using The Library@@@The CRC library is called to compute the CRC of a given length (8, 16, 32 bits) to append to a data buffer on transmission, and to verify the correctness of a received frame and its CRC. The following...","GUID-E254FA9C-1F59-4868-98F7-97FC767992D1.html@@@1.1.2.4.9 DRV_G3_MACRT_DataIndCallbackRegister Function@@@void DRV_G3_MACRT_DataIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_DATA_IND_CALLBACK callback ); Allows a client to set a data indication event handling function for the driver to...","GUID-E34B89AE-146E-4416-8D1D-5CD2075F5A80.html@@@1.1.1.4.22 DRV_PLC_PHY_EXCEPTION_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_EXCEPTION_CALLBACK )( DRV_PLC_PHY_EXCEPTION exception ); Pointer to a G3 MAC RT Driver Exceptions Event handler function. This data type defines the required function...","GUID-E467AA51-4BBE-4E17-A290-7C8C7B73AF9D.html@@@1.1.1.4.16 DRV_PLC_PHY_INIT Struct@@@typedef struct { /* Identifies the HAL API set to be used by the driver to access * peripherals. */ DRV_PLC_HAL_INTERFACE *plcHal; /* Number of clients */ size_t numClients; /* PLC Profile */ uint8_t...","GUID-E64151E5-311B-4866-A4CC-6D01A162D076.html@@@1.1.3.2 Using The Library@@@The quantities available in the Metrology Module make observable all basic components required to completely define or derive all power system measurement quantities for most currently used...","GUID-E8DB02F0-91A9-4650-AD55-7583FDCE6EF1.html@@@1.1.3.4.7 DRV_METROLOGY_IntegrationCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_IntegrationCallbackRegister ( DRV_METROLOGY_CALLBACK callback ); Allows a client to set a metrology integration event handling function for the driver to call back...","GUID-E9F1A57F-112B-48C1-BA59-D53D58162D10.html@@@1.1.3.4.12 DRV_METROLOGY_GetControlByDefault Function@@@DRV_METROLOGY_CONTROL * DRV_METROLOGY_GetControlByDefault ( void ); Get the pointer to the control registers defined by default via the Microchip Code Configurator (MCC) included in Harmony 3...","GUID-EB2FF372-3E82-4F17-8A72-E36EFEFD1B6A.html@@@1.1.1.4.4 DRV_PLC_PHY_TxRequest Function@@@void DRV_PLC_PHY_TxRequest ( const DRV_HANDLE handle, DRV_PLC_PHY_TRANSMISSION_OBJ *transmitObj ); Allows a client to transmit PLC PHY data through Power Line (PLC). This routine sends a new data...","GUID-EB8372C5-89A0-4063-B212-93D39E201E1C.html@@@1.1.3.4.24 DRV_METROLOGY_StartHarmonicAnalysis Function@@@void DRV_METROLOGY_StartHarmonicAnalysis ( uint8_t harmonicNum, DRV_METROLOGY_HARMONIC *pHarmonicResponse ); Starts the harmonic Analysis process. This routine configures the metrology library to...","GUID-EC8301E5-93D5-4777-8700-FDEB4DBEB360.html@@@1.2.1.4.1.5 SRV_PLC_PCOUP_BRANCH Enum@@@typedef enum { /* Main Transmission Branch */ SRV_PLC_PCOUP_MAIN_BRANCH, /* Auxiliary Transmission Branch */ SRV_PLC_PCOUP_AUXILIARY_BRANCH, } SRV_PLC_PCOUP_BRANCH; List of possible transmission...","GUID-ED53495E-E570-4FBC-9472-16BCF057AD77.html@@@1.1.2.4.3 DRV_G3_MACRT_Close Function@@@void DRV_G3_MACRT_Close ( const DRV_HANDLE handle ); Closes an opened instance of the MAC RT driver. This routine closes an opened instance of the MAC RT driver, invalidating the handle.A new handle...","GUID-EDB3D0B3-3F3F-42A7-ABCB-F42A6AE36965.html@@@1.1.3.4.37 DRV_METROLOGY_HARMONIC Struct@@@typedef struct { double Irms_A_m; double Irms_B_m; double Irms_C_m; double Irms_N_m; double Vrms_A_m; double Vrms_B_m; double Vrms_C_m; } DRV_METROLOGY_HARMONIC; Identifies the result of the Harmonic...","GUID-EDE40AB4-829C-44BE-876D-1FC5C8115EA5.html@@@1.3.1.2 APP_CONSOLE Module@@@The APP_CONSOLE module establishes a communication channel with the user using a serial interface and defining a series of commands to get/set information from the metrology library. The APP_CONSOLE...","GUID-EE46783A-E2A0-48C2-B479-6436C638C41B.html@@@1.2.1.4.2.1 SRV_PCOUP_Get_Default_Channel Function@@@DRV_PLC_PHY_CHANNEL SRV_PCOUP_Get_Default_Channel ( void ); Get the default PRIME channel. This function allows to get the PRIME channel used by default, which is configured through MCC of PLC Driver...","GUID-EE53EE94-8EDB-4740-AE6B-F8C1E3277BC5.html@@@1.1.1.4.24.10 DRV_PLC_PHY_RECEPTION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to received data buffer */ uint8_t *pReceivedData; /* Instant when frame was received (end of message) referred to 1us PHY counter */...","GUID-EE9DB5C9-8049-4860-B068-54DD0CFFDBA8.html@@@1.2.4.4.4 SRV_PVDDMON_Start Function@@@void SRV_PVDDMON_Start ( SRV_PVDDMON_CMP_MODE cmpMode ); Start the PVDD Monitor service. This routine starts the PVDD Monitor service, configuring the ADC plib and setting the comparison mode. Param...","GUID-EEC710D4-41F0-4CBF-88C6-9DDAF6BBE7E5.html@@@1.1.2.3 Configuring The Library@@@G3 PLC MACRT Driver Specific User Configurations G3 PLC MACRT Driver library is configured via MCC. Below is the Snapshot of the MCC configuration window for G3 PLC MACRT driver and brief description...","GUID-EF398ECF-CD01-4199-8C4D-0C410898C27C.html@@@1.2.1.4.1 Library Interface (G3-PLC)@@@If the PLC Driver uses G3-PLC PHY, the PLC PHY Coupling service library provides the following interfaces: Functions Name Description SRV_PCOUP_Get_Config Get the PLC PHY Coupling parameters for the...","GUID-F053AFD0-4BA9-4ACE-B7CB-7C7A48FB0E0F.html@@@1.2.1.4.2.2 SRV_PCOUP_Get_Channel_Config Function@@@SRV_PLC_PCOUP_CHANNEL_DATA * SRV_PCOUP_Get_Channel_Config(DRV_PLC_PHY_CHANNEL channel); Get the PLC PHY Coupling parameters for the specified PRIME channel. This function allows to get the PLC PHY...","GUID-F2657150-3DEB-4EEC-B99F-22FCD8A400C0.html@@@1.2.6 USI Service@@@The Smart Energy USI (Unified Serial Interface) Service is a multi-instance buffer model based driver interface which can be used in conjuction with another Smart Energy services/drivers to...","GUID-F2925ACF-B9D7-43CC-830D-549364A186D6.html@@@1.1.2.4.32 MAC_RT_STATUS Enum@@@typedef enum { MAC_RT_STATUS_SUCCESS = 0x00 , MAC_RT_STATUS_CHANNEL_ACCESS_FAILURE = 0xE1 , MAC_RT_STATUS_DENIED = 0xE2 , MAC_RT_STATUS_INVALID_INDEX = 0xF9 , MAC_RT_STATUS_INVALID_PARAMETER = 0xE8...","GUID-F2B0A336-0750-45E6-84D5-95A673FC4271.html@@@1.2.1.2.1 Using The Library (G3-PLC)@@@For G3-PLC, SRV_PCOUP_Set_Config has to be called once the PLC Driver is ready (binary loaded to PLC Device) and before any transmission is requested. Each transmission branch (main or auxiliary) is...","GUID-F3B4D4E5-0BE3-42AB-8080-D04E58F54789.html@@@1.1.1.3 Configuring The Library@@@PLC PHY Driver Specific User Configurations PLC PHY Driver library should be configured via MCC. Below is the Snapshot of the MCC configuration window for PLC PHY driver and brief description. Figure...","GUID-F3DA568F-1791-4DD6-9397-5528439DEEEE.html@@@1.1.2.4.7 DRV_G3_MACRT_GetTimerReference Function@@@uint32_t DRV_G3_MACRT_GetTimerReference ( const DRV_HANDLE handle ); Gets the internal timer reference from PLC transceiver, in microseconds. PLC transceiver has an internal 32 bits counter which is...","GUID-F65CE03F-4B50-4092-AB96-CA7DE388B46B.html@@@1.1.1.4.24.9 DRV_PLC_PHY_TRANSMISSION_CFM_OBJ Struct@@@typedef struct { /* Instant when frame transmission ended referred to 1us PHY counter */ uint32_t time; /* RMS_CALC it allows to estimate tx power injected */ uint32_t rmsCalc; /* Tx Result (see &quot;TX...","GUID-F79615A6-B539-4AC6-B6A5-61F185C38ABC.html@@@1.1.2.4.24 DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK )( MAC_RT_RX_PARAMETERS_OBJ *pParameters ); Pointer to a G3 MAC RT Driver Event handler function to get parameters from the last received message...","GUID-F7F88BE2-2CCE-41EE-A028-2F8E7F231F59.html@@@1.2.1.4.1.2 SRV_PCOUP_Set_Config Function@@@bool SRV_PCOUP_Set_Config (DRV_HANDLE handle, SRV_PLC_PCOUP_BRANCH branch); Set the PLC PHY Coupling parameters for the specified transmission branch. This function allows to set the PLC PHY Coupling...","GUID-F9A46118-1365-4666-88F4-980A97C99850.html@@@1.1.1.4.25.12 DRV_PLC_PHY_RECEPTION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to received data buffer */ uint8_t *pReceivedData; /* Instant when frame was received (start of message) referred to 1us PHY counter...","GUID-FA6D55E0-FFF4-4BE5-A80C-C57E20F20172.html@@@1.2.6.4.9 SRV_USI_STATUS Enum@@@typedef enum { SRV_USI_STATUS_UNINITIALIZED, SRV_USI_STATUS_NOT_CONFIGURED, SRV_USI_STATUS_CONFIGURED, SRV_USI_STATUS_ERROR } SRV_USI_STATUS; List of possible values of USI status. This type defines...","GUID-FAC7780A-68D6-4C70-AC4B-25FCF620B196.html@@@1.2.2.4.2 SRV_PSNIFFER_SerialRxMessage Function@@@size_t SRV_PSNIFFER_SerialRxMessage ( uint8_t* pDataDst, DRV_PLC_PHY_RECEPTION_OBJ* pDataSrc ); Serializes a received PLC frame along with its parameters. This function takes an object containing a...","GUID-FB4BC534-FE65-4396-85AA-33E97F8474F2.html@@@1.1.3.4.33 DRV_METROLOGY_PHASE_ID Enum@@@typedef enum { PHASE_A = 1 , PHASE_B = 2 , PHASE_C = 3 , PHASE_T = 5 , PHASE_ID_NUM = PHASE_T } DRV_METROLOGY_PHASE_ID; Line identifier used in the calibration process. Phase A, B and C are used to...","GUID-FB84DD36-66A1-4AC7-8809-C528890A4B16.html@@@1.1.1.4.24.1 DRV_PLC_PHY_ID Enum@@@typedef enum { PLC_ID_HOST_DESCRIPTION_ID = 0x0100 , PLC_ID_HOST_MODEL_ID = 0x010A , PLC_ID_HOST_PHY_ID = 0x010C , PLC_ID_HOST_PRODUCT_ID = 0x0110 , PLC_ID_HOST_VERSION_ID = 0x0112...","GUID-FBA5ADF9-861F-4690-AAE9-9188BCD3A6AE.html@@@1.2.4.4.1 SRV_PVDDMON_CMP_MODE Enum@@@typedef enum { /* Notify when PVDD level enters the comparison window */ SRV_PVDDMON_CMP_MODE_IN, /* Notify when PVDD level leaves the comparison window */ SRV_PVDDMON_CMP_MODE_OUT, }...","GUID-FF6556EE-43F6-41E6-87E4-B10CBEA8DF12.html@@@1.1.1.4.25.2 DRV_PLC_PHY_SCH Enum@@@typedef enum { SCHEME_DBPSK = 0 , SCHEME_DQPSK = 1 , SCHEME_D8PSK = 2 , SCHEME_DBPSK_C = 4 , SCHEME_DQPSK_C = 5 , SCHEME_D8PSK_C = 6 , SCHEME_R_DBPSK = 12 , SCHEME_R_DQPSK = 13 , } DRV_PLC_PHY_SCH...","cshelp.html@@@Context Sensitive Help@@@..."];
});