define(function () {
return ["GUID-000D4A61-94C6-4D5C-BCA3-4D0D98D90389.html@@@1.1.3.4.10 DRV_METROLOGY_GetStatus Function@@@DRV_METROLOGY_STATUS DRV_METROLOGY_GetStatus ( void ); Get the status of the metrology driver. Metrology function status: DRV_METROLOGY_STATUS_UNINITIALIZED: Metrology driver has not been initialized...","GUID-00C1F23A-49A2-48A7-B812-4CAD4C73DD23.html@@@1.2.3.4.6 SRV_PSERIAL_ParseTxMessage Function@@@void SRV_PSERIAL_ParseTxMessage ( DRV_PLC_PHY_TRANSMISSION_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts a PLC frame to be transmitted from SRV_PSERIAL_CMD_PHY_SEND_MSG Serial frame. Takes a SendMsg...","GUID-00D7D26B-EF02-4A02-8A14-0A48CC0FDB1E.html@@@1.1.4.4.29 DRV_RF215_PHY_TYPE Enum@@@typedef enum { PHY_TYPE_FSK = 0 , PHY_TYPE_OFDM = 1 , } DRV_RF215_PHY_TYPE; Defines the available PHY types. This data type defines the list of available RF215 PHY types. Each PHY type must be enabled...","GUID-01855CB4-57E8-4BE3-A093-14CBFFAABD51.html@@@1.1.1.4.6 DRV_PLC_PHY_PIBSet Function@@@void DRV_PLC_PHY_PIBSet ( const DRV_HANDLE handle, DRV_PLC_PHY_PIB_OBJ *pibObj ); Allows a client to set information to PLC transceiver on PHY information base (PIB). This routine sets PHY data...","GUID-018CC3A0-CE2F-4BE6-AC40-66721317171E.html@@@1.2.4.4.5 SRV_PVDDMON_Restart Function@@@void SRV_PVDDMON_Restart ( SRV_PVDDMON_CMP_MODE cmpMode ); Restart the PVDD Monitor service. This routine restarts the PVDD Monitor service, and allows clients to modify the comparison mode in...","GUID-01D1E466-0B5A-47A6-93F8-6BB195A8B1B1.html@@@1.3.1.3.8 Event Record@@@The Demo Meter application implements an event record software module that stores the event happening and its occurrence time. The following events are supported: Voltage sag event Power direction...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-033E46F6-14A5-4DD2-9BFC-BDA2AE973092.html@@@1.2.2.4.8 SRV_PSNIFFER_ConvertToneMask Function@@@void SRV_PSNIFFER_ConvertToneMask ( uint8_t* pToneMaskDst, uint8_t* pToneMaskSrc ); Converts a Tone Mask configuration coming from an external tool to the right format to be configured on PLC PHY...","GUID-03834D6A-B58D-407F-A068-F10109655385.html@@@1.2.12.4.14 SRV_QUEUE_ELEMENT Struct@@@typedef struct SRV_QUEUE_ELEMENT_tag { /* Pointer to the previous object of the queue */ struct SRV_QUEUE_ELEMENT_tag *prev; /* Pointer to the next object of the queue */ struct SRV_QUEUE_ELEMENT_tag...","GUID-0582DE0E-C854-4C96-BA08-C165BF90A15F.html@@@1.1.2.4.16 DRV_G3_MACRT_ExternalInterruptHandler Function@@@void DRV_G3_MACRT_ExternalInterruptHandler ( const PIO_PIN pin, const uintptr_t context ); Allows application to register callback for PLC Interrupt pin. This function allows a client to register a...","GUID-06150FA4-4D19-4118-9EFA-0CB09D6AFCCB.html@@@1.2.11.4.2 CIPHER_Wrapper_CmacUpdate Function@@@int32_t CIPHER_Wrapper_CmacUpdate ( const uint8_t *input, uint32_t iLen) Feeds an input buffer into an ongoing CMAC computation. This function feeds an input buffer into an ongoing CMAC computation...","GUID-065E9B11-C994-458B-81A0-245A6DDCA060.html@@@1.1.3.4.5 DRV_METROLOGY_Start Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Start ( void ); Starts the metrology driver. This routine shoud be called until the metrology library application running in the second processor is ready to be...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-08A6DB8F-C8BE-470F-A8C9-FA1021C398C0.html@@@1.2.1.4.2 Library Interface (PRIME)@@@If the PLC Driver uses PRIME PHY, the PLC PHY Coupling service library provides the following interfaces: Functions Name Description SRV_PCOUP_Get_Default_Channel Get the default PRIME channel...","GUID-08D44F56-1F5C-4E8F-B224-1488888FCAC9.html@@@1.1.4.4 Library Interface@@@RF215 driver library provides the following interfaces: Name Description DRV_RF215_Initialize Initializes the RF215 driver DRV_RF215_Status Gets the current status of the RF215 driver module...","GUID-0A58D291-CDCA-4C22-BAE0-D55E4517D530.html@@@1.2.6.4.7 SRV_USI_Send_Message Function@@@void SRV_USI_Send_Message ( SRV_USI_HANDLE handle, SRV_USI_PROTOCOL_ID protocol, uint8_t *data, size_t length ) Sends a message through serial interface (USI). This function is used to send a message...","GUID-0C07CB6E-5CF9-4C7E-AC48-965198152AAF.html@@@1.2.6.4.8 SRV_USI_PROTOCOL_ID Enum@@@typedef enum { /* PRIME Manager generic */ SRV_USI_PROT_ID_MNGP_PRIME = 0x00 , /* PRIME Manager: GETQRY */ SRV_USI_PROT_ID_MNGP_PRIME_GETQRY = 0x00 , /* PRIME Manager: GETRSP */...","GUID-0C282E5D-31BB-452A-B8CB-BEF5DDA61428.html@@@1.2.6.1 How the Library Works@@@USI service is a wrapper that provides the interface between the Smart Energy stacks and the serial communications channel (UART or USB CDC). For USI message transmission, SRV_USI_Send_Message...","GUID-0C474247-A02D-4DAA-B7CA-976F25A16403.html@@@1.1.2.4.4 DRV_G3_MACRT_TxRequest Function@@@void DRV_G3_MACRT_TxRequest ( const DRV_HANDLE handle, uint8_t *pData, uint16_t length ); Allows a client to transmit G3 MAC data through Power Line (PLC). This routine sends a new data message...","GUID-0C719567-77D5-49EA-8E00-DDF6A1EEA6BC.html@@@1.1.2.4.49 MAC_RT_TONE_MAP_RSP_DATA Struct@@@typedef struct { /* Modulation type */ MAC_RT_MOD_TYPE modType; /* Modulation scheme */ MAC_RT_MOD_SCHEME modScheme; /* Tone Map */ MAC_RT_TONE_MAP toneMap; } MAC_RT_TONE_MAP_RSP_DATA; G3-PLC Tone Map...","GUID-0D323609-4067-4759-A4E0-F8CE70D88B7F.html@@@1.1.3.4.2 DRV_METROLOGY_Reinitialize Function@@@SYS_MODULE_OBJ DRV_METROLOGY_Reinitialize ( SYS_MODULE_INIT * init ); Re-initializes the metrology driver according to the init parameter. This routine re-initializes the metrology driver resetting...","GUID-0D3D6A14-02C7-4AD3-B221-BC057153A38B.html@@@1.1.1.4.25.9 DRV_PLC_PHY_SIGNAL_CAPTURE_INFO Enum@@@typedef struct { uint8_t uc_num_frags; uint8_t uc_status; } DRV_PLC_PHY_SIGNAL_CAPTURE_INFO; Structure defining information about PRIME Noise Capture This structure contains the information the status...","GUID-0E25E782-2C3B-431A-8C06-C0D0D5B30767.html@@@1.2.8.1 How the Library Works@@@RF Serial library allow accessing to RF215 Driver API through a serial interface. Library manages commands coming from a serial interface through the USI library. These commands include access to RF...","GUID-0E9A7DEF-904D-451D-A356-FACF9360BA4F.html@@@1.1.3.4.41 DRV_METROLOGY_STATUS Enum@@@typedef enum { DRV_METROLOGY_STATUS_UNINITIALIZED = SYS_STATUS_UNINITIALIZED, DRV_METROLOGY_STATUS_BUSY = SYS_STATUS_BUSY, DRV_METROLOGY_STATUS_READY = SYS_STATUS_READY, DRV_METROLOGY_STATUS_HALT =...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-1279B3B1-7AC6-4986-8E88-539CBCEF5F52.html@@@1.2.2.3 Configuring The Library@@@PLC PHY Sniffer Service is configured via MCC. Below is the Snapshot of the MCC configuration window for PLC PHY Sniffer Service and brief description. Figure .\u2000 PLC PHY Sniffer Service configuration...","GUID-12833367-18A3-4273-875A-63BBDDAEB68F.html@@@1.1.1.4.24 G3 Data types and constants@@@G3 Data types and constants...","GUID-14C662AB-69E2-4C87-9869-99B3A87461C8.html@@@1.1.3.4.16 DRV_METROLOGY_SetControl Function@@@void DRV_METROLOGY_SetControl (DRV_METROLOGY_REGS_CONTROL * pControl); Establishes the content of all control registers at once. Overwrite the value of the every control register in the shared memory...","GUID-15B110AF-D87C-4DFC-A9B4-B32D12B324A0.html@@@1.1.3.4.1 DRV_METROLOGY_Initialize Function@@@SYS_MODULE_OBJ DRV_METROLOGY_Initialize ( SYS_MODULE_INIT * init, uint32_t resetValue ); Initializes the metrology driver according to the init parameter and the cause of the reset of the main...","GUID-15B67654-0B46-4723-8777-38B0BD16BBEC.html@@@1.1.4.4.8 DRV_RF215_TxCfmCallbackRegister Function@@@void DRV_RF215_TxCfmCallbackRegister ( DRV_HANDLE drvHandle, const DRV_RF215_TX_CFM_CALLBACK callback, uintptr_t context ); Allows a client to set an event handling function for the driver to call...","GUID-15C4E6AF-BB4B-4B66-B165-F3B9F3B41EBD.html@@@1.1.4.3 Configuring The Library@@@RF215 Driver library is configured via MCC. Below is the Snapshot of the MCC configuration window for RF215 driver and brief description. Figure .\u2000 RF215 Driver configuration options RF Device Used...","GUID-16CEBB74-5878-4BFE-B93C-DF5E026A59E8.html@@@1.3.1.1 Metering Demo Root layer Project Graph@@@The root layer project shows all the components used by the different applications: Metrology driver is used by the Metrology application. RTC peripheral library is used by the Energy application...","GUID-16D2166F-F65C-431C-951A-2C4B18120281.html@@@1.2.2.4.1 SRV_PSNIFFER_GetCommand Function@@@SRV_PSNIFFER_COMMAND SRV_PSNIFFER_GetCommand ( uint8_t* pData ); Extracts Command field from Sniffer frame. Takes Sniffer frame as parameter and extracts the Command field from the expected position...","GUID-173A4FCA-4C46-47BE-BCDA-0159C4CF2505.html@@@1.1.1.1 How the Library Works@@@The PLC PHY driver library is a single-client, single-instance based driver interface. The PLC PHY library communicates with a PLC transceiver using an SPI port, Direct Memory Access and the GPIO...","GUID-1750537D-FAC6-4DE9-A207-7F92FCF38D72.html@@@1.1.2.4.39 MAC_RT_RX_PARAMETERS_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* High Priority */ bool highPriority; /* PDU Link Quality */ uint8_t pduLinkQuality; /* Phase Differential */ uint8_t phaseDifferential; /*...","GUID-18109125-3906-41A5-8221-A41436ADE4A4.html@@@1.1.3.4.35 DRV_METROLOGY_CALIBRATION Struct@@@typedef struct { DRV_METROLOGY_REGS_CONTROL metControlConf; DRV_METROLOGY_CALIBRATION_REFS references; uint32_t featureCtrl0Backup; double freq; uint32_t numIntegrationPeriods; uint64_t dspAccIa...","GUID-1858EA4A-A068-4235-B35F-D5D3D33203FF.html@@@1.1.4.4.23 DRV_RF215_PHY_BAND_OPM Enum@@@typedef enum { /* 863 (863-870 MHz) band. Europe, India */ SUN_FSK_BAND_ 863 _OPM1 = 0x0401 , SUN_FSK_BAND_ 863 _OPM2 = 0x0402 , SUN_FSK_BAND_ 863 _OPM3 = 0x0403 , SUN_OFDM_BAND_ 863 _OPT4 = 0x0440...","GUID-186BE51F-32BF-4657-A988-D4048653935B.html@@@1.2.11.4.6 CIPHER_Wrapper_CcmEncryptAndTag Function@@@int32_t CIPHER_Wrapper_CcmEncryptAndTag (uint32_t length, const uint8_t *iv, uint32_t ivLen, const uint8_t *add, uint32_t addLen, const uint8_t *input, uint8_t *output, uint8_t *tag, uint32_t tagLen)...","GUID-1940493E-6D8C-482D-8D07-1D3A5E8D207B.html@@@1.1.4.4.14 DRV_RF215_GetPib Function@@@DRV_RF215_PIB_RESULT DRV_RF215_GetPib ( DRV_HANDLE drvHandle, DRV_RF215_PIB_ATTRIBUTE attr, void * value ); Gets value of PIB attribute. This routine allows a client to get the value of a PIB (PHY...","GUID-1A5C5506-BEF0-4666-9A96-8C3D7C51211A.html@@@1.2.3.1 How the Library Works@@@PLC Serial library allow accessing to PLC PHY Driver API through a Serial interface. Library manages commands coming from a Serial interface through the USI library, these commands include access to...","GUID-1B13E0DF-B92C-44E7-B52F-06852D1B5DB0.html@@@1.3.1.3.4.2 Manual Calibration@@@The calibration constants must be calculated according to the metrology library documentation. A spreadsheet is included in the distribution package to make the procedure easier. This spreadsheet...","GUID-1B2EA98D-2D73-4430-B618-98A85A520318.html@@@1.2.1.4.1.6 SRV_PLC_PCOUP_DATA Struct@@@typedef struct { /* Target RMS values in HIGH mode for dynamic Tx gain */ uint32_t rmsHigh[SRV_PCOUP_MAX_NUM_TX_LEVELS]; /* Target RMS values in VLOW mode for dynamic Tx gain */ uint32_t...","GUID-1B8BAD12-85A8-4E0E-87A8-CE8E4D5867C9.html@@@1.2.3.4.3 SRV_PSERIAL_SerialGetPIB Function@@@size_t SRV_PSERIAL_SerialGetPIB ( uint8_t* pDataDst, DRV_PLC_PHY_PIB_OBJ* pDataSrc ); Serializes a response to a SRV_PSERIAL_CMD_PHY_GET_CFG command. Takes a DRV_PLC_PHY_PIB_OBJ object as parameter...","GUID-1C3755D7-2C24-4854-B5B1-9F335BA0389D.html@@@1.2.2.4.6 SRV_PSNIFFER_SetTxPayloadSymbols Function@@@void SRV_PSNIFFER_SetTxPayloadSymbols ( uint16_t payloadSym ); Sets the number of transmitted symbols on Sniffer library for further use. Number of transmitted symbols is set on Sniffer library so...","GUID-1C383DE6-835B-43D8-812B-E35155090B0F.html@@@1.1.3.4.34 DRV_METROLOGY_CALIBRATION_REFS Struct@@@typedef struct { double aimVA; double aimIA; double angleA; double aimVB; double aimIB; double angleB; double aimVC; double aimIC; double angleC; DRV_METROLOGY_PHASE_ID lineId; }...","GUID-1CC5DBE3-7849-4F27-B8F6-C13BB5E48EB1.html@@@1.2.4.3 Configuring The Library@@@PVDD Monitor Service Specific User Configurations PVDD Monitor Service library should be configured via MCC. Below is the Snapshot of the MCC configuration window for PVDD Monitor Service and brief...","GUID-1D099440-709D-4D2E-AE2C-163F5D2415CE.html@@@1.1.2.4.17 DRV_G3_MACRT_SleepIndCallbackRegister Function@@@void DRV_G3_MACRT_SleepIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_SLEEP_IND_CALLBACK callback ); Allows a client to set a sleep mode disable event handling function for the...","GUID-1D2064DA-2F59-46DC-8B62-9D61B1B299DD.html@@@1.2.2.4.3 SRV_PSNIFFER_SerialCfmMessage Function@@@size_t SRV_PSNIFFER_SerialCfmMessage ( uint8_t* pDataDst, DRV_PLC_PHY_TRANSMISSION_CFM_OBJ* pCfmObj ); Serializes a transmitted PLC frame along with its parameters. This function takes a previously...","GUID-1D7D316E-D9C7-43F0-BA7D-E92B8D9B4019.html@@@1.3.1.3.4.3.1 Individual Phase Calibration@@@The calibration is performed by means of the \u201CCAL_A\u201D (phase A), \u201CCAL_B\u201D (phase B) or \u201CCAL_C\u201D (phase C) commands. To properly calculate the phase calibration constants, it is advisable to set the WECO...","GUID-1EB20D0D-FAB8-46CF-B99E-66BDD7CB6A0F.html@@@1.1.3.4.39 DRV_METROLOGY_AFE_DATA Struct@@@typedef struct { uint32_t energy; DRV_METROLOGY_AFE_EVENTS afeEvents; uint32_t RMS[RMS_TYPE_NUM]; } DRV_METROLOGY_AFE_DATA; Identifies the data calculated from the metrology AFE measurements. Field...","GUID-1ECD32AA-B8EC-42FD-AABB-9F4FEAC0EAB0.html@@@1.1.4.4.28 DRV_RF215_OFDM_ITLV_MODE Enum@@@typedef enum { /* Interleaving depth: one symbol */ OFDM_INTERLEAVING_ 0 = 0 , /* Interleaving depth: frequency domain spreading factor symbols */ OFDM_INTERLEAVING_ 1 = 1 , }...","GUID-1FD111E6-2DDE-4AD0-8643-C1CFFBF423DC.html@@@1.1.2.4.27 DRV_G3_MACRT_STATE Enum@@@typedef enum { DRV_G3_MACRT_STATE_UNINITIALIZED = SYS_STATUS_UNINITIALIZED, DRV_G3_MACRT_STATE_BUSY = SYS_STATUS_BUSY, DRV_G3_MACRT_STATE_READY = SYS_STATUS_READY, DRV_G3_MACRT_STATE_INITIALIZED =...","GUID-20088163-1F2F-45CC-8351-1E7BFF0CD05A.html@@@1.3.1.4 Running Demonstration Steps@@@Build and download the demonstration project on the target board. Terminal interface setup: A virtual COM port will be detected on the computer, when the USB cable is connected to USB-UART connector...","GUID-2023FB1C-E7E7-4813-9BA3-480FEB57627B.html@@@1.1.3 Metrology Driver@@@This driver defines the interface of Microchip smart meter PIC32CXMTSH/C metrology firmware. It describes the metrology control registers, metrology status registers and the quantities which shall be...","GUID-2073D6BA-CDEC-4E93-9C98-8C6C78D11FF6.html@@@1.1.2.4.30 DRV_G3_MACRT_TX_CFM_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_TX_CFM_CALLBACK )( MAC_RT_TX_CFM_OBJ *cfmObj ); Pointer to a G3 MAC RT Driver Transmission Confirm Event handler function. This data type defines the required function...","GUID-20BB2D40-0955-4924-B3E9-3368E83DBCE5.html@@@1.1.4.4.25 DRV_RF215_FSK_MOD_IDX Enum@@@typedef enum { /* modIdx = 1.0 */ FSK_MOD_IDX_ 1 _ 0 = 0 , /* modIdx = 0.5 */ FSK_MOD_IDX_ 0 _ 5 = 1 , } DRV_RF215_FSK_MOD_IDX; Defines the available FSK modulation indexes. This data type defines the...","GUID-2155582A-0939-41A5-91DE-53D1FC6F1003.html@@@1.2.6.4.14 SRV_USI_INIT Struct@@@typedef struct { const void * const deviceInitData; const SRV_USI_DEV_DESC* consDevDesc; uint32_t deviceIndex; void * pWrBuffer; size_t wrBufferSize; } SRV_USI_INIT; Contains the data required to...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-2188B5B7-760D-4261-AEB9-DDCD9B01A109.html@@@1.3 Demo Applications@@@2 demo applications have been developed to guide customers in creating or adding functionality to their own applications. Smart Energy Demo Meter Application: an example of metering application using...","GUID-218E3C2E-A1F7-47A3-8CFD-A05382A2A533.html@@@1.2.11.4.12 AES_Wrapper_Encrypt Function@@@void AES_Wrapper_Encrypt ( const uint8_t *in, uint8_t *out) Encrypts one block of data. This function encrypts one block of data, equal to the AES block size. Key must be set earlier with a call to...","GUID-21C5D833-A82F-4742-93CE-552B26C72FDE.html@@@1.3.1.1.7 File System and Memory configuration@@@Due to the Meter demo application needs to read/write data information from/to a external memory, a File System is mounted on the external memory. The Datalog application manages the File System...","GUID-21C6829A-CB89-4FE2-A0B6-7467DEAB58C5.html@@@1.1.3.1 How the Metrology driver library works@@@This driver has been designed to be only used with PIC32CXMTSH or PIC32CXMTC devices, which are parts of the MISTRAL (PIC32CXMT) device family of the Smart Energy group. Depending on which device is...","GUID-220B3861-36A8-4139-8554-F40D11E3C262.html@@@1.2.4.1 How the Library Works@@@To assure the integrity of the amplification stage embedded in the PL460 device, the PVDD Monitor service implements a window comparator in which the power supply of PLC driver amplifier and...","GUID-221A7AF4-7BA9-4B11-8831-250FFF420B31.html@@@1.2.7 RF PHY Sniffer Service@@@This service serializes transmitted and received RF PHY frames (along with informative frame parameters) in a buffer to later send them through a serial interface using the USI Service. On the other...","GUID-2356AE43-5731-46E5-8556-A282237A8145.html@@@1.1.3.3 Metrology driver Configurations@@@Metrology Specific User Configurations Metrology Driver library should be configured via MCC. Below is the Snapshot of the MCC configuration window for Metrology driver and brief description. Figure...","GUID-236D829C-8B46-43BA-A871-CA5A7F27C374.html@@@1.2.7.2 Using The Library@@@The RF PHY Sniffer library is an add-on that can be used along with the RF215 Driver . The RF215 driver is the one in charge of RF communications, while the Sniffer is used to encode the packets...","GUID-23C053D8-E569-439C-B230-D50BA21A43CF.html@@@1.1.3.4.30 DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK)(uint8_t harmonicNum); Defines the data type and function signature for the callback function of the harmonics analysis. The Metrology driver...","GUID-2425BC33-18B8-42AA-BE38-24FAD4E2D6B3.html@@@2.11 Build and Program@@@The demo project will be compiled and programmed to both PIC32CXMTG-EK boards. Build the application Open the project Properties by Right Clicking on the project name (pic32cxmtg) Make sure that XC32...","GUID-25EA7A16-62EA-4994-B68A-8AC6A5C6A59A.html@@@1.3.1.1.4 RTC peripheral configuration@@@The Demo Meter application can set the date and time in BCD format as well as other functionalities. The following image shows the RTC configuration: Figure .\u2000 Real Time Clock configuration...","GUID-261B02C6-E685-4C12-8EB7-5E717F054F60.html@@@1.1.1 PLC PHY Driver@@@This driver provides a non-blocking interface with the external on-chip PLC transceiver. The library uses the SPI peripheral library (PLIB) and the Direct Memory Access controller to interface with...","GUID-26706739-B32F-42C2-80DD-07DAD36E6097.html@@@2.5 Adding Harmony Modules to Project@@@Go to MCC Project Graph window, as opened in previous step Figure .\u2000 MCC Project Graph Add BSP Component. On Device Resources , navigate to Board Support Packages (BSPs) and click on + sign next to...","GUID-28C5D506-AFF3-44D6-8483-1337B69B64B5.html@@@1.3.1.3.11 Application (Core 0) Reset with Metrology (Core 1) Running Application Example@@@The Dual Core architecture allows some interesting functionality for an electricity meter, like the possibility to restart the Core 0 while the Core 1 continues running the metrology library, so...","GUID-292AE054-43EB-4942-A030-F4D2A2F55F87.html@@@1.1.2.4.11 DRV_G3_MACRT_RxParamsIndCallbackRegister Function@@@void DRV_G3_MACRT_RxParamsIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK callback ); Allows a client to set a G3 MAC RT reception parameters event handling...","GUID-29D4D959-1677-4A62-8B08-BE81ECEAB8E6.html@@@1.2.1.4 Library Interface@@@The PLC PHY Coupling service library interface depends on the PLC protocol used by the PLC Driver (G3-PLC or PRIME)...","GUID-2ABA21D8-E81B-4874-8E75-EB9806F5D42C.html@@@1.3.1.3.2 Metrology Firmware - Core 1@@@The Metrology firmware runs on the metrology processor (Core 1). This processor acquires voltages and currents data samples at a 16 KHz rate from the Energy Metering AFE. Then, it calculates the meter...","GUID-2C3CD0E2-6C3D-459E-BFED-C275DBCEF3E1.html@@@1.1.3.4.14 DRV_METROLOGY_GetAccData Function@@@DRV_METROLOGY_REGS_ACCUMULATORS * DRV_METROLOGY_GetAccData ( void ); Get the pointer to the accumulator registers of the metrology library application running on the second processor. Accumulator...","GUID-2D4B1FB0-E202-4D55-BD07-801884E97291.html@@@1.1.3.4.23 APP_METROLOGY_StartCalibration Function@@@void APP_METROLOGY_StartCalibration ( void ); Starts internal calibration process. This routine is used to automatically calibrate the board. It requires accurate and stable voltage and current...","GUID-2EAB4E91-C5C6-4CBC-8597-0B04A25D013E.html@@@1.1.2.4.65 MAC_RT_PHY_SNIFFER_HEADER Struct@@@typedef struct { /* SNIFFER_IF_PHY_COMMAND_G3_VERSION */ uint8_t commandVersion; /* SNIFFER_VERSION */ uint8_t snifferVersion; /* SNIFFER_PLC_G3 */ uint8_t deviceVersion; /* ModType (high) + ModScheme...","GUID-2EE5EBF2-6C99-4D66-9EEC-A0C3C8CD40EF.html@@@1.1.4 RF215 Driver@@@This driver provides a non-blocking interface with the external on-chip RF transceiver. The library uses the SPI peripheral library (PLIB) and the Direct Memory Access (DMA) controller to interface...","GUID-2F25D9D4-6D33-4C7F-905D-B64EDB6370ED.html@@@1.3.1.3.6 Demo Meter Application Commands@@@...","GUID-3090B7A4-37CE-47C6-A52C-2E343080CB9C.html@@@1.2.12.4.10 SRV_QUEUE_Set_Capacity Function@@@void SRV_QUEUE_Set_Capacity ( SRV_QUEUE *queue, uint16_t capacity ); Modifies the total capacity of a queue. This function modifies the total capacity of a queue. The queue must have been initialized...","GUID-30B81AFB-7AB5-4FCF-9B5A-0AD04C4CD34B.html@@@1.1.4.4.19 DRV_RF215_READY_STATUS_CALLBACK Typedef@@@typedef void ( *DRV_RF215_READY_STATUS_CALLBACK ) (uintptr_t context, SYS_STATUS status); Pointer to a RF215 driver ready status callback function. This data type defines the required function...","GUID-30BA13D1-160E-469C-B02D-758D6F4C7FE0.html@@@1.1.2.4.44 MAC_RT_BAND Enum@@@typedef enum { G3_CEN_A = 0 , G3_CEN_B, G3_FCC, G3_ARIB, G3_INVALID = 0xFF } MAC_RT_BAND; The list of G3-PLC bandplans. This data type defines the list of G3-PLC bandplans...","GUID-313FB4A6-7FAE-4AF5-AA07-CBD513967D27.html@@@1.1.1.4.25.8 DRV_PLC_PHY_SIGNAL_CAPTURE_STATE Enum@@@typedef enum { SIGNAL_CAPTURE_IDLE, SIGNAL_CAPTURE_RUNNING, SIGNAL_CAPTURE_READY, } DRV_PLC_PHY_SIGNAL_CAPTURE_STATE; PRIME Noise Capture States This Enum contains every available states in PRIME...","GUID-329198A1-BC49-4122-B71D-BEF5575E0C6E.html@@@1.2.2.2 Using The Library@@@The PLC PHY Sniffer library is an add-on that can be used along with the PLC PHY Driver or the G3 PLC MAC RT Driver . The PHY or MAC RT driver is the one in charge of PLC communications, while the...","GUID-333504F0-1F1A-40DF-956F-555FB019661B.html@@@1.3.1.3.12 Metrology (Core 1) Reload with Application (Core 0) Running Application Example@@@The Dual Core architecture allows reloading of the Core 1 metrology library binary while the Core 0 application continues running. The Demo Meter application includes the command &quot;RLD&quot;, which is an...","GUID-33D3E849-2312-429D-9ED1-535E51364C43.html@@@1.1.2.4.61 MAC_RT_AUX_SECURITY_HEADER Struct@@@typedef struct { /* Security Level */ uint8_t securityLevel : 3 ; /* Key Identifier Mode */ uint8_t keyIdentifierMode : 2 ; /* Reserved */ uint8_t reserved : 3 ; /* Frame Counter */ uint32_t...","GUID-35725EB2-BDEE-4B6A-B204-9B892470097A.html@@@1.1.1.4.25.1 DRV_PLC_PHY_ID Enum@@@typedef enum { PLC_ID_HOST_DESCRIPTION_ID = 0x0100 , PLC_ID_HOST_MODEL_ID = 0x010A , PLC_ID_HOST_PHY_ID = 0x010C , PLC_ID_HOST_PRODUCT_ID = 0x0110 , PLC_ID_HOST_VERSION_ID = 0x0112...","GUID-357F9C0B-F0A3-4E0A-AAF2-0D6BC4F01B7C.html@@@1.2.13 Log Report Service@@@Some Smart Energy components, such as communication stacks (G3 and PRIME), the Queue and USI services, provide information about operation, especially about errors and warnings, and also debug...","GUID-3751B649-9A45-47A9-B566-B39DECF4CB12.html@@@1.2.11.4.13 AES_Wrapper_Decrypt Function@@@void AES_Wrapper_Decrypt ( const uint8_t *in, uint8_t *out) Decrypts one block of data. This function decrypts one block of data, equal to the AES block size. Key must be set earlier with a call to...","GUID-3778B1C9-F454-4097-93C1-EB63083FD1AD.html@@@1.2.1.4.2.4 SRV_PLC_PCOUP_CHANNEL_DATA Struct@@@typedef struct { /* Target RMS values in HIGH mode for dynamic Tx gain */ uint32_t rmsHigh[ 8 ]; /* Target RMS values in VLOW mode for dynamic Tx gain */ uint32_t rmsVLow[ 8 ]; /* Threshold RMS values...","GUID-37B7077B-6AB2-40D2-B7C6-5F19A18815D5.html@@@1.2.12.3 Configuring The Library@@@The Queue Service has no configuration options via MCC. It just satisfies the requirement of other components, such as Smart Energy communication stacks. Figure .\u2000 Queue Service configuration options...","GUID-37E2FBCD-2DA4-4ABA-8E30-2B8172A389CF.html@@@1.1.4.4.17 DRV_RF215_TX_HANDLE_INVALID Macro@@@#define DRV_RF215_TX_HANDLE_INVALID ((DRV_RF215_TX_HANDLE)(- 1 )) Definition of an invalid transmission handle. This is the definition of an invalid transmission handle. An invalid transmission handle...","GUID-388C8E2A-F0FE-40EC-8115-8680F569945E.html@@@1.1.3.4.42 DRV_METROLOGY_INIT Struct@@@typedef struct { uint32_t regBaseAddress; uint32_t binStartAddress; uint32_t binEndAddress; } DRV_METROLOGY_INIT; Defines the data required to initialize the Metrology driver. Field description...","GUID-39692EBF-C9ED-41F6-A1BB-52B76247E293.html@@@1.1.2.4.5 DRV_G3_MACRT_PIBGet Function@@@MAC_RT_STATUS DRV_G3_MACRT_PIBGet ( const DRV_HANDLE handle, MAC_RT_PIB_OBJ *pibObj ); Allows a client to get information from PLC transceiver about G3 MAC RT and PHY information base (PIB). This...","GUID-3B1EF1C8-DAED-4E34-95E6-86D4AB1D80E7.html@@@1.3.1.3.6.5.2 Harmonic Analysis Command@@@When the application code receives a \u201CHRR[n]\u201D command, it configures the metrology library to enable the harmonics computation and to calculate the data corresponding to the harmonic number n. Then...","GUID-3BCCA565-F529-442A-BE9B-324CCA7F2702.html@@@1.1.1.4.24.11 DRV_PLC_PHY_PIB_OBJ Struct@@@typedef struct { /* Pointer to PIB data */ uint8_t *pData; /* PLC Information base identification */ DRV_PLC_PHY_ID id; /* Length in bytes of the data information */ uint16_t length; }...","GUID-3BEF2566-0B17-40A7-BBFE-7CFEF5D8FB5F.html@@@1.2.11.4.3 CIPHER_Wrapper_CmacFinish Function@@@int32_t CIPHER_Wrapper_CmacFinish (uint8_t *output) Finishes the CMAC operation and writes the result to the output buffer. This function finishes the CMAC operation and writes the result to the...","GUID-3C07876A-DF6C-48CF-8AA5-D5A69CF58785.html@@@1.1.2.4.8 DRV_G3_MACRT_InitCallbackRegister Function@@@void DRV_G3_MACRT_InitCallbackRegister ( const SYS_MODULE_INDEX index, const DRV_G3_MACRT_INIT_CALLBACK callback ); Allows a client to set a G3 MAC RT initialization event handling function for the...","GUID-3D42416F-7788-4E10-B3A9-2E907A6BDF59.html@@@1.2.12.4.13 SRV_QUEUE_POSITION Enum@@@typedef enum { SRV_QUEUE_POSITION_HEAD = 0 , SRV_QUEUE_POSITION_TAIL = 1 , } SRV_QUEUE_POSITION; List of possible queue positions. This type defines the possible queue positions...","GUID-3DBF4BBC-895F-4E64-901F-C76DB2918FDD.html@@@1.2 Service Libraries@@@The Smart Energy Services are software components designed to be used in conjuction with Smart Energy Drivers in order to add specific functionalities. In the Smart Energy applications there are...","GUID-3DCCAE10-97B3-4C66-89AA-0A031CE6814F.html@@@1.1.2.2 Using The Library@@@The G3 MAC RT library builds on top of an SPI peripheral library (PLIB) to communicate with a PLC transceiver in which G3-PLC lower MAC and PHY layers run. However, the underlying use of an SPI port...","GUID-3E9717EB-6434-400D-8004-2E5833EF377D.html@@@1.2.12.4.8 SRV_QUEUE_Remove_Element Function@@@void SRV_QUEUE_Remove_Element ( SRV_QUEUE *queue, SRV_QUEUE_ELEMENT *element ); Removes the given element from a queue. This function removes the given element from a queue. The queue must have been...","GUID-3F0A0B53-ED4C-474E-8255-0416500DEB0B.html@@@1.1.2.4.42.1 G3 MAC RT IBs@@@Description: Maximum value of back-off exponent. It should always be greater than macMinBE. Access: Read-write. Value Range: 1 byte . Default Value: 8. Description: Beacon frame sequence number...","GUID-3FCFF247-352F-4E8B-AC20-94342814F7F1.html@@@1.1.2.4.46 MAC_RT_TONE_MASK Struct@@@typedef struct { uint8_t toneMask[(MAX_PHY_TONES + 7 ) / 8 ]; } MAC_RT_TONE_MASK; G3-PLC Tone Mask. This data type defines the Tone Mask (static notching) supported by G3-PLC spec. Each bit...","GUID-3FE78AB9-5672-4748-BEEE-ADD364C8774A.html@@@1.1.1.4.1 DRV_PLC_PHY_Initialize Function@@@SYS_MODULE_OBJ DRV_PLC_PHY_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); Initializes the PLC PHY instance for the specified driver index. This routine initializes...","GUID-406ADE0C-D859-4B2B-9B58-E75C9A66D04B.html@@@1.1.2.4.37 DRV_G3_MACRT_SLEEP_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_SLEEP_IND_CALLBACK )( void ); Pointer to notification when Sleep Mode is disabled and G3 MAC RT driver is available to be used again. This data type defines the required...","GUID-4183CE78-B659-4918-8651-B77A34D15302.html@@@2 Getting Started with MPLAB\u00AE Harmony PLC Stack@@@...","GUID-41D05A4C-2080-40F6-A2A2-D30E77AC5A64.html@@@1.1.2.4.36 DRV_G3_MACRT_EXCEPTION_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_EXCEPTION_CALLBACK )( DRV_G3_MACRT_EXCEPTION exception ); Pointer to a G3 MAC RT Driver Exceptions Event handler function. This data type defines the required function...","GUID-4233FB35-1EDE-4577-A720-7433464EA7F6.html@@@1.3.1.3.6.5.4 RTC Control Command@@@The user can set the time and date using \u201CRTCR\u201D and \u201CRTCW\u201D commands. The write command requires a password (\u201CPIC\u201D by default). Ensure that the format used when typing the command is exactly the same...","GUID-42DAEFE9-160F-4E01-961A-6BA11105CD6F.html@@@1.1.3.4.19 DRV_METROLOGY_GetRMSSign Function@@@DRV_METROLOGY_RMS_SIGN DRV_METROLOGY_GetRMSSign (DRV_METROLOGY_RMS_TYPE type); Gets the sign of the last RMS value of the selected measurement type. For further information about RMS types, refer to...","GUID-4314DCAE-15B0-4CFC-A3CF-F59EA3139E4B.html@@@1.2.12.4.4 SRV_QUEUE_Insert_Before Function@@@void SRV_QUEUE_Insert_Before ( SRV_QUEUE *queue, SRV_QUEUE_ELEMENT *currentElement, SRV_QUEUE_ELEMENT *element ); Inserts an element into a queue before a given element. This function inserts an...","GUID-43286726-054C-4FD2-AEA3-4E99DCC84386.html@@@1.2.12.4.12 SRV_QUEUE_MODE Enum@@@typedef enum { SRV_QUEUE_MODE_REMOVE = 0 , SRV_QUEUE_MODE_READ = 1 , } SRV_QUEUE_MODE; List of possible queue access modes. This type defines the possible queue access modes...","GUID-43E7E120-2618-422D-AC8B-23E78FF268AE.html@@@1.1.3.4.32 DRV_METROLOGY_GAIN_TYPE Enum@@@typedef enum { GAIN_ 1 = 0 , GAIN_ 2 = 1 , GAIN_ 4 = 2 , GAIN_ 8 = 3 , GAIN_NUM_TYPE } DRV_METROLOGY_GAIN_TYPE; Gain selected for use in the ADC front-end. On Current measurement channels gain for...","GUID-442F9871-1059-424A-B3DA-8B4D2F8F01E4.html@@@1.2.12.4.7 SRV_QUEUE_Read_Element Function@@@SRV_QUEUE_ELEMENT *SRV_QUEUE_Read_Element( SRV_QUEUE *queue, uint16_t elementIndex ); Reads an element from a queue at the given index. This function reads an element from a queue at the given index...","GUID-443BB1EE-2B22-45AB-AD80-E0011189606F.html@@@1.1.1.4.24.7 DRV_PLC_PHY_MAX_PSDU_LEN_PARAMS Struct@@@typedef struct { /* Modulation type */ DRV_PLC_PHY_MOD_TYPE modType; /* Modulation scheme */ DRV_PLC_PHY_MOD_SCHEME modScheme; /* Flag to indicate whether 2 Reed-Solomon blocks have to be used (only...","GUID-44FC59DF-A7D5-413B-8584-435BC712C5BE.html@@@1.1.4.4.6 DRV_RF215_Close Function@@@void DRV_RF215_Close ( const DRV_HANDLE drvHandle ); Closes an opened-instance of the RF215 driver. This routine closes an opened-instance of the RF215 driver, invalidating the handle. A new handle...","GUID-46296B7F-B9D2-43BA-BE98-15F00868C577.html@@@1.2.8.4.10 SRV_RSERIAL_COMMAND Enum@@@typedef enum { /* Get data configuration request */ SRV_RSERIAL_CMD_PHY_GET_CFG = 0 , /* Get data configuration response */ SRV_RSERIAL_CMD_PHY_GET_CFG_RSP, /* Set data configuration request */...","GUID-4664A371-1B3C-475D-81FD-8989A2A2E768.html@@@1.3.2.1 Configuring Dual Core Demo Main Application@@@Dual Core Demo Main Application Configurations Dual Core Demo Main Application should be configured via MCC. Below is the Snapshot of the MCC configuration window for Dual Core Demo Main Application...","GUID-47473C73-EF04-489F-A983-9748CBF52551.html@@@1.1.2.4.48 MAC_RT_MOD_SCHEME Enum@@@typedef enum { MAC_RT_MOD_SCHEME_DIFFERENTIAL = 0x00 , MAC_RT_MOD_SCHEME_COHERENT = 0x01 } MAC_RT_MOD_SCHEME; G3-PLC Modulation Schemes. The list of all Modulation Schemes supported by G3-PLC spec...","GUID-47718A7D-D9A0-4D2D-BFB3-2F98E35874CA.html@@@1.1.3.4.6 DRV_METROLOGY_Tasks Function@@@void DRV_METROLOGY_Tasks (SYS_MODULE_OBJ object); Routine that performs the tasks necessary to maintain a state machine in the metrology driver. Routine that performs the tasks necessary to maintain a...","GUID-47A5CBE3-CDC3-4BF1-99E9-C204EA3698E6.html@@@1.3.2.3 Linking Dual Core Demo Applications@@@Once the Main and Secondary projects have been created, developed and debugged, it is time to link them in preparation for image merging with the Secondary project. Set Up the Primary Project to work...","GUID-48BB87BF-AAC0-4DE0-A21F-6F00E5B1FF24.html@@@1.2.6.4.12 SRV_USI_CALLBACK Typedef@@@typedef void ( * SRV_USI_CALLBACK ) ( uint8_t *pData, size_t length ); Pointer to an USI service callback function. This data type defines a pointer to an USI service callback function, thus defining...","GUID-493649F2-B868-4348-B148-85515E79A79C.html@@@1.3.1.3.6.5.11 Calibration Command@@@The configuration command (\u201CCAL\u201D) is used to automatically calibrate the board. It requires accurate and stable voltage and current sources and loads, which can be provided by a meter test bench like...","GUID-4A8DDEB6-DDDE-4A44-A4B9-D13D0324372E.html@@@1.2.7.1 How the Library Works@@@RF Sniffer mission is to provide information about every frame present in the RF medium. This information includes the frame itself and some parameters related to RF communications. Sniffer library...","GUID-4B132AC5-C6C7-4310-9221-DECE8AAC1981.html@@@1.1.2.4.52 MAC_RT_ADDRESS Struct@@@typedef struct { /* Modulation type */ MAC_RT_ADDRESS_MODE addressMode; union { /* Short Address */ uint16_t shortAddress; /* Extended Address */ MAC_RT_EXT_ADDRESS extendedAddress; }; }...","GUID-4B87E350-45C3-4503-BA09-B30371EA4C3F.html@@@1.1.2.4.47 MAC_RT_MOD_TYPE Enum@@@typedef enum { MAC_RT_MOD_ROBUST = 0x00 , MAC_RT_MOD_BPSK = 0x01 , MAC_RT_MOD_QPSK = 0x02 , MAC_RT_MOD_ 8 PSK = 0x03 , } MAC_RT_MOD_TYPE; G3-PLC Modulation Types. This data type defines the list of...","GUID-4BBBB29D-7770-4B2B-9263-ACF725467FD2.html@@@1.3.1.3.6.5.3 Meter ID Configuration Command@@@The Meter ID-related commands allow reading (\u201CIDR\u201D) or writing (\u201CIDW\u201D) the meter ID. The write command requires a password (\u201CPIC\u201D by default). The meter ID max length is limited to 6 characters...","GUID-4D439A4D-A717-4EEE-B167-3EC5C3EE2A17.html@@@1.1.2.4.57 MAC_RT_TX_COEF Struct@@@typedef struct { uint8_t txCoef[ 6 ]; } MAC_RT_TX_COEF; G3-PLC TX coefficients. This data type defines the G3-PLC TX coefficients. For more information, please refer to G3-PLC Specification...","GUID-4D87436E-086E-4DBA-B553-A2B2CD32C3F9.html@@@1.3.1.3.6.5.1.3 Accumulator Registers@@@The status registers can be read by means of the \u201CDAR\u201D command. Examples: ; Read the first accumulator register DAR[0] 00 I_A D07AE3 ; Read all the accumulator registers DAR 00 I_A 01 I_B 02 I_C 03...","GUID-4E896D85-86B1-4721-880B-214CEE3819BE.html@@@1.2.5 PLC CRC Service@@@Some Smart Energy components, such as PLC stacks and the USI Service for seralization, use CRCs to protect frame integrity on communication media (PLC or Serial). This library offers CRC...","GUID-4ED8B3F6-0288-41C8-BA4B-F0A0FEE81E7A.html@@@1.1.3.4.17 DRV_METROLOGY_GetEnergyValue Function@@@uint32_t DRV_METROLOGY_GetEnergyValue (bool restartEnergy); Gets the active energy value. Gets the active energy value. Param Description restartEnergy Flag to indicate if the energy value should be...","GUID-4FF1104E-F320-435C-A798-9CD59B4E05BC.html@@@1.3.1.3.9 TOU and Energy Registering@@@TOU stands for \u201CTime of Use\u201D, and it is a relevant concept in the smart energy meters. The energy consumption is assigned and grouped into different time zones. These time zones could correspond to...","GUID-50946BC4-586A-4660-A918-D3CED116127A.html@@@1.1.1.4.18 DRV_PLC_PLIB_INTERFACE Struct@@@typedef struct { /* PLC SPI PLIB Transfer Setup */ DRV_PLC_SPI_PLIB_TRANSFER_SETUP spiPlibTransferSetup; /* SPI Is Busy */ DRV_PLC_SPI_ISBUSY spiIsBusy; /* Only visible if MCU does not have DMA or SPI...","GUID-50A0D1E5-51F3-4BF2-A4DA-4893854C020A.html@@@1.2.11.2 Using The Library@@@The Security library is called perform cryptographic operations. The following example, corresponding to G3 LBP eap_psk.c file, illustrates how the Security service can be used. //...","GUID-50BA10EA-BF1E-46B4-BA9E-DB18969CE1E4.html@@@1.2.10.1 How the Library Works@@@This library does not need to be neither initialized nor maintained periodically. It simply receives a request and returns the random value. The random numbers can be generated from different sources...","GUID-517695B0-A450-411B-8033-B8B837C26FD3.html@@@1.1.2.4.15 DRV_G3_MACRT_ExceptionCallbackRegister Function@@@void DRV_G3_MACRT_ExceptionCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_EXCEPTION_CALLBACK callback ); Allows a client to set an exception event handling function for the driver to...","GUID-51BE7E9A-45DF-4673-9AE2-7D7163536E44.html@@@1.1.1.4.5 DRV_PLC_PHY_PIBGet Function@@@void DRV_PLC_PHY_PIBGet ( const DRV_HANDLE handle, DRV_PLC_PHY_PIB_OBJ *pibObj ); Allows a client to get information from PLC transceiver about PHY information base (PIB). This routine gets PHY data...","GUID-5235FE2A-8D65-4C7D-A8F3-68467C84A6CA.html@@@1.2.11.4.4 CIPHER_Wrapper_CcmSetkey Function@@@int32_t CIPHER_Wrapper_CcmSetkey ( const uint8_t *key, uint32_t keyLen) Initializes the CCM context and sets the encryption key. This function initializes the CCM context and sets the encryption key...","GUID-537B6829-597E-4B18-84DB-B454B5A44103.html@@@1.2.13.4 Library Interface@@@The Log Report service library provides the following interfaces: Name Description SRV_LOG_REPORT_Message_With_Code Reports a message with its associated code SRV_LOG_REPORT_Message Reports a message...","GUID-54047044-4C2B-4BDB-A838-10CD77CD4C10.html@@@1.3.1.1.6 Command and Console configuration@@@The terminal interface allows the user to interact with the Demo Meter application firmware. The Meter Demo application includes 32 commands, nevertheless the terminal console application code can be...","GUID-542F4400-4635-4DBE-A3E7-30C07DE8146D.html@@@1.1.2.4.59 MAC_RT_FRAME_CONTROL Struct@@@typedef struct { /* Frame Type */ uint16_t frameType : 3 ; /* Security Enable */ uint16_t securityEnabled : 1 ; /* Frame pending */ uint16_t framePending : 1 ; /* Ack Request */ uint16_t ackRequest...","GUID-55498A05-5BFD-4A23-8F82-57F0C6736476.html@@@1.1.2.4.28 DRV_G3_MACRT_EXCEPTION Enum@@@typedef enum { /* SPI has detected an unexpected status */ DRV_G3_MACRT_EXCEPTION_UNEXPECTED_KEY, /* Device has been reseted */ DRV_G3_MACRT_EXCEPTION_RESET } DRV_G3_MACRT_EXCEPTION; Defines the data...","GUID-559A006E-859E-45E8-BB5A-70CE63853872.html@@@1.1.1.4.17 DRV_PLC_HAL_INTERFACE Struct@@@typedef struct { /* PLC PLIB Interface */ DRV_PLC_PLIB_INTERFACE *plcPlib; /* PLC HAL init */ DRV_PLC_HAL_INIT init; /* PLC HAL setup */ DRV_PLC_HAL_SETUP setup; /* PLC HAL reset device */...","GUID-56CEDA9B-50C8-4747-8849-4C5E3FA88FF7.html@@@1.1.1.4.25.13 DRV_PLC_PHY_PIB_OBJ Struct@@@typedef struct { /* Pointer to PIB data */ uint8_t *pData; /* PLC Information base identification */ DRV_PLC_PHY_ID id; /* Length in bytes of the data information */ uint16_t length; }...","GUID-571AD747-AD6C-4347-BCDE-55D3D1D9B520.html@@@1.1.2.4.29 DRV_G3_MACRT_INIT_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_INIT_CALLBACK )( bool initResult ); Pointer to a G3 MAC RT Driver Initialization Event handler function. This data type defines the required function signature for the G3...","GUID-58175669-9859-43E0-9ECC-FB4D87B3ECE3.html@@@1.3.1.1.1 MCC CLock Configuration@@@Figure .\u2000 MISTRAL Clock distribution This configuration optimizes the performance of the Demo Meter application and it must not be modified. It only requires the 32.768 kHz external oscillator to...","GUID-58BF70C4-C29E-4475-A134-176D7F83B9A9.html@@@1.2.8.4.6 SRV_RSERIAL_ParseTxMessage Function@@@bool SRV_RSERIAL_ParseTxMessage ( uint8_t* pDataSrc, DRV_RF215_TX_REQUEST_OBJ* pDataDst, DRV_RF215_TX_HANDLE* pTxHandleCancel ); Extracts a RF frame to be transmitted from SRV_RSERIAL_CMD_PHY_SEND_MSG...","GUID-59517C22-B307-4CF2-A9B2-630CC066EC58.html@@@1.1.4.4.3 DRV_RF215_Tasks Function@@@void DRV_RF215_Tasks ( SYS_MODULE_OBJ object ); Maintains the RF215 driver&apos;s state machine. This function is used to maintain the RF215 driver&apos;s internal state machine. The DRV_RF215_Initialize...","GUID-595287DF-1D38-4B9E-8455-7997D5845052.html@@@1.1.4.4.38 DRV_RF215_PHY_TYPE_CFG_OBJ Union@@@typedef union { DRV_RF215_FSK_CFG_OBJ fsk; DRV_RF215_OFDM_CFG_OBJ ofdm; } DRV_RF215_PHY_TYPE_CFG_OBJ; Defines the data required to configure the RF215 FSK/OFDM PHY. This data type defines the data...","GUID-59DADBE8-E54E-42C0-B62A-5652DAFB766E.html@@@1.1.2.4.13 DRV_G3_MACRT_CommStatusCallbackRegister Function@@@void DRV_G3_MACRT_CommStatusCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK callback ); Allows a client to set a G3-PLC MAC Communication Status indication...","GUID-5B2AAA6C-6B79-4D9F-A024-E606D022247E.html@@@1.1.4.4.35 DRV_RF215_PIB_RESULT Enum@@@typedef enum { RF215_PIB_RESULT_SUCCESS = 0 , RF215_PIB_RESULT_INVALID_PARAM = 1 , RF215_PIB_RESULT_INVALID_ATTR = 2 , RF215_PIB_RESULT_INVALID_HANDLE = 3 , RF215_PIB_RESULT_READ_ONLY = 4...","GUID-5BCCD671-3001-4DC6-B905-27E42AD850D2.html@@@1.2.8.4.9 SRV_RSERIAL_SerialCfmMessage Function@@@uint8_t* SRV_RSERIAL_SerialRxMessage ( DRV_RF215_RX_INDICATION_OBJ* pIndObj, DRV_RF215_TRX_ID trxId, DRV_RF215_PHY_CFG_OBJ* pPhyCfgObj, size_t* pMsgLen ); Serializes the result of a RF transmitted...","GUID-5DA261DF-FDDC-4A4D-9FB9-4001FF3036DD.html@@@1.1.1.4.24.2 DRV_PLC_PHY_MOD_TYPE Enum@@@typedef enum { MOD_TYPE_BPSK = 0 , MOD_TYPE_QPSK = 1 , MOD_TYPE_ 8 PSK = 2 , MOD_TYPE_BPSK_ROBO = 4 , }DRV_PLC_PHY_MOD_TYPE; G3-PLC Modulation Types. This data type contains every types of modulation...","GUID-5DCB155E-01FF-4C75-9BB8-64521923327F.html@@@1.1.1.4.14 DRV_PLC_PHY_Sleep Function@@@void DRV_PLC_PHY_Sleep ( const DRV_HANDLE handle, bool enable ); Allows to manage the PLC Sleep mode. This function allows to manage the PLC Sleep mode. Before going to sleep, it disables PLC...","GUID-5DD54744-A308-4CFC-9EC7-2A74AE260057.html@@@1.1.3.4.18 DRV_METROLOGY_GetRMSValue Function@@@uint32_t DRV_METROLOGY_GetRMSValue (DRV_METROLOGY_RMS_TYPE type); Gets the last RMS value of the selected measurement type. For further information about RMS types, refer to DRV_METROLOGY_RMS_TYPE...","GUID-5EE73050-4695-4553-BFEC-C00B9412A7DC.html@@@1.3.1.3.6.5.1.2 Status Registers@@@The status registers can be read by means of the \u201CDSR\u201D command. Examples: ; Read the first metrology status register DSR[0] 00 VERSION 30009 ; Read all the metrology status registers DSR 00 VERSION 01...","GUID-5F026E7F-2EF8-410F-8FD5-11A97F7699CB.html@@@1.1.2.4.51 MAC_RT_EXT_ADDRESS Struct@@@typedef struct { uint8_t address[ 8 ]; } MAC_RT_EXT_ADDRESS; G3 MAC Extended Address. This data type defines the G3 MAC Extended Address (EUI64)...","GUID-60271DE1-2B32-4ED7-8DB8-613930EFDA20.html@@@1.2.4.4 Library Interface@@@PLC PVDD Monitor service provides the following interfaces: Functions Name Description SRV_PVDDMON_Initialize Initializes the PVDD Monitor service SRV_PVDDMON_Start Start the PVDD Monitor service...","GUID-60D97244-36C5-4186-80F8-D71FD9CEC4B5.html@@@1.1.4.4.24 DRV_RF215_FSK_SYM_RATE Enum@@@typedef enum { FSK_SYM_RATE_ 50 kHz = 0 , FSK_SYM_RATE_ 100 kHz = 1 , FSK_SYM_RATE_ 150 kHz = 2 , FSK_SYM_RATE_ 200 kHz = 3 , FSK_SYM_RATE_ 300 kHz = 4 , FSK_SYM_RATE_ 400 kHz = 5 , }...","GUID-610A01D5-B3B5-43BF-968F-EB6B6BE00373.html@@@1.1.1.4.25.6 DRV_PLC_PHY_BUFFER_ID Enum@@@typedef enum { TX_BUFFER_ 0 = 0 , TX_BUFFER_ 1 = 1 , } DRV_PLC_PHY_BUFFER_ID; PRIME internal transmission buffer identification. Up to 2 different internal buffers can be used to store information to...","GUID-621D854B-54BF-4473-91C6-B37A25840333.html@@@1.2.6.4.1 SRV_USI_Initialize Function@@@SYS_MODULE_OBJ SRV_USI_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init) Initializes the specified USI service instance. This routine initializes the specified USI service...","GUID-622B9E67-F7F6-4E4B-898F-E3DC7AD78458.html@@@1.2.12.4.15 SRV_QUEUE Struct@@@typedef struct { /* Pointer to the head of the queue */ SRV_QUEUE_ELEMENT *head; /* Pointer to the tail of the queue */ SRV_QUEUE_ELEMENT *tail; /* Pointer to the initial element of the queue */...","GUID-626FE879-38C6-4D88-815D-308803DD70FF.html@@@1.3.1.1.3 Supply Controller configuration@@@Figure .\u2000 Supply Monitor configuration The Demo Meter application enters a low power mode (back-up mode) in two ways: When the user types the command \u201CDCB\u201D in the console. When the \u201CScroll-up\u201D button...","GUID-62B58285-358F-427A-BE70-137B9D6EC7AB.html@@@2.12 Testing the Application@@@Once PIC32CXMTG-EK boards are programmed, follow these steps: Switch the boards off Connect a PL460-EK to the Xplained expansion port on each of PIC32CXMTG-EK boards Interconnect PLC Outputs of both...","GUID-62BC0CAA-AB55-4B7B-851F-0B4888266296.html@@@1.2.1.2.2 Using The Library (PRIME)@@@For PRIME, SRV_PCOUP_Set_Channel_Config has to be called once the PLC Driver is ready (binary loaded to PLC Device) and before any transmission is requested. Additionally, SRV_PCOUP_Set_Channel_Config...","GUID-630C2516-4C8F-4313-8974-54809786368A.html@@@1.2.11.4.16 AES_Wrapper_EncryptEcb Function@@@void AES_Wrapper_EncryptEcb ( const uint8_t *in, uint8_t *out) Encrypts one block of data in ECB mode. This function encrypts one block of data, equal to the AES block size, in ECB mode. Key must be...","GUID-632E0026-A7DD-431F-A225-6675BF548CD7.html@@@1.3.1.3.6.5.5 TOU Control Command@@@The \u201CTOU\u201D (Time Of Use) commands allow reading (\u201CTOUR\u201D) or writing (\u201CTOUW\u201D) the TOU tables. Up to 8 time zones and 4 identifiers (tariffs) are supported (see 1.3.1.3.9 TOU and Energy Registering for...","GUID-6333F1EC-0849-49B3-AA6E-9422B26CCFBD.html@@@1.1.2.4.35 DRV_G3_MACRT_PHY_SNIFFER_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_PHY_SNIFFER_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT PHY Sniffer Reception Event handler function. This data type defines the required...","GUID-6387FB88-A513-49C1-81C1-31F4F4A31145.html@@@1.2.13.4.1 SRV_LOG_REPORT_Message_With_Code Function@@@void SRV_LOG_REPORT_Message_With_Code ( SRV_LOG_REPORT_LEVEL logLevel, SRV_LOG_REPORT_CODE code, const char *info, ... ); Reports an error/warning code with related information. This function reports...","GUID-63EA836B-CB68-4B5B-9DC1-60B85F9A8954.html@@@1.1.4.4.43 DRV_RF215_FW_VERSION Struct@@@typedef struct { uint8_t major; uint8_t minor; uint8_t revision; uint8_t year; /* year since 2000 */ uint8_t month; uint8_t day; } DRV_RF215_FW_VERSION; Defines the RF215 Driver firmware version data...","GUID-6552E385-F33A-450A-9C4D-622C5A64E080.html@@@2.1 Create your first PLC Application@@@This tutorial demonstrates how to create a PLC application project with MPLAB\u00AE Harmony G3-PLC Driver and MPLAB\u00AE Harmony v3 modules, using MPLABX IDE and MPLAB\u00AE Code Configurator. The tutorial...","GUID-661A7A3C-7775-475E-B35E-FCD6A4628D34.html@@@1.2.7.4.1 SRV_RSNIFFER_SerialRxMessage Function@@@uint8_t* SRV_RSNIFFER_SerialRxMessage ( DRV_RF215_RX_INDICATION_OBJ* pIndObj, DRV_RF215_PHY_CFG_OBJ* pPhyCfgObj, uint16_t paySymbols, uint16_t channel, size_t* pMsgLen ); Serializes a received RF...","GUID-6662B9A5-918C-40DB-8E2E-167EB1CCEEC3.html@@@1.2.3.4.5 SRV_PSERIAL_SerialSetPIB Function@@@size_t SRV_PSERIAL_SerialSetPIB ( uint8_t* pDataDst, DRV_PLC_PHY_PIB_OBJ* pDataSrc ); Serializes a response to a SRV_PSERIAL_CMD_PHY_SET_CFG command. Takes a DRV_PLC_PHY_PIB_OBJ object as parameter...","GUID-6684BFBA-B11C-4477-B70A-BA02AB075B22.html@@@1.3.1.3.5 Demo Modes@@@The Demo Meter application operates in these modes: Normal or measurement operating mode: The meter firmware enters in normal mode after the Metrology DSP is started and running. This mode supports...","GUID-68E0E68B-0991-4BE3-8C03-7131FEF6DB47.html@@@1.2.13.3 Configuring The Library@@@The Log Report service is configured via MCC. Below is the Snapshot of the MCC configuration window for Log Report service and brief description. Figure .\u2000 Log Report Service configuration options...","GUID-6947C4CA-0A47-43CA-9928-DDC533406CBE.html@@@1.1.3.4.26 DRV_METROLOGY_START_MODE Enum@@@typedef enum { /* Operation completed with success. */ DRV_METROLOGY_START_SOFT, /* Invalid handle or operation failed. */ DRV_METROLOGY_START_HARD } DRV_METROLOGY_START_MODE; Describes how is the...","GUID-6A5B074F-A870-462E-86E3-B6791C0636AB.html@@@1.3.1.1.5 Metrology Driver configuration@@@The Meter Demo application shows an example of use of the waveform capture. The waveform capture feature is a powerful tool allowing Core 0 to access the metrology samples. The data is captured by the...","GUID-6A67B310-A067-4A4B-8B37-98F1500F9BA6.html@@@1.1.2.4.56 MAC_RT_POS_ENTRY Struct@@@typedef struct __attribute__ ((packed)) { uint16_t shortAddress; uint8_t lqi; uint16_t posValidTime; } MAC_RT_POS_ENTRY; G3 MAC POS entry. This data type defines a G3 MAC POS entry. For more...","GUID-6A6E7B1D-9665-40E0-ACDE-4B0FFC1A1F0B.html@@@1.2.8.4.5 SRV_RSERIAL_ParseTxMessageTrxId Function@@@DRV_RF215_TRX_ID SRV_RSERIAL_ParseTxMessageTrxId (uint8_t* pDataSrc); Extracts the TRX identifier from SRV_RSERIAL_CMD_PHY_SEND_MSG serial frame. Takes a SRV_RSERIAL_CMD_PHY_SEND_MSG serial frame as...","GUID-6A734799-58CF-486D-AEAF-6498317A903F.html@@@1.2.1.4.1.1 SRV_PCOUP_Get_Config Function@@@SRV_PLC_PCOUP_DATA * SRV_PCOUP_Get_Config(SRV_PLC_PCOUP_BRANCH branch); Get the PLC PHY Coupling parameters for the specified transmission branch. This function allows to get the PLC PHY Coupling...","GUID-6AC86335-EDE5-40ED-8D96-800FFF8D9748.html@@@1.2.1.2 Using The Library@@@The PLC PHY Coupling Service allows a PLC Driver&apos;s client to configure the PHY PIBs related to: PLC Transceiver used (PL360/PL460) Transmission hardware coupling design Transmission digital gain and...","GUID-6ACB9986-8D9A-42C0-B408-82F14C261ADA.html@@@1.1.2.4.19 DRV_G3_MACRT_Tasks Function@@@void DRV_G3_MACRT_Tasks ( SYS_MODULE_OBJ object ); Maintains the G3 MAC RT driver&apos;s state machine. This function is used to maintain the G3 MAC RT driver&apos;s internal state machine...","GUID-6B1FD84C-6848-44C4-9EAE-BFB97F8F7864.html@@@1.2.11.4.10 AES_Wrapper_ContextInit Function@@@void AES_Wrapper_ContextInit ( void ) Initializes AES context. This function intializes AES context setting it to all zeros. None. None. None. uint8_t in1[CRYPT_AES_BLOCK_SIZE]; uint8_t...","GUID-6B51409F-FF82-456C-B9E3-08BFBCD1D789.html@@@1.2.11.3 Configuring The Library@@@The Security Service has no configuration options via MCC. It just satisfies the requirement of other components, such as Smart Energy communication stacks. Figure .\u2000 Security Service configuration...","GUID-6B723CE2-D4FF-447D-830A-0EB0B4C26995.html@@@1.3.1.3.3 Prepare the Board for the Meter Tester@@@DANGER: Live Voltages present. Live voltages are connected to the Demo board. It results in potential hazardous voltages on the PCB board. Exercise extreme caution when handling the Demo board when it...","GUID-6C43409A-5BF0-4B36-B9F6-F8B83E1B83D4.html@@@2.8 Interrupt Configuration@@@Start NVIC Configuration from Plugins drop-down menu Figure .\u2000 Start NVIC Configuration The needed interrupts are already enabled, but some priorities have to be increased, as seen in the following...","GUID-6D30548F-CC24-4027-9518-BD7CDECF83DC.html@@@1.1.4.4.16 DRV_RF215_TX_HANDLE Typedef@@@typedef uintptr_t DRV_RF215_TX_HANDLE; Handle identifying the transmission request queued. A transmission handle value is returned by a call to the DRV_RF215_TxRequest function. This handle is...","GUID-6D6D34D5-BB55-41DC-8053-4A12DD51EAA2.html@@@1.1.1.4.25.15 DRV_PLC_PHY_CD_INFO Struct@@@typedef struct { /* Reception time (message end or header end if message length is not known yet) referred to 1us PHY counter */ uint32_t rxTimeEnd; /* Current time referred to 1us PHY counter */...","GUID-6ED1119A-7A55-4C17-9E56-5835926DD77B.html@@@1.2.1.4.1.3 SRV_PCOUP_Get_Default_Branch Function@@@SRV_PLC_PCOUP_BRANCH SRV_PCOUP_Get_Default_Branch ( void ); Get the default branch of the PLC transmission coupling. This function allows to get the tranmission branch used by default, which is...","GUID-6F02768B-379C-4AF5-B829-5FA362A4305E.html@@@1.1.4.4.18 DRV_RF215_TRX_ID Enum@@@typedef enum { RF215_TRX_ID_RF09 = 0 , RF215_TRX_ID_RF24 = 1 , } DRV_RF215_TRX_ID; Defines the available RF215 transceivers. This data type defines the available RF215 transceivers (Sub-GHz and...","GUID-6F22CEB1-63DA-4E5A-B820-688E6337FD7A.html@@@1.3.1.3.6.5.6 Energy Commands@@@The \u201CENC\u201D command (protected with password) erases all the energy records stored in non-volatile memory (the Demo Meter application stores 1 year of energy data). The \u201CENR\u201D command reads the energy...","GUID-70518BB2-55B0-419F-A503-0B5E1B0B4AB6.html@@@2.4 Creating a New Harmony MCC Project@@@Open the MPLAB\u00AE X IDE Create a New Project by clicking the New Project icon Microchip Technology or by selecting File \u2192 New Project In the New Project window select 32-Bit MCC Harmony Project and...","GUID-712B5DA4-C2E2-4F22-9D4A-1A4AEA4C58CB.html@@@1.1.4.4.4 DRV_RF215_ReadyStatusCallbackRegister Function@@@void DRV_RF215_ReadyStatusCallbackRegister ( const SYS_MODULE_INDEX index, const DRV_RF215_READY_STATUS_CALLBACK callback, uintptr_t context ); Allows a client to set an event handling function for...","GUID-725B3EE4-66DB-443D-BFAF-6BAE2C541655.html@@@1.1.1.4.19 DRV_PLC_PHY_TX_CFM_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_TX_CFM_CALLBACK )( DRV_PLC_PHY_TRANSMISSION_CFM_OBJ *cfmObj, uintptr_t context ); Pointer to a PLC Driver Transmission Confirm Event handler function. This data type...","GUID-726D35F4-46A9-4067-8371-E36EB27254DA.html@@@1.3.1.3.6.4 Commands List@@@Some commands include indexes or passwords and parameters. Indexes or passwords are sent enclosed with \u201C[]\u201Dand are coded in decimal, if numbers. Parameters are enclosed with \u201C()\u201D and the codification...","GUID-72A19CAC-4CF1-4CFF-B283-392F2D9A4F0C.html@@@1.1.4.4.46 DRV_RF215_PLIB_SPI_WRITE_READ Typedef@@@typedef bool ( *DRV_RF215_PLIB_SPI_WRITE_READ ) ( void * pTxData, size_t txSize, void * pRxData, size_t rxSize); Pointer to a PLIB function to write and read through SPI. This data type defines the...","GUID-7464B9B1-E30E-4C83-BFF4-C8FBC8AE2B97.html@@@1.2.6.4.2 SRV_USI_Open Function@@@SRV_USI_HANDLE SRV_USI_Open ( const SYS_MODULE_INDEX index ) Opens the specified USI service instance and returns a handle to it. This routine opens the specified USI service instance and provides a...","GUID-74B7F20A-C586-4474-B712-22B7D9064CE9.html@@@1.3.1.3.4.3 Automatic Calibration@@@When using the automatic calibration, the calculations are done by the Demo Meter application firmware, so the Excel sheet is not needed. The automatic calibration is done by means of the \u201CCNF\u201D and...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-758C1ADC-7949-4CDB-B7AC-6C279C348D41.html@@@1.2.9.1 How the Library Works@@@In some boards, PLC (PL360/PL460) and RF (AT86RF215/AT86RF215M) transceivers are connected to the same SPI peripheral (SPCK, MISO and MOSI lines), with different chip select line (NPCS) for each...","GUID-75A77F77-C27B-4D5D-B15E-A198700B5A18.html@@@2.2 Software Prerequisites@@@The instructions in this tutorial assume that you have already installed the following software: MPLAB\u00AE X Integrated Development Environment MPLAB\u00AE XC32/32++ C Compiler MPLAB\u00AE Code Configurator MPLAB\u00AE...","GUID-760CFE1C-CBE5-4B83-9F96-A1276BC1D5F6.html@@@1.1.3.4 Library Interface@@@Metrology driver library provides the following interfaces: Functions Name Description DRV_METROLOGY_Initialize Initializes the metrology Driver for MISTRAL dual-core devices...","GUID-7696B688-2CF7-4EC3-BAA2-FE442F8A9CA3.html@@@1.1.2.4.9 DRV_G3_MACRT_TxCfmCallbackRegister Function@@@void DRV_G3_MACRT_TxCfmCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_TX_CFM_CALLBACK callback ); Allows a client to set a G3 MAC RT data confirm event handling function for the driver...","GUID-76D58185-B456-47A8-BE17-D5824D22CF3F.html@@@1.2.3.3 Configuring The Library@@@PLC PHY Serial Service is configured via MCC. Below is the Snapshot of the MCC configuration window for PLC PHY Serial Service and brief description. Figure .\u2000 PLC PHY Serial Service configuration...","GUID-77BA9E16-C16A-44AB-9E1F-D3AB7430198A.html@@@1.1.2.4.42 MAC_RT_PIB Enum@@@typedef enum { MAC_RT_PIB_MAX_BE = 0x00000047 , MAC_RT_PIB_BSN = 0x00000049 , MAC_RT_PIB_DSN = 0x0000004C , MAC_RT_PIB_MAX_CSMA_BACKOFFS = 0x0000004E , MAC_RT_PIB_MIN_BE = 0x0000004F...","GUID-780C9F34-A854-44F6-BA5B-2B55B8D8CE8A.html@@@1.1.4.4.22 DRV_RF215_SET_CHANNEL_CALLBACK Typedef@@@typedef void ( *DRV_RF215_SET_CHANNEL_CALLBACK ) ( DRV_RF215_TX_RESULT result, uintptr_t context ); Pointer to a RF215 set channel notification callback function. This data type defines the required...","GUID-791DBB8A-FE97-43D1-AD04-41B7AE192649.html@@@1.1.2.4.14 DRV_G3_MACRT_PhySnifferCallbackRegister Function@@@void DRV_G3_MACRT_PhySnifferCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_PHY_SNIFFER_CALLBACK callback, uint8_t* pDataBuffer ); Allows to enable G3-PLC PHY Sniffer capabilities and...","GUID-7A6D3728-F774-40C8-A34F-893A562AB3FA.html@@@1.1.3.4.11 DRV_METROLOGY_GetControlData Function@@@DRV_METROLOGY_REGS_CONTROL * DRV_METROLOGY_GetControlData ( void ); Get the pointer to the control registers of the metrology library application running on the second processor. Control registers are...","GUID-7A9FC75D-7844-43B9-B10F-338C7FC6A8EE.html@@@1.3.1.3.6.1 Description@@@The terminal interface allows the user to interact with the Demo Meter application firmware. The default terminal console application code can be modified by the user in order to implement additional...","GUID-7B18E388-BF3C-427C-B315-4090E8DAA6C9.html@@@1.2.11.4.15 AES_Wrapper_SetEncryptKey Function@@@void AES_Wrapper_SetEncryptKey ( const uint8_t *key, uint32_t keyLen) Sets the key for further encryption. This function sets the key for further encryption. The crypto initialization routines should...","GUID-7BD7F353-0336-45F5-9BBB-AD6AEA9F264E.html@@@1.2.10.4 Library Interface@@@The Random service library provides the following interfaces: Name Description SRV_RANDOM_Get8bits Returns a random value of 8 bits SRV_RANDOM_Get16bits Returns a random value of 16 bits...","GUID-7BD82710-5BEA-4FEA-BF26-D2B0693F9B54.html@@@1.1.1.4.24.4 DRV_PLC_PHY_DEL_TYPE Enum@@@typedef enum { DT_SOF_NO_RESP = 0 , DT_SOF_RESP = 1 , DT_ACK = 2 , DT_NACK = 3 , }DRV_PLC_PHY_DEL_TYPE; G3-PLC Delimiter Types. This data type contains every delimiter types supported by G3-PLC spec...","GUID-7C40D1B8-4916-409F-A8E6-8C9B9ADE27AD.html@@@1.1.4.4.48 DRV_RF215_INIT Struct@@@typedef struct { /* SPI chip select register address used for SPI configuration */ uint32_t* spiCSRegAddress; /* SPI transmit register address used for DMA operation */ const void *...","GUID-7C8F8FE0-76A1-4138-81CD-E2A7D3533A92.html@@@1.2.5.4.4 PCRC_CRC_TYPE Enum@@@typedef enum { PCRC_CRC8 = 0 , /* 8-bit CRC */ PCRC_CRC16 = 1 , /* 16-bit CRC */ PCRC_CRC32 = 2 , /* 32-bit CRC */ PCRC_NOCRC = 3 /* No CRC */ }PCRC_CRC_TYPE; The list of all CRC types supported (8...","GUID-7CBC706E-193F-491A-88C3-356E7E7FDD5C.html@@@1.2.1.1 How the Library Works@@@The PLC Physical Layer (PHY) implements some transmission capabilities with the following purposes: Comply with regulatory requirements Meet power injection and signal quality requirements Compensate...","GUID-7D16DC47-BB29-45D0-B17B-199CDED71286.html@@@1.1.4.4.33 DRV_RF215_TX_RESULT Enum@@@typedef enum { RF215_TX_SUCCESS = 0 , RF215_TX_ERROR_UNDERRUN = 1 , RF215_TX_ABORTED = 2 , RF215_TX_BUSY_TX = 3 , RF215_TX_BUSY_RX = 4 , RF215_TX_BUSY_CHN = 5 , RF215_TX_TRX_SLEPT = 6...","GUID-7DC31C06-84A4-423A-A5DC-50D66271FA64.html@@@1.1.2.4.45 MAC_RT_TONE_MAP Struct@@@typedef struct { uint8_t toneMap[(MAX_PHY_TONE_GROUPS + 7 ) / 8 ]; } MAC_RT_TONE_MAP; G3-PLC Tone Map. This data type defines the Tone Map (dynamic notching) supported by G3-PLC spec. Each bit...","GUID-7F5B85CA-2305-4C98-8F3B-353C038E6C20.html@@@1.3.1.3.6.5.9 Metrology Measurements Read Command@@@When the application receives a \u201CPAR\u201D command, it accesses to the metrology library registers and converts and scales the internal data (stored in a high resolution format) to the proper units. ; Read...","GUID-7FA67E83-CB6D-401C-9729-F2E4BA5BE490.html@@@1.1.2.4.26 DRV_PLC_PLIB_INTERFACE Struct@@@typedef struct { /* PLC SPI PLIB Transfer Setup */ DRV_PLC_SPI_PLIB_TRANSFER_SETUP spiPlibTransferSetup; /* SPI Is Busy */ DRV_PLC_SPI_ISBUSY spiIsBusy; /* Only visible if MCU does not have DMA or SPI...","GUID-800E7E2E-B682-4D22-8CFA-9820472A966B.html@@@1.1.1.4.15 DRV_PLC_PHY_EnableTX Function@@@void DRV_PLC_PHY_EnableTX ( const DRV_HANDLE handle, bool enable ); Enables/Disables PLC transmission. This function allows a client to enable or disable the PLC transmission. If there is any...","GUID-80ABA2A7-287D-4A30-B31E-561FA3322D9A.html@@@1.2.1 PLC PHY Coupling Service@@@The PLC PHY Coupling service can be used in conjuction with a PLC Driver (PHY or G3 MAC RT) to facilitate the configuration of the PLC Transmission Coupling PHY parameters (PIBs). If the...","GUID-81092C4F-2D4E-475B-B44E-39B30242F764.html@@@1.2.3.4.7 SRV_PSERIAL_SerialRxMessage Function@@@size_t SRV_PSERIAL_SerialRxMessage ( uint8_t* pDataDst, DRV_PLC_PHY_RECEPTION_OBJ* pDataSrc ); Serializes a received PLC frame and its related information. Takes a DRV_PLC_PHY_RECEPTION_OBJ object as...","GUID-81475CB9-3097-4C2B-BA9F-D58AF46781CC.html@@@1.2.2.1 How the Library Works@@@PLC Sniffer mission is to provide information about every frame present in the PLC medium. This information includes the frame itself and some parameters related to PLC communications. Sniffer library...","GUID-81933464-433B-4DF8-981E-4D405021F897.html@@@1.1.4.4.44 DRV_RF215_TX_CFM_CALLBACK Typedef@@@typedef bool ( *DRV_RF215_PLIB_SPI_IS_BUSY ) ( void ); Pointer to a PLIB function to check if SPI transmitter is busy. This data type defines the required function signature for the RF215 driver to...","GUID-81A73CB2-02C0-41CF-9C28-0AECE56FFF26.html@@@1 MPLAB\u00AE Harmony Smart Energy Library@@@This Smart Energy distribution package contains a variety of libraries and drivers to provide access to Narrow Band Power Line Communications (PLC). A variety of PLC services are also provided as part...","GUID-831D8237-47A4-4A57-A533-95854926E06C.html@@@1.3.1.1.2 NVIC configuration@@@The following image summarizes the configuration of the interruptions used by the different applications and their priorities. Figure .\u2000 NVIC Configuration...","GUID-83EBAE84-CC25-4C58-9377-5B2D633E951D.html@@@1.1.2.4.41 MAC_RT_PIB_OBJ Struct@@@typedef struct { MAC_RT_PIB pib; uint16_t index; uint8_t length; uint8_t pData[MAC_RT_PIB_MAX_VALUE_LENGTH]; } MAC_RT_PIB_OBJ; Contains fields used in Information Base access. This structure contains...","GUID-83F02D50-A7F1-4D41-A185-1FCC3D6A27C0.html@@@1.2.11.4.14 AES_Wrapper_KeySet Function@@@void AES_Wrapper_KeySet ( const uint8_t *key, uint32_t keyLen) Sets the key for further encryption and decryption. This function sets the key for further encryption and decryption. The crypto...","GUID-842CBF79-15AC-40D2-91B3-2CE5C434B81D.html@@@1.2.10.4.2 SRV_RANDOM_Get16bits Function@@@uint16_t SRV_RANDOM_Get16bits ( void ); Returns a random value of 16 bits. This function returns a random value of 16 bits. None. None. 16-bit random value. uint16_t rndNum = SRV_RANDOM_Get16bits()...","GUID-845B5AD2-4577-4986-965E-AEBBFA1D5DB3.html@@@1.2.8.4 Library Interface@@@RF PHY Sniffer library provides the following interfaces: Name Description SRV_RSERIAL_GetCommand Extracts command field from serial frame SRV_RSERIAL_ParsePIB Extracts PIB information from get/set...","GUID-84FD9F74-C47E-483C-BC6D-6C0F486D7D7D.html@@@1.2.6.4 Library Interface@@@USI service library provides the following interfaces: Functions Name Description SRV_USI_Initialize Initializes the specified USI service instance SRV_USI_Open Opens the specified USI service...","GUID-8500B504-41C7-4CD9-9127-0391DD3277A5.html@@@1.2.12.4.11 SRV_QUEUE_TYPE Enum@@@typedef enum { SRV_QUEUE_TYPE_SINGLE = 0 , SRV_QUEUE_TYPE_PRIORITY = 1 , } SRV_QUEUE_TYPE; List of possible queue types. This type defines the possible queue types...","GUID-861971CE-75CE-4EBC-8559-C16AF30095B3.html@@@1.1.4.4.7 DRV_RF215_RxIndCallbackRegister Function@@@void DRV_RF215_RxIndCallbackRegister ( DRV_HANDLE drvHandle, const DRV_RF215_RX_IND_CALLBACK callback, uintptr_t context ); Allows a client to set an event handling function for the driver to call...","GUID-86797E06-0B56-4707-B72C-9F121D0146C4.html@@@1.2.13.4.2 SRV_LOG_REPORT_Message Function@@@void SRV_LOG_REPORT_Message_With_Code ( SRV_LOG_REPORT_LEVEL logLevel, const char *info, ... ); Reports log information. This function reports log information. The SYS_DEBUG initialization routines...","GUID-86C39B7F-4C57-4AE6-98CE-A878EAF6E667.html@@@1.1.2.4.33 DRV_G3_MACRT_MAC_SNIFFER_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_MAC_SNIFFER_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT Sniffer Reception Event handler function. This data type defines the required...","GUID-86FEE734-5603-4FB9-9276-B3E6A368B85F.html@@@1.3.1.3.6.5.1.4 Harmonics Registers@@@The harmonics registers can be read by means of the \u201CHAR\u201D command. The metrology library must be configured through the control registers to enable the harmonics computation and to select the harmonic...","GUID-87E6C7E7-6BA7-4E96-BA40-DD5CF7349793.html@@@1.1.3.4.40 DRV_METROLOGY_CONFIGURATION Struct@@@typedef struct { uint32_t mc; double freq; double tr; double rl; uint32_t ku; DRV_METROLOGY_SENSOR_TYPE st; DRV_METROLOGY_GAIN_TYPE gain; } DRV_METROLOGY_CONFIGURATION; Identifies values needed to set...","GUID-89913B9A-7DAA-4D7C-A742-98D95F4EAE62.html@@@1.3.1.3.10 Maximum Demand@@@The Demo Meter Application includes an example showing how to calculate and store the Maximum Demand data in non-volatile memory. The Maximum Demand values are computed averaging the instantaneous...","GUID-89FEFF30-F80D-4257-9152-D65E204380A3.html@@@1.2.9.3 Configuring The Library@@@The SPI Splitter Service has no configuration options via MCC, only information. This service has a SPI dependency and provides SPI multi-capability. Figure .\u2000 SPI Splitter Service configuration...","GUID-8B025891-809C-47BF-B1DF-95AFBFCD6D6C.html@@@1.2.3.4.8 SRV_PSERIAL_SerialCfmMessage Function@@@size_t SRV_PSERIAL_SerialCfmMessage ( uint8_t* pDataDst, DRV_PLC_PHY_TRANSMISSION_CFM_OBJ* pDataSrc ); Serializes the result of a PLC transmitted frame. Takes a DRV_PLC_PHY_TRANSMISSION_CFM_OBJ object...","GUID-8B41FF7D-0488-4893-9701-BDF32DB8BBDA.html@@@1.2.5.4.2 SRV_PCRC_SetSNAValue Function@@@void SRV_PCRC_SetSNAValue ( uint8_t* sna ); Sets SNA (Sub-Network Address) value to be used as initial value on further CRC calculations (used by PRIME stack). This routine sets the value that will be...","GUID-8B486B65-413F-4727-A2DE-721EA859AA8D.html@@@1.2.5.1 How the Library Works@@@This library does not need to be neither initialized nor maintained periodically. It simply receives a request to calculate a CRC with a set of parameters, and returns back the computed CRC. It can be...","GUID-8C5F5F6E-5B77-4AC5-9274-D0E6AE292759.html@@@1.1.3.4.25 DRV_METROLOGY_RESULT Enum@@@typedef enum { /* Operation completed with success. */ DRV_METROLOGY_SUCCESS, /* Invalid handle or operation failed. */ DRV_METROLOGY_ERROR } DRV_METROLOGY_RESULT; Result of a Metrology driver...","GUID-8CB24C47-AD8B-40C0-BF24-1D43127B48D2.html@@@1.2.4.4.6 SRV_PVDDMON_CallbackRegister Function@@@void SRV_PVDDMON_CallbackRegister ( SRV_PVDDMON_CALLBACK callback, uintptr_t context ); Allows a client to identify a PVDD Monitor event handling function to call back when the PVDD level is in/out...","GUID-8CCC1A57-FEF0-4760-925A-31470B3C86E6.html@@@1.2.8.2 Using The Library@@@The RF PHY Serial library is an add-on that can be used along with the RF215 Driver . The RF215 driver is the one in charge of RF communications, while the Serial library is used to serialize the PHY...","GUID-8D6705DB-D96A-4786-9724-F6B586F876B7.html@@@1.1.2.4.1 DRV_G3_MACRT_Initialize Function@@@SYS_MODULE_OBJ DRV_G3_MACRT_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); Initializes the MAC RT instance for the specified driver index. This routine initializes...","GUID-8E175C09-6CD6-4846-A1D3-C49B7CB583E6.html@@@1.1.1.4.7 DRV_PLC_PHY_TxCfmCallbackRegister Function@@@void DRV_PLC_PHY_TxCfmCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_TX_CFM_CALLBACK callback, const uintptr_t context ); Allows a client to set a data confirm event handling function...","GUID-8EA8AD79-6992-4444-9C4A-6F6E787096A2.html@@@1.1.2.4.50 MAC_RT_ADDRESS_MODE; Enum@@@typedef enum { MAC_RT_NO_ADDRESS = 0x00 , MAC_RT_SHORT_ADDRESS = 0x02 , MAC_RT_EXTENDED_ADDRESS = 0x03 } MAC_RT_ADDRESS_MODE; G3 MAC Address Mode. This data type defines the list of addressing modes...","GUID-8EB5CE7B-9DF0-4AD3-8000-8BC5B9CFB195.html@@@1.2.11 Security Service@@@The Smart Energy communication stacks (G3 and PRIME) require some cryptographic features for certain operations. This library offers an interface to perform the required cryptographic operations as a...","GUID-8EFA8551-0745-41A2-B35F-7322E6CB7C97.html@@@1.2.13.2 Using The Library@@@The Log Report library is called with information related to the current operation of a Smart Energy communication stack (G3 or PRIME) or service in order to report it with the given purpose (error...","GUID-8EFAC845-3358-4B69-A3C6-8207013B9727.html@@@1.2.4.2 Using The Library@@@The PLC PVDD Monitor service must be used from within the PLC application to monitor whether PLC transmissions are allowed. PLC PVDD Monitor service requires a callback to be set in order to notify...","GUID-8F009C3B-9F52-42A1-B592-4336D8364000.html@@@1.1.2.4.55 MAC_RT_DSN_TABLE_ENTRY Struct@@@typedef struct { MAC_RT_ADDRESS address; uint8_t dsn; uint8_t dsnValidTime; } MAC_RT_DSN_TABLE_ENTRY; G3 MAC DSN Table entry. This data type defines a G3 MAC DSN Table entry. For more information...","GUID-8F2BCC2D-088B-4489-893D-ADFFCB710E47.html@@@1.2.2.4.4 SRV_PSNIFFER_SetTxMessage Function@@@void SRV_PSNIFFER_SetTxMessage ( DRV_PLC_PHY_TRANSMISSION_OBJ* pTxObj ); Gives a transmitted PLC object to Sniffer library so it is stored for later serialization. The given transmitted PLC object...","GUID-8F94C089-C2AF-4EEF-8599-616DBF8F18E8.html@@@1.2.3.4.4 SRV_PSERIAL_ParseSetPIB Function@@@void SRV_PSERIAL_ParseSetPIB ( DRV_PLC_PHY_PIB_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts PIB field from SRV_PSERIAL_CMD_PHY_SET_CFG Serial frame. Takes a SetPIB Serial frame as parameter, extracts...","GUID-8FCCE1DA-FD25-42C5-9C36-243E1E14CDFF.html@@@1.2.2.4.5 SRV_PSNIFFER_SetRxPayloadSymbols Function@@@void SRV_PSNIFFER_SetRxPayloadSymbols ( uint16_t payloadSym ); Sets the number of received symbols on Sniffer library for further use. Number of received symbols is set on Sniffer library so that info...","GUID-90B7B4B7-004B-43E7-90F7-9CA051DD690D.html@@@1.2.10.4.3 SRV_RANDOM_Get16bitsInRange Function@@@uint16_t SRV_RANDOM_Get16bitsInRange ( uint16_t min, uint16_t max ); Returns a random value of 16 bits within the given range. This function returns a random value of 16 bits within the given range...","GUID-9232474B-DAF7-4259-B6D3-752AF4EA09A3.html@@@1.1.4.4.21 DRV_RF215_TX_CFM_CALLBACK Typedef@@@typedef void ( *DRV_RF215_TX_CFM_CALLBACK ) ( DRV_RF215_TX_HANDLE txHandle, DRV_RF215_TX_CONFIRM_OBJ *cfmObj, uintptr_t context ); Pointer to a RF215 driver transmit confirm callback function. This...","GUID-93466C84-5C2E-4AA6-A8AB-812D804F9074.html@@@1.1.2.1 How the Library Works@@@The G3 MAC RT driver library is a single-client, single-instance based driver interface. The G3 MAC RT firmware communicates with a PLC transceiver using an SPI port, Direct Memory Access and the GPIO...","GUID-93531DF8-21C2-4F4D-9540-60E4867FAF8F.html@@@1.1.2.4.20 DRV_G3_MACRT_Sleep Function@@@void DRV_G3_MACRT_Sleep ( const DRV_HANDLE handle, bool enable ); Allows to manage the PLC Sleep mode. This function allows to manage the PLC Sleep mode. Before going to sleep, it disables PLC...","GUID-94D8AC75-963A-4D7A-965C-FF88F06BB635.html@@@1.2.3.4 Library Interface@@@PLC PHY Sniffer library provides the following interfaces: Functions Name Description SRV_PSERIAL_GetCommand Extracts Command field from Serial frame SRV_PSERIAL_ParseGetPIB Extracts PIB field from...","GUID-94DAB11E-3311-4DBF-8FA4-E3E55C54910A.html@@@1.2.12.1 How the Library Works@@@The Queue library offers the necessary functions to manage queues, which include: Initialization of a queue Adding and removing elements from a queue Reading elements from a queue Flushing a queue...","GUID-95B97160-5425-444C-A258-8746A620D3F9.html@@@1.2.5.4.1 SRV_PCRC_GetValue Function@@@uint32_t SRV_PCRC_GetValue ( uint8_t *pData, size_t length, PCRC_HEADER_TYPE hdrType, PCRC_CRC_TYPE crcType, uint32_t initValue ); Obtains the CRC for a data stream. This routine gets the CRC value...","GUID-95BC0A4D-C301-419A-801E-B3DF25FC8F20.html@@@1.2.10.4.5 SRV_RANDOM_Get32bitsInRange Function@@@uint16_t SRV_RANDOM_Get32bitsInRange ( uint16_t min, uint16_t max ); Returns a random value of 32 bits within the given range. This function returns a random value of 32 bits within the given range...","GUID-95C86FCA-E459-4688-B1C6-39A6D328FE7F.html@@@1.1.4.4.45 DRV_RF215_PLIB_SPI_SET_CS Typedef@@@typedef void ( *DRV_RF215_PLIB_SPI_SET_CS ) (SPI_CHIP_SELECT chipSelect); Pointer to a PLIB function to set the SPI chip select line. This data type defines the required function signature for the...","GUID-95D6239D-4487-418B-ADEC-587C659BFEE0.html@@@1.2.6.4.13 SRV_USI_DEV_DESC Struct@@@typedef struct { SRV_USI_INIT_FPTR init; SRV_USI_OPEN_FPTR open; SRV_USI_REGISTER_READ_CALLBACK_FPTR setReadCallback; SRV_USI_WRITE_FPTR writeData; SRV_USI_TASK_FPTR task; SRV_USI_CLOSE close...","GUID-9652FB09-5C02-4360-8106-CF1A4D12CA4D.html@@@1.2.7.3 Configuring The Library@@@RF PHY Sniffer Service is configured via MCC. Below is the Snapshot of the MCC configuration window for RF PHY Sniffer Service and brief description. Figure .\u2000 RF PHY Sniffer Service configuration...","GUID-96988540-2CDE-43E3-B49A-FED2B49DEA37.html@@@1.1.2.4.18 DRV_G3_MACRT_Status Function@@@DRV_G3_MACRT_STATE DRV_G3_MACRT_Status ( const SYS_MODULE_INDEX index ); Gets the current status of the G3 MAC RT driver module. This routine provides the current status of the G3 MAC RT driver...","GUID-9714BB3A-E653-4988-994C-498D8573F0D2.html@@@1.2.12.4.3 SRV_QUEUE_Append_With_Priority Function@@@void SRV_QUEUE_Append_With_Priority ( SRV_QUEUE *queue, uint32_t priority, SRV_QUEUE_ELEMENT *element ); Appends an element into a priority queue. This function appends an element into a priority...","GUID-97410992-A415-4397-9F09-F55277DD3BF4.html@@@1.1.2.4.24 DRV_G3_MACRT_INIT Struct@@@typedef struct { /* Identifies the HAL API set to be used by the driver to access * peripherals. */ DRV_PLC_HAL_INTERFACE *plcHal; /* PLC Profile */ uint8_t plcProfile; /* Start Address where PLC...","GUID-976938B6-02A6-412D-966A-BDF38F911830.html@@@1.2.11.4.7 CIPHER_Wrapper_EaxInitKey Function@@@int32_t CIPHER_Wrapper_EaxInitKey ( const uint8_t *key, uint32_t keyLen) Initializes the EAX context and sets the key. This function initializes the EAX context and sets the key. The crypto...","GUID-97853572-2DF9-4BDC-8CC2-427931EE96D9.html@@@1.1 Driver Libraries@@@This Smart Energy distribution package contains three types of drivers: PLC drivers that manage an external PLC transceiver (PL360 or PL460). Two drivers are available: PLC PHY driver : The PLC...","GUID-98BF5252-AE5E-4B21-BB73-5296E00BA8FC.html@@@1.1.1.4.25.14 DRV_PLC_PHY_CD_RX_STATE Enum@@@typedef enum { CD_RX_IDLE = 0 , CD_RX_PREAMBLE_ 1 _ 2 = 1 , CD_RX_PREAMBLE_ 2 _ 3 = 2 , CD_RX_PREAMBLE = 3 , CD_RX_HEADER = 4 , CD_RX_PAYLOAD = 5 , } DRV_PLC_PHY_CD_RX_STATE; List of Reception state...","GUID-98F10C10-D69B-45C3-A273-F3488B67B1A3.html@@@1.1.1.4 Library Interface@@@PLC PHY driver library provides the following interfaces: Functions Name Description DRV_PLC_PHY_Initialize Initializes the PLC PHY instance for the specified driver index DRV_PLC_PHY_Open Opens the...","GUID-9B97E933-ACCA-4CB3-833E-B2ED35121CF1.html@@@1.1.2.4.64 MAC_RT_MIB_INIT_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { uint32_t csmaNoAckCount; uint32_t badCrcCount; uint32_t rxSegmentDecodeErrorCount; uint32_t rxMACRepetitionCount; uint32_t...","GUID-9C3076C9-0171-469B-B059-048A45B45047.html@@@1.2.6.4.10 SRV_USI_HANDLE Typedef@@@typedef uintptr_t SRV_USI_HANDLE; Handle to an opened instance of the USI service. This handle identifies an opened instance of the USI service. It is returned from SRV_USI_Open and it has to be...","GUID-9CCE1919-6FB5-41BE-90E8-9A12F57D6D61.html@@@1.2.3 PLC PHY Serial Service@@@This service allows controlling a PLC transceiver at PHY level through a Serial interface using USI Service. This serialization includes transmission and reception of PLC frames, as well as getting...","GUID-9D6EE75D-10ED-41F1-9F79-0434D8D46BE8.html@@@1.3.1.3.6.5.8 Maximum Demand Command@@@The \u201CMDC\u201D command (protected with password) erases all the maximum demand records. The \u201CMDR\u201D command reads the maximum demand and happening time records. If the command is sent without parameter, the...","GUID-9D9C46CF-4296-4502-B64F-9115B5A9C08B.html@@@1.1.1.4.21 DRV_PLC_PHY_SLEEP_IND_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_SLEEP_CALLBACK )( uintptr_t context ); Notifies when SLeep Mode is disabled and PLC driver is able to be used again. This data type defines the required function signature...","GUID-9E75A7C3-42F5-4A1E-B1AF-1203C102A743.html@@@1.1.4.4.27 DRV_RF215_OFDM_BW_OPT Enum@@@typedef enum { /* Option 1: Nominal bandwidth 1094 kHz, 96 data tones, 8 pilot tones */ OFDM_BW_OPT_ 1 = 0 , /* Option 2: Nominal bandwidth 552 kHz, 48 data tones, 4 pilot tones */ OFDM_BW_OPT_ 2 = 1...","GUID-9F6DC912-C55A-4BCD-90FA-BC4CCACA9138.html@@@1.1.1.4.24.5 DRV_PLC_PHY_TX_RESULT Enum@@@typedef enum { /* Transmission result: already in process */ DRV_PLC_PHY_TX_RESULT_PROCESS = 0 , /* Transmission result: end successfully */ DRV_PLC_PHY_TX_RESULT_SUCCESS = 1 , /* Transmission result...","GUID-9F92936D-DEC9-4403-BC8D-8CAF14F19639.html@@@1.2.5.3 Configuring The Library@@@The CRC Library has no configuration options. It just satisfies the requirement of other libraries, such as USI service, as seen on the figure below. Figure .\u2000 CRC Service satisfies USI requirement...","GUID-9FA1FFFF-E886-463A-8C9E-E2EA03789F2D.html@@@1.3.2 Dual Core Demo Application@@@A dual core device (e.g., PIC32CX2051MTSH128) has a Main core and Secondary core that can operate independently and can be developed separately during application development. Both processor (Main and...","GUID-9FC71CD9-27EF-4136-8708-58075AE0B905.html@@@1.2.3.2 Using The Library@@@The PLC PHY Serial library is an add-on that can be used along with the PLC PHY Driver . The PHY driver is the one in charge of PLC communications, while the Serial library is used to serialize the...","GUID-9FE80E80-1BF6-42C8-BC7D-FADFB5D11E0D.html@@@1.1.4.4.1 DRV_RF215_Initialize Function@@@SYS_MODULE_OBJ DRV_RF215_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ); Initializes the RF215 driver. This routine initializes the RF215 driver, making it ready for...","GUID-9FF36725-3200-489F-8E5A-08E6DA599D4E.html@@@1.2.3.4.2 SRV_PSERIAL_ParseGetPIB Function@@@void SRV_PSERIAL_ParseGetPIB ( DRV_PLC_PHY_PIB_OBJ* pDataDst, uint8_t* pDataSrc ); Extracts PIB field from SRV_PSERIAL_CMD_PHY_GET_CFG Serial frame. Takes a GetPIB Serial frame as parameter, extracts...","GUID-A0BCB82A-134B-499A-A277-9EFE7CD8129F.html@@@1.3.1.3.7 Demo LCD Display@@@The Demo boards include an LCD customized for a smart metering application field. This LCD is driven directly by the PIC32CXMTx MCU, generating the driving signals for the common lines and the...","GUID-A276143A-DF95-4D51-ADE9-7B7B0157694A.html@@@1.2.3.4.1 SRV_PSERIAL_GetCommand Function@@@SRV_PSERIAL_COMMAND SRV_PSERIAL_GetCommand ( uint8_t* pData ); Extracts Command field from Sniffer frame. Takes Serial frame as parameter and extracts the Command field from the expected position in...","GUID-A2A1EDAC-3C1D-4A42-AC6F-E7CD237D90E4.html@@@1.2.3.4.9 SRV_PSERIAL_COMMAND Enum@@@typedef enum { /* Get data configuration request */ SRV_PSERIAL_CMD_PHY_GET_CFG = 0 , /* Get data configuration response */ SRV_PSERIAL_CMD_PHY_GET_CFG_RSP, /* Set data configuration request */...","GUID-A33FE9DF-132B-4BE0-8D69-E474D59DAF49.html@@@1.1.3.4.4 DRV_METROLOGY_Close Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Close ( void ); Closes the metrology driver. This routine closes the metrology driver making it unusable. None. If successful, returns DRV_METROLOGY_SUCCESS...","GUID-A3663EE4-FB02-4CF3-BD0E-2BE3FED24123.html@@@1.2.6.3 Configuring The Library@@@USI Service is configured via MCC. The following snapshots show the MCC configuration window for USI Service and brief description. Figure .\u2000 USI Service common configuration options for all instances...","GUID-A37B3184-B223-4CDE-B2DC-68406D72CBB0.html@@@1.2.11.4.1 CIPHER_Wrapper_CmacStart Function@@@int32_t CIPHER_Wrapper_CmacStart ( const uint8_t *key, uint32_t keyLen) Sets the CMAC key and prepares to authenticate the input data. This function sets the CMAC key and prepares to authenticate the...","GUID-A395CF87-7EC5-432E-BCCC-EBFE88E3DFEE.html@@@1.1.4.4.12 DRV_RF215_SetChannelRequest Function@@@void DRV_RF215_SetChannelRequest ( DRV_HANDLE drvHandle, uint64_t timeCount, uint16_t channelNum, DRV_RF215_TX_TIME_MODE timeMode ); Allows a client to request RX frequency channel switch at specified...","GUID-A4532A69-E4C0-414D-B17E-385EC9480F7C.html@@@2.3 Hardware Requirements@@@The hardware development boards supported by Harmony 3 Smart Energy applications are as follows: SAME70 Xplained Ultra PIC32CXMTG-EK PIC32CXMTSH-DB PIC32CXMTC-DB Connected to: PL460-EK for PLC...","GUID-A48A9C4F-4251-4807-A3CB-FE22524FF8B1.html@@@1.1.1.4.9 DRV_PLC_PHY_ExceptionCallbackRegister Function@@@void DRV_PLC_PHY_ExceptionCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_EXCEPTION_CALLBACK callback, const uintptr_t context ); Allows a client to set an exception event handling...","GUID-A4FB6CF6-F917-4873-BBF0-AD192B833A11.html@@@1.3.1 Demo Meter Application@@@The demo meter application software shows how to initialize the Core 1 and the metrology library, and how to interact with the metrology library using the shared memory area and the IPC interrupts...","GUID-A528297A-C3D6-48ED-AEC2-C8221CBD4A12.html@@@1.1.2.4.31 DRV_G3_MACRT_DATA_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_DATA_IND_CALLBACK )( uint8_t *pData, uint16_t length ); Pointer to a G3 MAC RT Driver Reception Event handler function. This data type defines the required function...","GUID-A5A33003-F6F9-43F2-9625-337590CBC7E1.html@@@1.1.3.4.22 DRV_METROLOGY_GetCalibrationReferences Function@@@DRV_METROLOGY_CALIBRATION_REFS * DRV_METROLOGY_GetCalibrationReferences ( void ); Get the pointer to the calibration references used in the internal calibration process of the metrology library. These...","GUID-A74E4416-E7F9-4A02-8A29-FC1F2A00BF93.html@@@1.2.1.4.2.3 SRV_PCOUP_Set_Channel_Config Function@@@bool SRV_PCOUP_Set_Channel_Config (DRV_HANDLE handle, DRV_PLC_PHY_CHANNEL channel); Set the PLC PHY Coupling parameters for the specified PRIME channel. This function allows to set the PLC PHY...","GUID-A7685FE8-B336-4379-A26B-C821EBD7CD85.html@@@1.1.2 G3 MAC RT Driver@@@This driver provides a non-blocking interface with the external on-chip PLC transceiver. The library uses the SPI peripheral library (PLIB) and the Direct Memory Access controller to interface with...","GUID-A8414161-02E8-4FEA-A905-9A37195E8C3F.html@@@1.2.12.4.2 SRV_QUEUE_Append Function@@@void SRV_QUEUE_Append ( SRV_QUEUE *queue, SRV_QUEUE_ELEMENT *element ); Appends an element into a queue. This function appends an element into a queue. The queue must have been initialized previously...","GUID-A8BA24F1-251F-4BF5-87E3-51E0AC43181F.html@@@1.2.11.4.11 AES_Wrapper_ContextFree Function@@@void AES_Wrapper_ContextFree ( void ) Frees AES context. This function frees AES context setting it to all zeros. None. None. None. uint8_t in1[CRYPT_AES_BLOCK_SIZE]; uint8_t...","GUID-A8DFFB5A-8278-4EA1-93F1-16427061CF00.html@@@1.1.4.4.2 DRV_RF215_Status Function@@@SYS_STATUS DRV_RF215_Status ( SYS_MODULE_OBJ object ); Gets the current status of the RF215 driver module. This routine provides the current status of the RF215 driver module. The DRV_RF215_Initialize...","GUID-A92CAB0B-51F2-4706-938C-5E993E3CD6BD.html@@@1.1.3.4.36 DRV_METROLOGY_AFE_EVENTS Struct@@@typedef struct { unsigned int paDir : 1 ; unsigned int pbDir : 1 ; unsigned int pcDir : 1 ; unsigned int ptDir : 1 ; unsigned int qaDir : 1 ; unsigned int qbDir : 1 ; unsigned int qcDir : 1 ; unsigned...","GUID-A95FDE79-4A31-43E5-B7E2-A923B08DBEFA.html@@@1.2.4 PLC PVDD Monitor Service@@@This service aims to protect the amplification stage for the main transmission branch integrated in PL460 device...","GUID-A9D08F5B-A721-44F2-9668-448E48C8192C.html@@@1.2.5.4 Library Interface@@@PLC CRC library provides the following interfaces: Functions Name Description SRV_PCRC_GetValue Obtains the CRC for a data stream SRV_PCRC_SetSNAValue Sets SNA value to be used as initial value on...","GUID-AAEC3972-5EE1-4883-9FD4-32F9A29C8C7E.html@@@1.1.4.4.36 DRV_RF215_FSK_CFG_OBJ Struct@@@typedef struct { DRV_RF215_FSK_SYM_RATE symRate; DRV_RF215_FSK_MOD_IDX modIdx; DRV_RF215_FSK_MOD_ORD modOrd; } DRV_RF215_FSK_CFG_OBJ; Defines the data required to configure the RF215 FSK PHY. This...","GUID-ABD6B3B9-0277-4F29-815A-CE801C8655BE.html@@@1.1.2.4.54 MAC_RT_COMMAND Enum@@@typedef enum { MAC_RT_COMMAND_BEACON_REQUEST = 0x07 , MAC_RT_COMMAND_TONE_MAP_RESPONSE = 0x0A , } MAC_RT_COMMAND; List of G3 MAC commands. This data type defines the list of MAC commands supported by...","GUID-ABD93EB0-3099-42B8-9559-30F072F02739.html@@@1.2.6.4.11 SRV_USI_HANDLE_INVALID Macro@@@#define SRV_USI_HANDLE_INVALID (((SRV_USI_HANDLE) - 1 )) Definition of invalid USI handle. This definition is used to indicate that an USI handle ( SRV_USI_HANDLE Typedef ) is invalid. SRV_USI_Open...","GUID-ABDB2B5F-A489-4371-BA51-5A9DB563C3C8.html@@@1.2.12.4.6 SRV_QUEUE_Read_Or_Remove Function@@@SRV_QUEUE_ELEMENT *SRV_QUEUE_Read_Or_Remove( SRV_QUEUE *queue, SRV_QUEUE_MODE accessMode, SRV_QUEUE_POSITION position ); Reads or removes an element from a queue. This function reads or removes an...","GUID-AC3277B6-3EC5-424C-B5F7-81ED5B087B3C.html@@@1.3.1.3.6.5.10 Configuration Command@@@The configuration command (\u201CCNF\u201D) is used to configure the metrology library according to the hardware in the input networks as well as the programmable gain of the internal amplifiers. This command...","GUID-AC680876-B0BE-403F-B362-21FD96EB06B3.html@@@1.1.3.4.13 DRV_METROLOGY_GetStatusData Function@@@DRV_METROLOGY_REGS_STATUS * DRV_METROLOGY_GetStatusData( void ); Get the pointer to the status registers of the metrology library application running on the second processor. The Metrology library...","GUID-ADB76E99-DC24-4AF5-9900-BED214AAAF86.html@@@Product Identification System@@@To order or obtain information, e.g., on pricing or delivery, refer to the factory or the listed sales office...","GUID-AE244765-6DBD-45B2-8D76-044FCFDE3B96.html@@@1.1.4.4.5 DRV_RF215_Open Function@@@DRV_HANDLE DRV_RF215_Open ( const SYS_MODULE_INDEX index, const DRV_RF215_TRX_ID trxID ); Opens the specified RF215 driver instance and returns a handle to it. This routine opens the specified RF215...","GUID-AE3D56F1-0E28-44CB-B027-55E9BC422080.html@@@1.2.10.2 Using The Library@@@The Random library is called to obtain a random number with certain characteristics. The following example illustrates how the Random service can be used. uint8_t rndNum8; uint16_t rndNum16; uint32_t...","GUID-AEB8DFE3-0BED-4D89-98D8-78F367814AA1.html@@@1.2.6.4.4 SRV_USI_Status Function@@@SRV_USI_STATUS SRV_USI_Status ( SRV_USI_HANDLE handle ) Returns the current status of the USI service. This routine provides the current status of the USI service instance. SRV_USI_Open must have been...","GUID-AF19D487-59D9-4D2F-AA35-E1583DDFB82D.html@@@1.1.1.4.24.6 DRV_PLC_PHY_TONE_MAP_RSP Struct@@@typedef struct { /* Modulation type */ DRV_PLC_PHY_MOD_TYPE modType; /* Modulation scheme */ DRV_PLC_PHY_MOD_SCHEME modScheme; /* Tone Map */ uint8_t toneMap[TONE_MAP_SIZE_MAX]; }...","GUID-AF884BA6-67E5-4927-8D31-B1F196BE22BD.html@@@1.1.1.4.25 PRIME Data types and constants@@@PRIME Data types and constants...","GUID-AF9468DD-222F-4B52-843F-E7D3EB3E4867.html@@@1.1.4.4.39 DRV_RF215_PHY_CFG_OBJ Struct@@@typedef struct { /* Channel center frequency F0 in Hz */ uint32_t chnF0Hz; /* Channel spacing in Hz */ uint32_t chnSpaHz; /* Minimum channel number */ uint16_t chnNumMin; /* Maximum channel number */...","GUID-AFDC622F-1532-47B6-9FE5-C9561DE7AD8F.html@@@2.9 MCC Code Generation@@@When all the required Harmony components are added to the project and configured, it is time to generate the source files. Click Generate button in Project Resources window on left pane Figure .\u2000...","GUID-B05F470E-0BF3-4615-92E6-A99FDB6A586B.html@@@1.2.8.4.1 SRV_RSERIAL_GetCommand Function@@@SRV_RSERIAL_COMMAND SRV_RSERIAL_GetCommand (uint8_t* pData); Extracts command field from serial frame. Takes serial frame as parameter and extracts the command field from the expected position in...","GUID-B0D43890-3087-41AD-B694-E10EB97EB0D8.html@@@1.1.3.4.27 DRV_METROLOGY_RMS_SIGN Enum@@@typedef enum { /* Positive Value */ RMS_SIGN_POSITIVE = 0 , /* Negative Value */ RMS_SIGN_NEGATIVE = 1 , } DRV_METROLOGY_RMS_SIGN; Describes the sign of some metrology measurements. This quality only...","GUID-B12673FB-2A40-402F-A99F-3B767C712E77.html@@@1.2.6.2 Using The Library@@@USI is a service that allows to send/receive messages to/from an external tool. It is used in conjuction with another Smart Energy libraries to serialize different protocol layers. Following example...","GUID-B2276F0A-9A1D-4C44-80B6-0DC6C1953C15.html@@@1.1.2.4.25 DRV_PLC_HAL_INTERFACE Struct@@@typedef struct { /* PLC PLIB Interface */ DRV_PLC_PLIB_INTERFACE *plcPlib; /* PLC HAL init */ DRV_PLC_HAL_INIT init; /* PLC HAL setup */ DRV_PLC_HAL_SETUP setup; /* PLC HAL reset device */...","GUID-B2ABF750-2622-4A16-BD06-60AF4EA9E6EA.html@@@1.1.3.4.21 DRV_METROLOGY_GetEventsData Function@@@void DRV_METROLOGY_GetEventsData (DRV_METROLOGY_AFE_EVENTS * events); Gets the last metrology AFE events data. For further information about the event data, refer to DRV_METROLOGY_AFE_EVENTS...","GUID-B30E0A99-F577-4040-B9DB-4BF69AC7D3E8.html@@@1.1.3.4.28 DRV_METROLOGY_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_CALLBACK)( void ); Defines the data type and function signature for the callback function of the calibration procedure. The Metrology driver will call back the client&apos;s...","GUID-B3A181FF-1B0E-4CF1-8EBB-0D9000DB82EF.html@@@1.2.6.4.3 SRV_USI_Close Function@@@void SRV_USI_Close ( SRV_USI_HANDLE handle ) Closes an opened-instance of the USI service. This routine closes an opened-instance of the USI service, invalidating the handle. A new handle must be...","GUID-B4522710-73A2-4AC6-8FAA-A46B8AFEF0D3.html@@@1.1.3.4.3 DRV_METROLOGY_Open Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_Open ( DRV_METROLOGY_START_MODE mode, DRV_METROLOGY_CONTROL * pConfiguration ); Opens the metrology driver according to the mode parameter. This routine enables the...","GUID-B5DBC15D-D245-4369-B4C8-A93B6C57B81B.html@@@1.2.7.4 Library Interface@@@RF PHY Sniffer library provides the following interfaces: Name Description SRV_RSNIFFER_SerialRxMessage Serializes a received RF frame along with its parameters SRV_RSNIFFER_SetTxMessage Gives a...","GUID-B5DC13C2-99DD-4232-8371-37A4210FA350.html@@@1.2.11.4.5 CIPHER_Wrapper_CcmAuthDecrypt Function@@@int32_t CIPHER_Wrapper_CcmAuthDecrypt (uint32_t length, const uint8_t *iv, uint32_t ivLen, const uint8_t *add, uint32_t addLen, const uint8_t *input, uint8_t *output, const uint8_t *tag, uint32_t...","GUID-B74CFBEC-2049-4087-B361-12EAE0A6D2D5.html@@@1.2.1.4.1.4 SRV_PCOUP_Get_Phy_Band Function@@@uint8_t SRV_PCOUP_Get_Phy_Band (SRV_PLC_PCOUP_BRANCH branch); Get the G3-PLC PHY band associated to the specified transmission branch. This function allows to get the G3-PLC PHY band associated to the...","GUID-B7C7F0AD-BC60-40E7-AFBA-2B1E32343684.html@@@1.1.1.4.10 DRV_PLC_PHY_SleepDisableCallbackRegister Function@@@void DRV_PLC_PHY_SleepDisableCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_SLEEP_IND_CALLBACK callback, const uintptr_t context ); Allows a client to set a sleep mode disable event...","GUID-B89FD8FD-29D0-4A95-A949-4F22179558D0.html@@@1.1.1.4.24.3 DRV_PLC_PHY_MOD_TYPE Enum@@@typedef enum { MOD_SCHEME_DIFFERENTIAL = 0 , MOD_SCHEME_COHERENT = 1 , }DRV_PLC_PHY_MOD_TYPE; G3-PLC Modulation Schemes. This data type contains every modulation schemes supported by G3-PLC spec...","GUID-B97CF006-172A-4DC1-B8FE-204A3ACC5513.html@@@1.2.7.4.2 SRV_RSNIFFER_SetTxMessage Function@@@void SRV_RSNIFFER_SetTxMessage ( DRV_RF215_TX_REQUEST_OBJ* pReqObj, DRV_RF215_TX_HANDLE txHandle ); Gives a transmitted RF TX request object to sniffer library so it is stored for later serialization...","GUID-B9B18272-FE71-46AA-9B7F-616CF9D0F78E.html@@@1.2.8.3 Configuring The Library@@@The RF PHY Serial Service has no configuration options via MCC. Figure .\u2000 RF PHY Serial Service configuration options...","GUID-BAD839D0-DC99-40E6-B406-813928767344.html@@@1.2.1.3 Configuring The Library@@@PLC PHY Coupling Service can be configured via MCC. Alternatevely, the generated source/header files can be modified for custom configuration. The following snapshots show the MCC configuration window...","GUID-BB7FA537-41CA-460C-8463-9C9FB4C8F8BA.html@@@1.3.2.2 Configuring Dual Core Demo Secondary Application@@@Dual Core Demo Secondary Application Configurations Dual Core Demo Secondary Application should be configured via MCC. Below is the Snapshot of the MCC configuration window for Dual Core Demo...","GUID-BC0EE1C9-DD7A-40D0-B9E2-851C3000E6AD.html@@@1.3.1.3.6.5.7 Event Check Commands@@@The application registers events, such as voltage sag and reverse power direction. The events are read by means of the \u201CEVER\u201D command. The first parameter is the event type. The possible values are...","GUID-BC9EAC1D-D487-4989-9A90-8FDA4318916B.html@@@1.2.12 Queue Service@@@The Smart Energy communication stacks use the Queue service to manage data waiting to be processed, usually in sequential order. This library offers queueing capabilitites in a single module...","GUID-BCAEB4CE-EDD1-4889-A68B-F1FFADFAE055.html@@@1.1.2.4.60 MAC_RT_SEGMENT_CONTROL Struct@@@typedef struct { /* Reserved */ uint8_t reserved : 4 ; /* Tone Map Request */ uint8_t toneMapRequest : 1 ; /* Contention Control */ uint8_t contentionControl : 1 ; /* Channel Access Priority */...","GUID-BCB28663-4E3B-4C51-8F7D-A9495FB0A16A.html@@@1.2.2.4.7 SRV_PSNIFFER_SetPLCChannel Function@@@void SRV_PSNIFFER_SetPLCChannel ( uint8_t channel ); Sets PLC channel to be used on PLC Sniffer. This function allows setting the right PLC channel to listed to. If misconfigured, no PLC frames will...","GUID-BCDEBE16-C60B-4716-8279-F2C58C46FF56.html@@@1.2.9 SPI Splitter Service@@@This service allows to use the same SPI peripheral for a PLC Driver ( PHY or G3 MACRT ) and RF215 Driver . SPCK, MISO and MOSI lines are shared between both transceivers, while each transceiver is...","GUID-BE3CF636-F9FC-4135-AD31-D569E06C0DC5.html@@@1.1.4.4.47 DRV_RF215_PLIB_SPI_SET_CALLBACK Typedef@@@typedef void ( *DRV_RF215_PLIB_SPI_SET_CALLBACK ) (FLEXCOM_SPI_CALLBACK callback, uintptr_t context); Pointer to a PLIB function to set SPI callback. This data type defines the required function...","GUID-BE95F15B-2EE5-4955-A737-8EACFC145E48.html@@@1.1.1.4.25.7 DRV_PLC_PHY_TX_RESULT Enum@@@typedef enum { /* Transmission result: already in process */ DRV_PLC_PHY_TX_RESULT_PROCESS = 0 , /* Transmission result: end successfully */ DRV_PLC_PHY_TX_RESULT_SUCCESS = 1 , /* Transmission result...","GUID-BF84994F-1D02-4912-91AB-DCB62487A732.html@@@1.2.2 PLC PHY Sniffer Service@@@This service serializes transmitted and received PLC PHY frames (along with informative frame parameters) in a buffer to later send them through a Serial Interface using USI Service. On the other...","GUID-BFD4CB7A-5999-4856-86F9-5EFBC26F5627.html@@@1.2.10.3 Configuring The Library@@@The Random Service has no configuration options via MCC. It just satisfies the requirement of other components, such as Smart Energy communication stacks. The random numbers can be generated from...","GUID-C0265DE4-9BE3-4A22-A9C0-9E76AE1D1E61.html@@@1.1.3.4.15 DRV_METROLOGY_GetHarData Function@@@DRV_METROLOGY_REGS_HARMONICS * DRV_METROLOGY_GetHarData ( void ); Get the pointer to the harmonic analysis registers of the metrology library application running on the second processor. Harmonic...","GUID-C0B40EB5-8C77-4961-8932-C0C247B4FA29.html@@@1.2.6.4.5 SRV_USI_CallbackRegister Function@@@void SRV_USI_CallbackRegister ( SRV_USI_HANDLE handle, SRV_USI_PROTOCOL_ID protocol, SRV_USI_CALLBACK callback) Registers a function to be called back when a new message is received and it belongs to...","GUID-C1154A14-04F4-464E-B9F0-AA94EF9BF937.html@@@1.3.1.2 Metering Demo Hardware Configuration@@@Please check the default jumper settings for PIC32CXMTSH-DB and PIC32CXMTC-DB boards, available in the PIC32CXMTSH-DB HW User Guide and the PIC32CXMTC-DB HW User Guide. Users could change the jumper...","GUID-C1368B6D-1074-48E7-B4F1-97D6A413EFD3.html@@@1.2.12.4 Library Interface@@@The Queue service library provides the following interfaces: Functions Name Description SRV_QUEUE_Init Initializes the given queue SRV_QUEUE_Append Appends an element into a queue...","GUID-C28059AE-E01B-4F83-9DDC-6E6397DD36F8.html@@@1.1.2.4.38 MAC_RT_TX_CFM_OBJ Struct@@@typedef struct { /* MAC RT Status */ MAC_RT_STATUS status; /* Flag to indicate Timestamp should be updated */ bool updateTimestamp; } MAC_RT_TX_CFM_OBJ; Contains a transmission result and timestamp...","GUID-C2D20394-132A-400D-9BA7-214987F254B5.html@@@1.1.2.4.34 DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_COMM_STATUS_IND_CALLBACK )( uint8_t *pData ); Pointer to a G3 MAC RT Communication Status Event handler function. This data type defines the required function signature...","GUID-C33C587B-747B-4FAB-9976-F27A7875D841.html@@@1.1.1.4.25.3 DRV_PLC_PHY_FRAME_TYPE Enum@@@typedef enum { FRAME_TYPE_A = 0 , FRAME_TYPE_B = 2 , FRAME_TYPE_BC = 3 , } DRV_PLC_PHY_FRAME_TYPE; PRIME Types of PHY frame This Enum contains every types of frame supported by PRIME spec...","GUID-C351E8B0-8A8B-4006-89E0-3DE133B33D5E.html@@@1.1.1.4.24.8 DRV_PLC_PHY_TRANSMISSION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to data buffer to transmit */ uint8_t *pTransmitData; /* Instant when transmission has to start referred to 1us PHY counter */...","GUID-C38AD3F4-CA6C-48DE-A6A1-28C18B778318.html@@@1.1.2.4.6 DRV_G3_MACRT_PIBSet Function@@@MAC_RT_STATUS DRV_G3_MACRT_PIBSet ( const DRV_HANDLE handle, MAC_RT_PIB_OBJ *pibObj ); Allows a client to set information to PLC transceiver on G3 MAC RT and PHY information base (PIB). This routine...","GUID-C4E70173-892D-4DA2-AB25-559396A72201.html@@@1.2.8.4.3 SRV_RSERIAL_SerialGetPIB Function@@@uint8_t* SRV_RSERIAL_ParsePIB ( uint8_t* pDataSrc, DRV_RF215_TRX_ID* pTrxId, DRV_RF215_PIB_ATTRIBUTE* pPibAttr, uint8_t* pPibSize ); Serializes a response to a get PIB command. Takes the result of...","GUID-C523D0B6-9856-488F-8E29-3ECAE2F05AF2.html@@@1.1.4.4.20 DRV_RF215_RX_IND_CALLBACK Typedef@@@typedef void ( *DRV_RF215_RX_IND_CALLBACK ) ( DRV_RF215_RX_INDICATION_OBJ *indObj, uintptr_t context ); Pointer to a RF215 driver receive indication callback function. This data type defines the...","GUID-C539ED4B-FFD8-463F-B9AB-290E4CC10E6C.html@@@1.2.8 RF PHY Serial Service@@@This service allows controlling the RF215 transceiver at PHY level through a serial interface using the USI Service. This serialization includes transmission and reception of RF frames, as well as...","GUID-C68E12F8-5625-420D-B82B-D586E15D9F3A.html@@@1.1.3.4.31 DRV_METROLOGY_SENSOR_TYPE Enum@@@typedef enum { /* Current Transformer */ SENSOR_CT = 0 , /* Shunt resistor */ SENSOR_SHUNT = 1 , /* Rogowski Coil */ SENSOR_ROGOWSKI = 2 , SENSOR_NUM_TYPE } DRV_METROLOGY_SENSOR_TYPE; Describes the...","GUID-C6935B6F-3F19-4CEE-AE52-998913858742.html@@@1.1.1.2 Using The Library@@@The PLC PHY library builds on top of an SPI peripheral library (PLIB) to communicate with a PLC transceiver in which G3-PLC or PRIME PHY layer run. However, the underlying use of an SPI port is...","GUID-C6DA42F5-1680-4986-9D24-BCB2EA3F509D.html@@@1.2.11.4.8 CIPHER_Wrapper_EaxEncrypt Function@@@int32_t CIPHER_Wrapper_EaxEncrypt ( const uint8_t *iv, uint32_t ivLen, const uint8_t *hdr, uint32_t hdrLen, uint8_t *msg, uint32_t msgLen, uint8_t *tag, uint32_t tagLen) Encrypts a message using the...","GUID-C737268D-1E58-442D-A649-AC8B132919DE.html@@@1.1.2.4.53 MAC_RT_FRAME_TYPE Enum@@@typedef enum { MAC_RT_FRAME_TYPE_BEACON = 0x00 , MAC_RT_FRAME_TYPE_DATA = 0x01 , MAC_RT_FRAME_TYPE_ACKNOWLEDGMENT = 0x02 , MAC_RT_FRAME_TYPE_MAC_COMMAND = 0x03 , MAC_RT_FRAME_TYPE_RESERVED_ 4 = 0x04...","GUID-C7DD098A-D23F-4DFD-BE53-74C297670599.html@@@1.1.1.4.25.1.1 DRV_PLC_PHY_IDs@@@Description: Name of MCU, in string format, where PL360 Host Controller is running. Access: Read-only. Value Range: 10 bytes. Default Value: &quot;SAME70&quot; or &quot;PIC32CX&quot;. Description: Model identification...","GUID-C878A278-A038-469F-AA4E-717F236F2131.html@@@1.1.2.4.21 DRV_G3_MACRT_EnableTX Function@@@void DRV_G3_MACRT_EnableTX ( const DRV_HANDLE handle, bool enable ); Enables/Disables PLC transmission. This function allows a client to enable or disable the PLC tranmission. If there is any...","GUID-C93798B1-67AA-4BC4-8CB4-CFAA57B821BF.html@@@1.1.4.4.32 DRV_RF215_TX_TIME_MODE Enum@@@typedef enum { /* Absolute time, referred to system 64-bit counter */ TX_TIME_ABSOLUTE = 0 , /* Relative time, referred to current system time */ TX_TIME_RELATIVE = 1 , } DRV_RF215_TX_TIME_MODE...","GUID-C9D39EA4-E773-4EB2-BB18-A881CF467777.html@@@1.1.3.4.8 DRV_METROLOGY_CalibrationCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_CalibrationCallbackRegister ( DRV_METROLOGY_CALIBRATION_CALLBACK callback ); Registers a function with the metrology driver to be called back when the calibration...","GUID-CA6DD1FB-AAB0-49BC-ABCB-EC6E66CA731C.html@@@1.2.4.4.3 SRV_PVDDMON_Initialize Function@@@void SRV_PVDDMON_Initialize ( void ); Initializes the PVDD Monitor service. This routine initializes the PVDD Monitor service, making it ready for clients to start and use it. None. None. /* Init PVDD...","GUID-CA90392C-FDB3-43DE-9A26-0C6A429FDFD4.html@@@1.1.4.4.42 DRV_RF215_TX_CONFIRM_OBJ Struct@@@typedef struct { /* TX time (PPDU start), referred to system 64-bit time counter */ uint64_t timeIniCount; /* PPDU duration in system time counter units */ uint32_t ppduDurationCount; /* Transmission...","GUID-CAC25733-1D0F-44AE-84B4-82D140523B79.html@@@1.1.1.4.11 DRV_PLC_PHY_ExternalInterruptHandler Function@@@void DRV_PLC_PHY_ExternalInterruptHandler ( const PIO_PIN pin, const uintptr_t context ); Allows application to register callback for PLC Interrupt pin. This function allows a client to register a...","GUID-CAE76D2E-3269-4F93-9BC5-9181B397DA3A.html@@@1.3.1.3.4 Calibrate the Demo Board Using the Demo Meter Application@@@This chapter describes how to calibrate the system to achieve the expected high accuracy. Note: The calibration procedure is explained in the Microchip PIC32CXMTx Metrology User Guide, including a...","GUID-CC2FC1BB-40F6-41C6-9676-40E1BA7DB412.html@@@1.1.1.4.3 DRV_PLC_PHY_Close Function@@@void DRV_PLC_PHY_Close ( const DRV_HANDLE handle ); Closes an opened instance of the PLC PHY driver. This routine closes an opened instance of the PLC PHY driver, invalidating the handle. A new handle...","GUID-CC7037AE-6A1F-4EAF-894A-9588EEF3BEAD.html@@@1.1.1.4.2 DRV_PLC_PHY_Open Function@@@SYS_MODULE_OBJ DRV_PLC_PHY_Open ( const SYS_MODULE_INDEX index, const DRV_PLC_BOOT_DATA_CALLBACK callback ); Opens the specified PLC PHY driver instance and returns a handle to it. This routine opens...","GUID-CD78B395-BA9B-4279-B2D4-BD3C9E156205.html@@@1.2.5.4.3 PCRC_HEADER_TYPE Enum@@@typedef enum { PCRC_HT_GENERIC = 0 , /* PRIME Generic Packet type */ PCRC_HT_PROMOTION = 1 , /* PRIME Promotion Packet type */ PCRC_HT_BEACON = 2 , /* PRIME Beacon Packet type */ PCRC_HT_USI = 3 /*...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CE36C238-4FFB-4E75-BF61-A16DEFE6C538.html@@@1.1.1.4.25.4 DRV_PLC_PHY_HEADER Enum@@@typedef enum { HDR_GENERIC = 0 , HDR_PROMOTION = 1 , HDR_BEACON = 2 , } DRV_PLC_PHY_HEADER; PRIME Header Types This Enum contains every header types supported by PRIME spec...","GUID-CE77D416-518D-43EB-89C8-21D8BD828297.html@@@1.1.3.4.29 DRV_METROLOGY_CALIBRATION_CALLBACK Typedef@@@typedef void (* DRV_METROLOGY_CALIBRATION_CALLBACK)(bool result); Defines the data type and function signature for the callback function of the calibration procedure. The Metrology driver will call...","GUID-CEFD2803-4402-48B4-A248-D2236229542E.html@@@1.1.2.4.58 MAC_RT_NEIGHBOUR_ENTRY Struct@@@typedef struct __attribute__ ((packed)) { uint16_t shortAddress; MAC_RT_TONE_MAP toneMap; uint8_t modulationType : 3 ; uint8_t txGain : 4 ; uint8_t txRes : 1 ; MAC_RT_TX_COEF txCoef; uint8_t...","GUID-CF14D9CC-81BC-433A-8FFF-3220361ECECE.html@@@1.1.4.4.30 DRV_RF215_PHY_MOD_SCHEME Enum@@@typedef enum { /* FSK: FEC enabled */ FSK_FEC_OFF = 0 , /* FSK: FEC disabled */ FSK_FEC_ON = 1 , /* OFDM: BPSK, 1/2 convolutional encoder rate, 4x frequency repetition */ OFDM_MCS_ 0 = 0 , /* OFDM...","GUID-CFC0A3D7-6B3D-4D47-A061-7314346BFFCF.html@@@1.1.2.4.2 DRV_G3_MACRT_Open Function@@@SYS_MODULE_OBJ DRV_G3_MACRT_Open ( const SYS_MODULE_INDEX index, const DRV_PLC_BOOT_DATA_CALLBACK callback ); Opens the specified G3 MAC RT driver instance and returns a handle to it. This routine...","GUID-CFDAE18E-3ABF-43A8-A019-0EFCCDEE50BC.html@@@1.2.8.4.2 SRV_RSERIAL_ParsePIB Function@@@uint8_t* SRV_RSERIAL_ParsePIB ( uint8_t* pDataSrc, DRV_RF215_TRX_ID* pTrxId, DRV_RF215_PIB_ATTRIBUTE* pPibAttr, uint8_t* pPibSize ); Extracts PIB information from get/set PIB serial frame. Takes a...","GUID-CFFD6FF0-72EC-47A5-932E-30B4FA8741A7.html@@@1.2.10.4.1 SRV_RANDOM_Get8bits Function@@@uint16_t SRV_RANDOM_Get8bits ( void ); Returns a random value of 8 bits. This function returns a random value of 8 bits. None. None. 8-bit random value. uint16_t rndNum = SRV_RANDOM_Get8bits(); None...","GUID-D07D7626-C64B-4A08-A120-8F182086A3FF.html@@@1.1.2.4 Library Interface@@@G3 MAC Real Time driver library provides the following interfaces: Functions Name Description DRV_G3_MACRT_Initialize Initializes the MAC RT instance for the specified driver index DRV_G3_MACRT_Open...","GUID-D08B8E46-56BF-4AE9-996E-B096DE7CCBA5.html@@@1.1.1.4.13 DRV_PLC_PHY_Tasks Function@@@void DRV_PLC_PHY_Tasks ( SYS_MODULE_OBJ object ); Maintains the driver&apos;s state machine. This function is used to maintain the driver&apos;s internal state machine. DRV_PLC_PHY_Initialize must have been...","GUID-D0C15B1D-39F9-4EE2-8C8E-E0D13695B096.html@@@1.1.1.4.25.11 DRV_PLC_PHY_TRANSMISSION_CFM_OBJ Struct@@@typedef struct { /* Instant when frame transmission started referred to 1us PHY counter */ uint32_t time; /* RMS value emitted */ uint32_t rmsCalc; /* PRIME Frame type */ DRV_PLC_PHY_FRAME_TYPE...","GUID-D1381F84-612E-4845-863A-52C7BA273A88.html@@@1.1.4.4.11 DRV_RF215_TxCancel Function@@@DRV_RF215_TX_HANDLE DRV_RF215_TxRequest ( DRV_HANDLE drvHandle, DRV_RF215_TX_REQUEST_OBJ* reqObj, DRV_RF215_TX_RESULT* result ); Allows a client to cancel a previously requested transmission. This...","GUID-D21F0F15-AA69-49C2-9464-74D774989BEF.html@@@2.7 Pin Configuration@@@Start Pin Configuration from Plugins drop-down menu Figure .\u2000 Start Pin Configuration Configure pins highlighted in yellow and underlined in red (the ones underlined in green are auto-configured by...","GUID-D255E274-E519-4C2B-A54F-70CDB25A6622.html@@@1.1.4.4.15 DRV_RF215_SetPib Function@@@DRV_RF215_PIB_RESULT DRV_RF215_SetPib ( DRV_HANDLE drvHandle, DRV_RF215_PIB_ATTRIBUTE attr, void * value ); Sets value of PIB attribute. This routine allows a client to set the value of a PIB (PHY...","GUID-D271D58D-4E8B-4AF0-B031-70E9C8E0D23F.html@@@1.1.1.4.24.1.1 DRV_PLC_PHY_IDs@@@Description: Name of MCU, in string format, where PL360 Host Controller is running. Access: Read-only. Value Range: 10 bytes. Default Value: &quot;SAME70&quot; or &quot;PIC32CX&quot;. Description: Model identification...","GUID-D31559FB-10D7-4F93-B817-0CC7599762D6.html@@@1.1.4.4.37 DRV_RF215_OFDM_CFG_OBJ Struct@@@typedef struct { DRV_RF215_OFDM_BW_OPT opt; DRV_RF215_OFDM_ITLV_MODE itlv; } DRV_RF215_OFDM_CFG_OBJ; Defines the data required to configure the RF215 OFDM PHY. This data type defines the data required...","GUID-D33A9EC1-6EB5-4EB8-820A-BF8B6AFAC54D.html@@@1.1.1.4.8 DRV_PLC_PHY_DataIndCallbackRegister Function@@@void DRV_PLC_PHY_DataIndCallbackRegister ( const DRV_HANDLE handle, const DRV_PLC_PHY_DATA_IND_CALLBACK callback, const uintptr_t context ); Allows a client to set a data indication event handling...","GUID-D4A95F17-FA6E-47C8-9FE4-ED986264B809.html@@@1.2.2.4.9 SRV_PSNIFFER_COMMAND Enum@@@typedef enum { /* Set PLC Channel */ SRV_PSNIFFER_CMD_SET_CHANNEL = 2 , /* Enable robust modes of PRIME */ SRV_PSNIFFER_CMD_ENABLE_PRIME_PLUS_ROBUST, /* Inject message in PLC */...","GUID-D4D6B9B8-E622-43E0-8A4F-58303A16AB3C.html@@@1.1.3.4.20 DRV_METROLOGY_SetConfiguration Function@@@void DRV_METROLOGY_SetConfiguration (DRV_METROLOGY_CONFIGURATION * config); Set metrology configuration. This routine is used to configure the metrology library according to the hardware in the input...","GUID-D555F63A-D302-4331-A45B-5DBE2F35C5DA.html@@@1.1.4.4.10 DRV_RF215_TxRequest Function@@@DRV_RF215_TX_HANDLE DRV_RF215_TxRequest ( DRV_HANDLE drvHandle, DRV_RF215_TX_REQUEST_OBJ* reqObj, DRV_RF215_TX_RESULT* result ); Allows a client to request data transmission through RF. This routine...","GUID-D6A8F4B2-ABF8-4BB2-B38F-28A4A20CA152.html@@@1.1.1.4.25.10 DRV_PLC_PHY_TRANSMISSION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to data buffer to transmit */ uint8_t *pTransmitData; /* Instant when transmission has to start referred to 1us PHY counter */...","GUID-D70D0AFC-F139-435C-AFE3-9941AACE006B.html@@@1.3.1.3.4.3.2 Poly-Phase Calibration@@@The calibration is performed by means of the \u201CCAL_T\u201D (phases A, B and C) or of the \u201CCAL_A\u201D (phase A), \u201CCAL_B\u201D (phase B) or \u201CCAL_C\u201D (phase C) commands. To properly calculate the phase calibration...","GUID-D74B0E99-F889-4785-907E-AD92A06C9D2A.html@@@1.1.1.4.25.5 DRV_PLC_PHY_CHANNEL Enum@@@typedef enum { /* Single Channels */ CHN1 = 1 , CHN2 = 2 , CHN3 = 3 , CHN4 = 4 , CHN5 = 5 , CHN6 = 6 , CHN7 = 7 , CHN8 = 8 , /* Double Channels */ CHN1_CHN2 = 9 , CHN2_CHN3 = 10 , CHN3_CHN4 = 11...","GUID-D7A3C017-0DC8-473F-93D5-E5FF0507B1BA.html@@@1.1.1.4.20 DRV_PLC_PHY_DATA_IND_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_DATA_IND_CALLBACK )( DRV_PLC_PHY_RECEPTION_OBJ *indObj, uintptr_t context ); Pointer to a PLC Driver Reception Event handler function. This data type defines the required...","GUID-D884B3B1-57FD-4A52-B3D0-662ECA2D5D02.html@@@1.2.10 Random Service@@@The Smart Energy communication stacks (G3 and PRIME) require random numbers with specific characteristics for certain operations. This library offers an interface to obtain the required random numbers...","GUID-D8B8B187-7B26-4827-9D56-D5876A55BAD2.html@@@1.2.4.4.2 SRV_PVDDMON_CALLBACK Typedef@@@typedef void (*SRV_PVDDMON_CALLBACK)( SRV_PVDDMON_CMP_MODE cmpMode, uintptr_t context ); Pointer to a PVDD Monitor Event handler function. This data type defines the required function signature for...","GUID-D8DBD579-20F6-4CBF-BA28-FCB386F1E9B8.html@@@1.1.2.4.12 DRV_G3_MACRT_MacSnifferCallbackRegister Function@@@void DRV_G3_MACRT_MacSnifferCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_MAC_SNIFFER_CALLBACK callback, uint8_t* pDataBuffer ); Allows enabling G3-PLC MAC Sniffer capabilities and...","GUID-DC136775-2C6D-44AC-810C-0CD7057E42EF.html@@@1.2.2.4 Library Interface@@@PLC PHY Sniffer library provides the following interfaces: Functions Name Description SRV_PSNIFFER_GetCommand Extracts Command field from Sniffer frame SRV_PSNIFFER_SerialRxMessage Serializes a...","GUID-DC149060-F669-4C6E-AEAA-DD6B4CD8165F.html@@@1.1.4.2 Using The Library@@@The RF215 library builds on top of an SPI peripheral library (PLIB) to communicate with the RF215 transceiver, which implements 802.15.4 SUN PHY layeres. However, the underlying use of the SPI port is...","GUID-DCC4ACEB-0D26-4F64-A3E7-C6967F02FF75.html@@@1.1.3.4.9 DRV_METROLOGY_HarmonicAnalysisCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_HarmonicAnalysisCallbackRegister ( DRV_METROLOGY_HARMONIC_ANALYSIS_CALLBACK callback ); Registers a function with the metrology driver to be called back when the...","GUID-DCDFA2E5-435B-474F-9824-D4D6B42D70DF.html@@@1.1.2.4.43 MAC_RT_PHY_PIB Enum@@@typedef enum { PHY_PIB_PRODID = 0 , PHY_PIB_MODEL, PHY_PIB_VERSION_STR, PHY_PIB_VERSION_NUM, PHY_PIB_TONE_MASK, PHY_PIB_TONE_MAP_RSP_DATA, PHY_PIB_TX_TOTAL, PHY_PIB_TX_TOTAL_BYTES...","GUID-DFA024DD-029D-43F9-A6C2-6D65EFA83011.html@@@1.1.3.4.38 DRV_METROLOGY_RMS_TYPE Enum@@@typedef enum { RMS_UA = 0 , RMS_UB, RMS_UC, RMS_IA, RMS_IB, RMS_IC, RMS_INI, RMS_INM, RMS_INMI, RMS_PT, RMS_PA, RMS_PB, RMS_PC, RMS_QT, RMS_QA, RMS_QB, RMS_QC, RMS_ST, RMS_SA, RMS_SB, RMS_SC...","GUID-DFD74282-E687-4256-A70B-A787486FF4B5.html@@@1.1.1.4.23 DRV_PLC_PHY_EXCEPTION Enum@@@typedef enum { /* SPI has detected an unexpected status, reset is recommended */ DRV_PLC_PHY_EXCEPTION_UNEXPECTED_KEY, /* SPI critical error */ DRV_PLC_PHY_EXCEPTION_CRITICAL_ERROR, /* Device has been...","GUID-E0E5E6A7-18F0-4315-B9C1-E4D3011230A8.html@@@1.2.6.4.6 SRV_USI_Tasks Function@@@void SRV_USI_Tasks ( SYS_MODULE_OBJ object ) Maintains the USI&apos;s state machine. This function is used to maintain the USI&apos;s internal state machine and generate callback functions. SRV_USI_Initialize...","GUID-E1673D08-316E-42AF-A8D8-9B2D3E9DABCE.html@@@1.1.1.4.12 DRV_PLC_PHY_Status Function@@@SYS_STATUS DRV_PLC_PHY_Status ( const SYS_MODULE_INDEX index ); Gets the current status of the PLC driver module. This routine provides the current status of the PLC driver module...","GUID-E1E29C95-7504-4508-8208-101D4234420E.html@@@1.2.5.2 Using The Library@@@The CRC library is called to compute the CRC of a given length (8, 16, 32 bits) to append to a data buffer on transmission, and to verify the correctness of a received frame and its CRC. The following...","GUID-E2512892-0285-45E6-9EE1-8D322328461F.html@@@1.1.2.4.23 DRV_G3_MACRT_EnablePhySniffer Function@@@void DRV_G3_MACRT_EnablePhySniffer ( const DRV_HANDLE handle); Enables G3-PLC PHY Sniffer capabilities. This function allows a client to enable G3-PLC PHY Sniffer capabilities. DRV_G3_MACRT_Open must...","GUID-E254FA9C-1F59-4868-98F7-97FC767992D1.html@@@1.1.2.4.10 DRV_G3_MACRT_DataIndCallbackRegister Function@@@void DRV_G3_MACRT_DataIndCallbackRegister ( const DRV_HANDLE handle, const DRV_G3_MACRT_DATA_IND_CALLBACK callback ); Allows a client to set a G3 MAC RT data indication event handling function for the...","GUID-E2ED8330-D71B-40DE-B3A9-FF38FCC655F7.html@@@1.1.2.4.63 MAC_RT_TONE_MAP_RESPONSE Struct@@@typedef struct { MAC_RT_MOD_SCHEME modScheme; MAC_RT_MOD_TYPE modType; uint8_t txGain; uint8_t txRes; MAC_RT_TONE_MAP toneMap; uint8_t reserved1; uint8_t lqi; MAC_RT_TX_COEF txCoef; uint8_t reserved2...","GUID-E34B89AE-146E-4416-8D1D-5CD2075F5A80.html@@@1.1.1.4.22 DRV_PLC_PHY_EXCEPTION_CALLBACK Typedef@@@typedef void ( *DRV_PLC_PHY_EXCEPTION_CALLBACK )( DRV_PLC_PHY_EXCEPTION exception, uintptr_t context ); Pointer to a PLC Driver Exceptions Event handler function. This data type defines the required...","GUID-E37C0C1C-261E-4F62-B8C3-048B887D0C37.html@@@1.3.1.3.13 Waveform Capture Function Usage Example@@@The waveform capture feature is a powerful tool allowing Core 0 to access the metrology samples. The data can be processed by the Demo Meter Application running on Core 0, or can be sent to an...","GUID-E458DE6E-09B4-48E0-8F8D-6FD44C424918.html@@@1.3.1.3.6.5 Meter Demo Commands Description and Examples@@@...","GUID-E467AA51-4BBE-4E17-A290-7C8C7B73AF9D.html@@@1.1.1.4.16 DRV_PLC_PHY_INIT Struct@@@typedef struct { /* Identifies the HAL API set to be used by the driver to access * peripherals. */ DRV_PLC_HAL_INTERFACE *plcHal; /* Number of clients */ size_t numClients; /* PLC Profile */ uint8_t...","GUID-E488F078-8FB6-492B-B70B-6C19B06A1FAA.html@@@1.2.8.4.4 SRV_RSERIAL_SerialSetPIB Function@@@uint8_t* SRV_RSERIAL_SerialSetPIB ( DRV_RF215_TRX_ID trxId, DRV_RF215_PIB_ATTRIBUTE pibAttr, uint8_t pibSize, DRV_RF215_PIB_RESULT pibResult, size_t* pMsgLen ); Serializes a response to a set PIB...","GUID-E48D68C2-6500-4E9F-9C6B-0DB0CF563012.html@@@1.3.1.3.6.5.12 Waveform Data Command@@@The \u201CBUF\u201D command allows to access the metrology samples being captured and processed. The metrology library must be previously configured through the control registers \u201CCAPTURE_CTRL\u201D...","GUID-E64151E5-311B-4866-A4CC-6D01A162D076.html@@@1.1.3.2 Using The Library@@@The quantities available in the Metrology Module make observable all basic components required to completely define or derive all power system measurement quantities for most currently used...","GUID-E686C5C8-EF4D-4882-A3B6-BF5F7BA60582.html@@@2.10 Application Coding@@@Now, you have the MPLAB\u00AE Harmony components configured for a PLC application. The Getting-Started demo implements a simple PLC Transmission application. This application is written using the API&apos;s...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E8CD3395-46A1-47EA-AD1A-580CE23A706E.html@@@1.2.10.4.6 SRV_RANDOM_Get128bits Function@@@void SRV_RANDOM_Get128bits ( *rndValue ); Returns a random value of 128 bits. This function returns a random value of 128 bits. None. Param Description rndValue Pointer to an array to return the...","GUID-E8DB02F0-91A9-4650-AD55-7583FDCE6EF1.html@@@1.1.3.4.7 DRV_METROLOGY_IntegrationCallbackRegister Function@@@DRV_METROLOGY_RESULT DRV_METROLOGY_IntegrationCallbackRegister ( DRV_METROLOGY_CALLBACK callback ); Allows a client to set a metrology integration event handling function for the driver to call back...","GUID-E9F1A57F-112B-48C1-BA59-D53D58162D10.html@@@1.1.3.4.12 DRV_METROLOGY_GetControlByDefault Function@@@DRV_METROLOGY_CONTROL * DRV_METROLOGY_GetControlByDefault ( void ); Get the pointer to the control registers defined by default via the Microchip Code Configurator (MCC) included in Harmony 3...","GUID-EA5D665E-E1F1-47E9-940F-2C5CEB54AE9B.html@@@1.1.2.4.62 MAC_RT_HEADER Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Frame Control Information */ MAC_RT_FRAME_CONTROL frameControl; /* Sequence Number */ uint8_t sequenceNumber; /* Destination PAN Identifier...","GUID-EB1A9B64-78B6-400C-B267-752684F5BBFE.html@@@1.3.1.3.6.5.1 Commands for Accessing the Metrology Registers@@@These commands allow the user to interact with the metrology registers (read the Microchip \u201CPIC32CXMTx Metrology Data Sheet\u201D for a detailed description of the metrology control registers). Take into...","GUID-EB2FF372-3E82-4F17-8A72-E36EFEFD1B6A.html@@@1.1.1.4.4 DRV_PLC_PHY_TxRequest Function@@@void DRV_PLC_PHY_TxRequest ( const DRV_HANDLE handle, DRV_PLC_PHY_TRANSMISSION_OBJ *transmitObj ); Allows a client to transmit PLC PHY data through Power Line (PLC). This routine sends a new data...","GUID-EB8372C5-89A0-4063-B212-93D39E201E1C.html@@@1.1.3.4.24 DRV_METROLOGY_StartHarmonicAnalysis Function@@@void DRV_METROLOGY_StartHarmonicAnalysis ( uint8_t harmonicNum, DRV_METROLOGY_HARMONIC *pHarmonicResponse ); Starts the harmonic Analysis process. This routine configures the metrology library to...","GUID-EBECB932-B255-4A3F-8E4F-3A864216394C.html@@@1.1.4.4.26 DRV_RF215_FSK_MOD_ORD Enum@@@typedef enum { /* 2-FSK. Frequency deviations: {-fdev, +fdev} */ FSK_MOD_ORD_ 2F SK = 0 , /* 4-FSK. Frequency deviations: {-fdev, -fdev/3, +fdev/3, +fdev} */ FSK_MOD_ORD_ 4F SK = 1 , }...","GUID-EC8301E5-93D5-4777-8700-FDEB4DBEB360.html@@@1.2.1.4.1.5 SRV_PLC_PCOUP_BRANCH Enum@@@typedef enum { /* Main Transmission Branch */ SRV_PLC_PCOUP_MAIN_BRANCH, /* Auxiliary Transmission Branch */ SRV_PLC_PCOUP_AUXILIARY_BRANCH, } SRV_PLC_PCOUP_BRANCH; List of possible transmission...","GUID-ECB8A0AB-C653-4410-A091-91D5F02301F8.html@@@1.2.13.4.3 SRV_LOG_REPORT_Buffer Function@@@void SRV_LOG_REPORT_Buffer ( SRV_LOG_REPORT_LEVEL logLevel, const uint8_t *buffer, uint32_t bufferLength, const char *info, ... ); Reports log information with a buffer. This function reports log...","GUID-ED53495E-E570-4FBC-9472-16BCF057AD77.html@@@1.1.2.4.3 DRV_G3_MACRT_Close Function@@@void DRV_G3_MACRT_Close ( const DRV_HANDLE handle); Closes an opened instance of the G3 MAC RT driver. This routine closes an opened instance of the G3 MAC RT driver, invalidating the handle. A new...","GUID-ED8A5FFE-0477-4012-A3C5-E3CB8490C201.html@@@2.6 Clock Configuration@@@Start Clock Manager from Plugins drop-down menu Figure .\u2000 Start Clock Manager The application demo can work with default clock configuration Verify that PLLACK0 is 20000000 Hz Verify that PLLACK1 is...","GUID-EDB3D0B3-3F3F-42A7-ABCB-F42A6AE36965.html@@@1.1.3.4.37 DRV_METROLOGY_HARMONIC Struct@@@typedef struct { double Irms_A_m; double Irms_B_m; double Irms_C_m; double Irms_N_m; double Vrms_A_m; double Vrms_B_m; double Vrms_C_m; } DRV_METROLOGY_HARMONIC; Identifies the result of the Harmonic...","GUID-EE14C3EE-F360-4389-AEBC-3424A4CC5EC6.html@@@1.3.1.3.6.2 Terminal Interface Notes@@@The interface does not differentiate between uppercase and lowercase. The command line must not be longer than 80 characters. In the provided examples, the user inputs are highlighted in bold...","GUID-EE46783A-E2A0-48C2-B479-6436C638C41B.html@@@1.2.1.4.2.1 SRV_PCOUP_Get_Default_Channel Function@@@DRV_PLC_PHY_CHANNEL SRV_PCOUP_Get_Default_Channel ( void ); Get the default PRIME channel. This function allows to get the PRIME channel used by default, which is configured through MCC of PLC Driver...","GUID-EE53EE94-8EDB-4740-AE6B-F8C1E3277BC5.html@@@1.1.1.4.24.10 DRV_PLC_PHY_RECEPTION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to received data buffer */ uint8_t *pReceivedData; /* Instant when frame was received (end of message) referred to 1us PHY counter */...","GUID-EE9DB5C9-8049-4860-B068-54DD0CFFDBA8.html@@@1.2.4.4.4 SRV_PVDDMON_Start Function@@@void SRV_PVDDMON_Start ( SRV_PVDDMON_CMP_MODE cmpMode ); Start the PVDD Monitor service. This routine starts the PVDD Monitor service, configuring the ADC plib and setting the comparison mode. Param...","GUID-EEC710D4-41F0-4CBF-88C6-9DDAF6BBE7E5.html@@@1.1.2.3 Configuring The Library@@@G3 MAC RT Driver library is configured via MCC. Below is the snapshot of the MCC configuration window for G3 MAC RT driver and brief description. Figure .\u2000 G3 MAC RT Driver configuration options PLC...","GUID-EF398ECF-CD01-4199-8C4D-0C410898C27C.html@@@1.2.1.4.1 Library Interface (G3-PLC)@@@If the PLC Driver uses G3-PLC PHY, the PLC PHY Coupling service library provides the following interfaces: Functions Name Description SRV_PCOUP_Get_Config Get the PLC PHY Coupling parameters for the...","GUID-EF3D4902-DC9E-4B49-BC9E-0909D536F8CF.html@@@1.1.4.4.34 DRV_RF215_PIB_ATTRIBUTE Enum@@@typedef enum { /* RF device identifier (read-only). 16 bits */ RF215_PIB_DEVICE_ID = 0x0000 , /* RF PHY layer firmware version number (read-only). * 6 bytes (see DRV_RF215_FW_VERSION) */...","GUID-EF7C9BEE-84AC-4C58-A290-67290AA70448.html@@@1.3.1.3.6.5.1.1 Control Registers@@@The \u201CDCR\u201D, \u201CDCW\u201D and \u201CDCM\u201D commands allow the user to read and write (modify) the metrology control registers. \u201CDCW\u201D is used to write one register and \u201CDCM\u201D to write several registers. Examples...","GUID-EFF5C0F3-5850-4B70-A74E-EF32D29908CC.html@@@1.3.1.3.1 Abbreviations and Acronyms@@@Table 1-1.\u2000 Abbreviations and Acronyms Abbreviation Description ADC Analog-to-Digital Converter consisting of a PGA, a second-order \u0394/\u03A3 modulator and followed by an integrated third-order sinc3...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F053AFD0-4BA9-4ACE-B7CB-7C7A48FB0E0F.html@@@1.2.1.4.2.2 SRV_PCOUP_Get_Channel_Config Function@@@SRV_PLC_PCOUP_CHANNEL_DATA * SRV_PCOUP_Get_Channel_Config(DRV_PLC_PHY_CHANNEL channel); Get the PLC PHY Coupling parameters for the specified PRIME channel. This function allows to get the PLC PHY...","GUID-F0E01A8D-D874-42B6-AAC0-6A3A4F30A8AF.html@@@1.2.8.4.7 SRV_RSERIAL_SetTxHandle Function@@@void SRV_RSERIAL_SetTxHandle (DRV_RF215_TX_HANDLE txHandle); Sets the TX handle for the last TX request. Sets the TX handle returned from DRV_RF215_TxRequest for the last TX request...","GUID-F1641949-E57A-4A42-A9FD-2DB145313377.html@@@1.2.11.4.9 CIPHER_Wrapper_EaxDecrypt Function@@@int32_t CIPHER_Wrapper_EaxDecrypt ( const uint8_t *iv, uint32_t ivLen, const uint8_t *hdr, uint32_t hdrLen, uint8_t *msg, uint32_t msgLen, const uint8_t *tag, uint32_t tagLen) Decrypts a message using...","GUID-F2657150-3DEB-4EEC-B99F-22FCD8A400C0.html@@@1.2.6 USI Service@@@The Smart Energy USI (Unified Serial Interface) Service is a multi-instance buffer model based driver interface which can be used in conjuction with another Smart Energy services/drivers to...","GUID-F2925ACF-B9D7-43CC-830D-549364A186D6.html@@@1.1.2.4.40 MAC_RT_STATUS Enum@@@typedef enum { MAC_RT_STATUS_SUCCESS = 0x00 , MAC_RT_STATUS_CHANNEL_ACCESS_FAILURE = 0xE1 , MAC_RT_STATUS_DENIED = 0xE2 , MAC_RT_STATUS_INVALID_INDEX = 0xF9 , MAC_RT_STATUS_INVALID_PARAMETER = 0xE8...","GUID-F2B0A336-0750-45E6-84D5-95A673FC4271.html@@@1.2.1.2.1 Using The Library (G3-PLC)@@@For G3-PLC, SRV_PCOUP_Set_Config has to be called once the PLC Driver is ready (binary loaded to PLC Device) and before any transmission is requested. Each transmission branch (main or auxiliary) is...","GUID-F30F0F4B-671B-4E30-B8D4-2A43484972B3.html@@@1.2.9.2 Using The Library@@@There is no specific API associated to the SPI Splitter Service, so the user doesn&apos;t have to use it directly. Simply, when this service is used, the PLC Driver ( PHY or G3 MACRT ) and RF215 Driver...","GUID-F3B4D4E5-0BE3-42AB-8080-D04E58F54789.html@@@1.1.1.3 Configuring The Library@@@PLC PHY Driver library should be configured via MCC. Below is the snapshot of the MCC configuration window for PLC PHY driver and brief description. Figure .\u2000 PLC PHY Driver configuration options PLC...","GUID-F3DA568F-1791-4DD6-9397-5528439DEEEE.html@@@1.1.2.4.7 DRV_G3_MACRT_GetTimerReference Function@@@uint32_t DRV_G3_MACRT_GetTimerReference ( const DRV_HANDLE handle ); Gets the internal timer reference from PLC transceiver, in microseconds. PLC transceiver has an internal 32-bit counter which is...","GUID-F3FE2095-9FA4-45E3-844F-B6285B0A1827.html@@@1.2.13.1 How the Library Works@@@This library does not need to be neither initialized nor maintained periodically. It simply receives data, formats it and passes it to the Debug system service. Once the Debug system service has been...","GUID-F4350434-961E-48DA-B9C4-71FD626436FF.html@@@1.2.12.2 Using The Library@@@The Queue library is called to initialize a queue, add and remove elements from it and reading elements. The following example illustrates how the Queue service is used by the TCP/IP - G3 ADP/MAC...","GUID-F4BCF0E3-9D08-4CB8-8EBE-71CEAB09EF04.html@@@1.1.4.4.41 DRV_RF215_TX_REQUEST_OBJ Struct@@@typedef struct { /* TX time (PPDU start), referred to system 64-bit time counter */ uint64_t timeCount; /* Pointer to PSDU data to be transmitted */ uint8_t* psdu; /* TX time mode (absolute/relative)...","GUID-F4E771A8-0BDB-44BF-A9B9-16A8093D4FF6.html@@@1.2.11.4 Library Interface@@@The Security service library provides the following interfaces: Name Description CIPHER_Wrapper_CmacStart Sets the CMAC key and prepares to authenticate the input data CIPHER_Wrapper_CmacUpdate Feeds...","GUID-F4EC3F38-1E03-4D87-95E2-6F1C71FAAEA1.html@@@1.2.12.4.1 SRV_QUEUE_Init Function@@@void SRV_QUEUE_Init ( SRV_QUEUE *queue, uint16_t capacity, SRV_QUEUE_TYPE type ); Initializes a queue. This function initializes a queue. None. Param Description queue Pointer to the queue to be...","GUID-F50090FB-DBF8-46D9-9FD2-67885497D19A.html@@@1.3.1.3.6.3 Application Commands: Learning by Doing@@@The fastest way to understand the features implemented in the Demo Meter application is to open the terminal interface and to test the available commands. It is also possible to use the GUI, but the...","GUID-F53E33D9-E512-4FD2-81CB-BA7B21D23E0E.html@@@1.1.4.1 How the Library Works@@@The RF215 driver library is a multi-client, single-instance based driver interface. The RF215 driver library communicates with a RF215 transceiver using an SPI port, Direct Memory Access (DMA) and the...","GUID-F65CE03F-4B50-4092-AB96-CA7DE388B46B.html@@@1.1.1.4.24.9 DRV_PLC_PHY_TRANSMISSION_CFM_OBJ Struct@@@typedef struct { /* Instant when frame transmission ended referred to 1us PHY counter */ uint32_t time; /* RMS_CALC it allows to estimate tx power injected */ uint32_t rmsCalc; /* Tx Result (see &quot;TX...","GUID-F6A847F5-DE70-4CCC-A569-8965B283EFCB.html@@@1.2.11.1 How the Library Works@@@This library does not need to be neither initialized nor maintained periodically. It simply receives a request and performs the cryptographic operation. The security service is a wrapper of...","GUID-F79615A6-B539-4AC6-B6A5-61F185C38ABC.html@@@1.1.2.4.32 DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK Typedef@@@typedef void ( *DRV_G3_MACRT_RX_PARAMS_IND_CALLBACK )( MAC_RT_RX_PARAMETERS_OBJ *pParameters ); Pointer to a G3 MAC RT Driver Event handler function to get parameters from the last received message...","GUID-F7F4F0A8-CB70-40D1-B33F-D308429C74FB.html@@@1.2.10.4.4 SRV_RANDOM_Get32bits Function@@@uint32_t SRV_RANDOM_Get32bits ( void ); Returns a random value of 32 bits. This function returns a random value of 32 bits. None. None. 32-bit random value. uint32_t rndNum = SRV_RANDOM_Get32bits()...","GUID-F7F88BE2-2CCE-41EE-A028-2F8E7F231F59.html@@@1.2.1.4.1.2 SRV_PCOUP_Set_Config Function@@@bool SRV_PCOUP_Set_Config (DRV_HANDLE handle, SRV_PLC_PCOUP_BRANCH branch); Set the PLC PHY Coupling parameters for the specified transmission branch. This function allows to set the PLC PHY Coupling...","GUID-F8BC575D-5E43-4688-8A76-CF6225FEB187.html@@@1.1.4.4.31 DRV_RF215_PHY_CCA_MODE Enum@@@typedef enum { /* Energy above threshold only */ PHY_CCA_MODE_ 1 = 0 , /* Carrier sense only */ PHY_CCA_MODE_ 2 = 1 , /* Energy above threshold and carrier sense */ PHY_CCA_MODE_ 3 = 2 , /* ALOHA. CCA...","GUID-F8E175AB-6812-496F-99B3-005E7E2FC596.html@@@1.2.13.4.4 SRV_LOG_REPORT_LEVEL Enum@@@typedef enum { /* Errors that have the potential to cause a system crash. */ SRV_LOG_REPORT_FATAL, /* Errors that have the potential to cause incorrect behavior. */ SRV_LOG_REPORT_ERROR, /* Warnings...","GUID-F96A42DF-A9A6-436F-A372-16013B197B2C.html@@@1.1.4.4.9 DRV_RF215_SetChannelCallbackRegister Function@@@void DRV_RF215_SetChannelCallbackRegister ( DRV_HANDLE drvHandle, const DRV_RF215_SET_CHANNEL_CALLBACK callback, uintptr_t context ); Allows a client to set an event handling function for the driver...","GUID-F9A46118-1365-4666-88F4-980A97C99850.html@@@1.1.1.4.25.12 DRV_PLC_PHY_RECEPTION_OBJ Struct@@@typedef struct __attribute__ ((packed, aligned( 1 ))) { /* Pointer to received data buffer */ uint8_t *pReceivedData; /* Instant when frame was received (start of message) referred to 1us PHY counter...","GUID-FA4DA82C-D988-46FD-BE3D-AB2DB64220DA.html@@@1.2.8.4.8 SRV_RSERIAL_SerialRxMessage Function@@@uint8_t* SRV_RSERIAL_SerialRxMessage ( DRV_RF215_RX_INDICATION_OBJ* pIndObj, DRV_RF215_TRX_ID trxId, size_t* pMsgLen ); Serializes a received RF frame and its related information. Takes a...","GUID-FA6D55E0-FFF4-4BE5-A80C-C57E20F20172.html@@@1.2.6.4.9 SRV_USI_STATUS Enum@@@typedef enum { SRV_USI_STATUS_UNINITIALIZED, SRV_USI_STATUS_NOT_CONFIGURED, SRV_USI_STATUS_CONFIGURED, SRV_USI_STATUS_ERROR } SRV_USI_STATUS; List of possible values of USI status. This type defines...","GUID-FAC7780A-68D6-4C70-AC4B-25FCF620B196.html@@@1.2.2.4.2 SRV_PSNIFFER_SerialRxMessage Function@@@size_t SRV_PSNIFFER_SerialRxMessage ( uint8_t* pDataDst, DRV_PLC_PHY_RECEPTION_OBJ* pDataSrc ); Serializes a received PLC frame along with its parameters. This function takes an object containing a...","GUID-FB4BC534-FE65-4396-85AA-33E97F8474F2.html@@@1.1.3.4.33 DRV_METROLOGY_PHASE_ID Enum@@@typedef enum { PHASE_A = 1 , PHASE_B = 2 , PHASE_C = 3 , PHASE_T = 5 , PHASE_ID_NUM = PHASE_T } DRV_METROLOGY_PHASE_ID; Line identifier used in the calibration process. Phase A, B and C are used to...","GUID-FB6BD766-E04C-4CD7-84E3-34B9C46BA070.html@@@1.3.1.3.4.1 Requirement@@@The calibration process needs accurate and stable voltage and current sources and loads, which can be provided by a meter test bench like the WECO (or equivalent equipment)...","GUID-FB84DD36-66A1-4AC7-8809-C528890A4B16.html@@@1.1.1.4.24.1 DRV_PLC_PHY_ID Enum@@@typedef enum { PLC_ID_HOST_DESCRIPTION_ID = 0x0100 , PLC_ID_HOST_MODEL_ID = 0x010A , PLC_ID_HOST_PHY_ID = 0x010C , PLC_ID_HOST_PRODUCT_ID = 0x0110 , PLC_ID_HOST_VERSION_ID = 0x0112...","GUID-FBA5ADF9-861F-4690-AAE9-9188BCD3A6AE.html@@@1.2.4.4.1 SRV_PVDDMON_CMP_MODE Enum@@@typedef enum { /* Notify when PVDD level enters the comparison window */ SRV_PVDDMON_CMP_MODE_IN, /* Notify when PVDD level leaves the comparison window */ SRV_PVDDMON_CMP_MODE_OUT, }...","GUID-FBD90D2A-0E60-4648-B014-FA0161280AA5.html@@@1.3.1.3 Metering Demo Running Application@@@...","GUID-FD06DBBC-A4F5-4DA0-98AA-615DFA5C96DB.html@@@1.1.4.4.40 DRV_RF215_RX_INDICATION_OBJ Struct@@@typedef struct { /* RX time (PPDU start), referred to system 64-bit time counter */ uint64_t timeIniCount; /* Pointer to received PSDU data */ uint8_t* psdu; /* PPDU duration in system time counter...","GUID-FD2251A0-0777-429C-BAE8-6E07A93CC7A9.html@@@1.2.12.4.9 SRV_QUEUE_Flush Function@@@void SRV_QUEUE_Flush ( SRV_QUEUE *queue ); Flushes the given queue. This function flushes the given queue. The queue must have been initialized previously with function SRV_QUEUE_Init. Param...","GUID-FDAD4D25-00A7-4854-AC5B-504320568AFB.html@@@1.1.2.4.22 DRV_G3_MACRT_SetCoordinator Function@@@void DRV_G3_MACRT_SetCoordinator ( const DRV_HANDLE handle); Enables G3-PLC coordinator capabilities. This function allows a client to enable G3-PLC coordinator capabilities. DRV_G3_MACRT_Open must...","GUID-FEEBB120-A17C-41E1-B053-F82F4D26B8E0.html@@@1.2.13.4.5 SRV_LOG_REPORT_CODE Enum@@@typedef enum { /* Queue Management errors */ QUEUE_FULL_INSERT_END = 600 , QUEUE_FULL_INSERT_BEFORE = 601 , QUEUE_FULL_INSERT_AFTER = 602 , QUEUE_FULL_INSERT_FIRST = 603 , QUEUE_EMPTY_REMOVE_HEAD =...","GUID-FF588554-E4C6-4178-A019-F342A035D533.html@@@1.2.7.4.3 SRV_RSNIFFER_SerialCfmMessage Function@@@uint8_t* SRV_RSNIFFER_SerialCfmMessage ( DRV_RF215_TX_CONFIRM_OBJ* pCfmObj, DRV_RF215_TX_HANDLE txHandle, DRV_RF215_PHY_CFG_OBJ* pPhyCfgObj, uint16_t paySymbols, uint16_t channel, size_t* pMsgLen )...","GUID-FF6556EE-43F6-41E6-87E4-B10CBEA8DF12.html@@@1.1.1.4.25.2 DRV_PLC_PHY_SCH Enum@@@typedef enum { SCHEME_DBPSK = 0 , SCHEME_DQPSK = 1 , SCHEME_D8PSK = 2 , SCHEME_DBPSK_C = 4 , SCHEME_DQPSK_C = 5 , SCHEME_D8PSK_C = 6 , SCHEME_R_DBPSK = 12 , SCHEME_R_DQPSK = 13 , } DRV_PLC_PHY_SCH...","GUID-FF81D891-3107-4947-ADFB-863EC756E686.html@@@1.1.4.4.13 DRV_RF215_GetPibSize Function@@@uint8_t DRV_RF215_GetPibSize (DRV_RF215_PIB_ATTRIBUTE attr); Gets size of PIB attribute. This routine allows to get the size in bytes of a PIB (PHY Information Base) attribute of the RF215 Driver...","GUID-FFBEFD5F-0FA1-4996-A244-1A9376DC3222.html@@@1.2.12.4.5 SRV_QUEUE_Insert_After Function@@@void SRV_QUEUE_Insert_After ( SRV_QUEUE *queue, SRV_QUEUE_ELEMENT *currentElement, SRV_QUEUE_ELEMENT *element ); Inserts an element into a queue after a given element. This function inserts an element...","cshelp.html@@@Context Sensitive Help@@@..."];
});